<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一章 Java 入门基础及环境搭建</title>
    <url>/java-Introduction-foundation-and-environment-construction/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">
            <p>第一章 Java 入门基础及环境搭建</p>
          </div>

<a id="more"></a>

<p>Java 是当今世界最重要、使用最广泛的计算机语言之一，在多年之前它就巳经拥有这一荣誉。全球每天有超过百万的开发者在用 Java 进行各式各样程序的开发，用 Java 编写的程序因为其硬件环境无关性而越来越受到人们的青睐。</p>
<p>如果你也想成为 Java 开发阵营的一员，那么就跟随教程第 1 章来全面了解一下 Java。本章主要讲述 Java 的一些基础知识及其开发环境的搭建和使用。</p>
<h2 id="本章学习要点"><a href="#本章学习要点" class="headerlink" title="本章学习要点"></a>本章学习要点</h2><div class="note success">
            <p>了解 Java 语言的版本及特点<br>了解学习 Java 的方法<br>掌握 JDK 的安装<br>掌握环境变量的配置<br>熟悉 Java 程序的编写、编译和运行过程<br>了解 Java 虚拟机的作用<br>熟悉 Java 程序的各个组成部分<br>了解 Java 编程规范<br>掌握 Eclipse 创建 Java 程序的方法<br>掌握 Eclipse 调试程序的方法</p>
          </div>

<h2 id="本章内容："><a href="#本章内容：" class="headerlink" title="本章内容："></a>本章内容：</h2><ol>
<li>Java是什么？Java的特点有哪些？</li>
<li>Java薪资待遇如何？就业方向有哪些？</li>
<li>Java JDK下载与安装教程</li>
<li>Java JDK环境变量配置</li>
<li>使用记事本编写运行Java程序</li>
<li>Java编程规范（命名规则）</li>
<li>Java程序的运行过程（执行流程）分析</li>
<li>Java虚拟机（JVM）及Java跨平台原理</li>
<li>Java中JVM、JRE和JDK三者有什么区别和联系？</li>
<li>Java和C/C++到底有什么关系？它们有什么区别？</li>
<li>Java常用开发工具有哪些？</li>
<li>Java Eclipse下载安装教程</li>
<li>使用Eclipse开发第一个Java程序</li>
<li>Java修改Eclipse编辑器字体大小</li>
<li>Java Eclipse如何调试代码</li>
<li>Eclipse快捷键大全</li>
<li>Java初学者容易犯的错误</li>
<li>学习Java前一定要掌握这几个方法，事半功倍！</li>
<li>Java程序员必须知道的学习路线</li>
</ol>
<div class="note info">
            <p>Java是什么？Java的特点有哪些？</p>
          </div>]]></content>
      <categories>
        <category>java</category>
        <category>java基础教程</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础教程</tag>
      </tags>
  </entry>
  <entry>
    <title>java [基础] 教程</title>
    <url>/java-base-contents/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">
            <p>这套教程适用于没有任何 Java 基础，或者基础薄弱的学员，它通俗易懂，并且非常全面，30 天从入门到精通不是神话。（这里是 java [基础] 教程目录页）</p>
          </div>

<a id="more"></a>

<h2 id="java-基础-教程目录"><a href="#java-基础-教程目录" class="headerlink" title="java [基础] 教程目录"></a>java [基础] 教程目录</h2><div class="note success">
            <p>第一章 Java 入门基础及环境搭建  <a href="/java-Introduction-foundation-and-environment-construction">Go</a></p>
          </div>
<div class="note success">
            <p>第二章 Java 程序设计基础 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第三章 Java 流程控制语句 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第四章 Java 字符串处理 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第五章 Java 数字和日期处理 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第六章 Java 内置包装类 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第七章 Java 数组处理 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第八章 Java 类和对象 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第九章 Java 继承和多态 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第十章 Java 异常处理 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第十一章 Java 集合、泛型和枚举 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第十二章 Java 反射机制 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第十三章 Java 输入/输出流 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第十四章 Java 多线程编程 <a href>Go</a></p>
          </div>
<div class="note success">
            <p>第十五章 Java 网络编程 <a href>Go</a></p>
          </div>

<h2 id="关于-Java-语言"><a href="#关于-Java-语言" class="headerlink" title="关于 Java 语言"></a>关于 Java 语言</h2><p>由于 JVM 的支持，使得 Java 成为一种跨平台的编程语言，一次编写，到处运行；换句话说，一段 Java 代码可以不加修改地在 Windows、Linux、Mac OS、UNIX 等平台运行。JVM 是重点学习内容。</p>
<p>在世界编程语言排行榜中，近年来 Java 一直稳居第一名，比第二名的C语言高出几个百分点。</p>
<p>世界编程语言排行榜</p>
<p><img src="/java-base-contents/java-Programming-language-leaderboard.png" alt="图：2018 年 09 月份世界编程语言排行榜"></p>
<p>Java 最初是由 SUN 公司推出的，后来 SUN 公司被 Oracle 公司收购，Java 的版权也就归属了 Oracle。Java 的<a href="https://www.java.com/" target="_blank" rel="noopener">官方网址</a>，你可以在此下载最新版本，关注最新资讯。</p>
<p>Java 是一门半编译型的语言，Java 源码先被编译为字节码文件（中间文件），然后再由虚拟机（JVM）解释执行，这肯定比直接编译成二进制文件的运行速度要慢一些。</p>
<p>不过 Java 经过了多年的性能调优，再加上即时编译技术（JIT）的加持，性能已经相当出色了，甚至成了传统编译器的竞争对手，某些情况下甚至还超出了传统编译器（整体上还是不及 C/C++ 的）。</p>
<h2 id="Java-的应用"><a href="#Java-的应用" class="headerlink" title="Java 的应用"></a>Java 的应用</h2><p>Java 是一门用途广泛的语言，不但可以用来开发网站后台、PC 客户端和 Android APP，还在数据分析、网络爬虫、云计算领域大显身手。</p>
<p>不过，Java 还是与目前最火热的机器学习（人工智能）失之交臂，这个领域是 Python 的天下。</p>
<h2 id="Java-学习建议"><a href="#Java-学习建议" class="headerlink" title="Java 学习建议"></a>Java 学习建议</h2><p>从学术的角度讲，Java 是一门面向对象的编程语言，初学者需要花费不少时间来熟悉面向对象的概念、语法和编程思想，有不理解的地方请大家一定要坚持，多花时间编写代码自然会豁然开朗。只有一步一个脚印，踏踏实实学习，才能从零基础到入门，再到精通。</p>
<p>大家在学习的过程中也要多看几套 Java 教程，不要死啃一本书，这样才能才能博采众长，进步更快。</p>
]]></content>
      <categories>
        <category>java</category>
        <category>java基础教程</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建个人博客系列：部署上线篇</title>
    <url>/hexo-deploy-to-VPS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文主要介绍了在将 Hexo 博客部署上线过程中将会遇到的一系列问题。</p>
<p>第一章主要介绍了将 Hexo 部署到 VPS 的方案，使得在本地推送更新后自动同步线上内容，部署过程主要分为三步走，首先从本地推送更新到远程仓库，然后触发 Git Hooks 将静态资源部署到 Web 根目录，最后启动 Nginx 服务器。</p>
<p>第二章主要介绍了如何分析页面加载性能瓶颈，并提供了通过CDN和代码压缩合并等方法来优化页面加载速度的方案。</p>
<p>第三章主要介绍了如何将站点提交到各大搜索引擎收录，并讨论了SEO相关话题。</p>
<p>后续章节则零散的介绍了为站点添加404页面和RSS链接。</p>
<a id="more"></a>

<p>部署个人博客主要有两种方案，一种是托管到Github Pages上，一种是部署到自己的VPS上。</p>
<p>对于Github Pages，优势在于完全免费，部署方便快捷，适用于新手，但一个Github账号只能用来部署一个个人站点。另外，Github服务器在国外，理论上从国内加载站点资源会有延迟，并且由于GFW的存在有时候可能访问不到站点。当然，可以通过Coding Pages来实现国内外双线部署来解决这个问题，详情可以参考网上相关教程。</p>
<p>对于VPS，需要独立购买域名和服务器，还需要熟悉Linux系统的基本操作，但同时也提供了更广的自由度。本篇主要介绍使用VPS部署博客的方案。</p>
<h1 id="VPS自动部署"><a href="#VPS自动部署" class="headerlink" title="VPS自动部署"></a>VPS自动部署</h1><div class="note info">
            <p>本章节参考 <a href="https://blog.yizhilee.com/post/deploy-hexo-to-vps/" target="_blank" rel="noopener">荔枝 | 通过 Git Hooks 自动部署 Hexo 到 VPS</a></p>
          </div>

<p>使用VPS部署博客的主要思路分为三步：</p>
<ul>
<li><code>hexo deploy</code> 的时候通过git把 public 目录下的博客静态资源推送到远程仓库中</li>
<li>推送更新时触发 Git Hooks 将静态资源克隆到网站根目录下</li>
<li>使用 nginx 作为Web服务器提供对博客的 HTTP 访问</li>
</ul>
<p>本文基于腾讯云 Ubuntu 16.04实现自动部署。</p>
<h2 id="远程仓库推送"><a href="#远程仓库推送" class="headerlink" title="远程仓库推送"></a>远程仓库推送</h2><p>在推送静态资源之前需要做些准备工作，包括基于公钥的ssh通信以及VPS用户和权限管理。</p>
<div class="note info">
            <p>在进行下一步操作之前请先确认本地已经安装了 <a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a> 和 <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a>。</p>
          </div>

<p>为什么要实现基于公钥的ssh通信？</p>
<p>通常可以使用密码和公钥两种方式登陆VPS，如果在VPS上为某用户添加了授权公钥，则之后每次以该用户身份登陆或者获取授权就无须再重复输入密码了。<strong>Hexo的git自动部署插件不支持使用密码验证授权</strong>，所以要实现基于公钥的ssh通信。</p>
<p>如果尚未生成ssh公钥对，执行如下命令生成新的公钥对：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh-keygen</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>无须设置公钥密码，否则每次通过公钥登陆的时候都要输入密码。</p>
          </div>

<p>如果是Windows操作系统，此时会在 C:\Users\Username\.ssh\ 目录下生成密钥文件 id_rsa 和公钥文件 id_rsa.pub。</p>
<p>腾讯云的默认登陆用户名为ubuntu，在设置根用户密码之前无法切换为根用户，可以通过 <code>sudo passwd</code> 命令来设置根用户密码，然后通过 <code>su</code> 命令切换到根用户身份。</p>
<p>以管理员权限执行如下命令新建用户并设置密码：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo adduser git</span><br><span class="line"><span class="variable">$ </span>sudo passwd git</span><br></pre></td></tr></table></figure>

<p>这一步虽然不是必须的，但一般情况下都会单独新建git用户专用于git代码同步，并将远程仓库放在git用户目录下。</p>
<p>为方便后续以git用户身份获取管理员权限来新建目录，此处为其添加管理员操作权限：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo gpasswd -a git sudo</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>该命令指的是将 git 用户添加到 sudo用户组中，也就使得git用户有了sudo用户组的操作权限。</p>
          </div>

<p>在本地Git Bash中执行如下命令将ssh公钥上传到VPS：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">$ ssh-<span class="keyword">copy</span>-<span class="built_in">id</span> git@yearito.cn</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>该命令会自动把默认ssh公钥id_rsa.pub中的内容拷贝到git用户目录下的 .ssh/authorized_keys文件中。</p>
          </div>

<p>此时在本地cmd中用git用户登陆VPS将会直接成功登陆而无须输入密码：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh git<span class="variable">@yearito</span>.cn</span><br></pre></td></tr></table></figure>

<p>在git用户目录下执行如下命令创建远程仓库：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir blog.yearito.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog.yearito.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git init --bare</span></span><br></pre></td></tr></table></figure>

<p>在本地站点根目录下执行以下命令安装相关依赖：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在本地站点配置文件中添加git远程仓库信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@yearito.cn:~/blog.yearito.git</span><br></pre></td></tr></table></figure>

<p>此时在站点根目录下执行 <code>hexo deploy</code> 命令，如果最后一行出现如下提示：</p>
<blockquote>
<p><span style="color: green">INFO</span>  Deploy done: git</p>
</blockquote>
<p>则说明已经实现本地和VPS远程仓库之间的资源同步了。</p>
<div class="note info">
            <p>需要注意的是，同步的仅是 public 目录下的静态资源文件，而非整个项目目录。</p>
          </div>

<p>如果在部署过程中出现如下提示：</p>
<blockquote>
<p>The file will have its original line endings in your working directory. <br><br>warning: LF will be replaced by CRLF in tags/Hexo/index.html.</p>
</blockquote>
<p>这是由 Windows 操作系统和 Linux 操作系统中行尾换行符不一致所引起的，可以通过执行 <code>git config core.autocrlf false</code> 来关闭告警。</p>
<h2 id="Git-Hooks-拷贝资源"><a href="#Git-Hooks-拷贝资源" class="headerlink" title="Git Hooks 拷贝资源"></a>Git Hooks 拷贝资源</h2><p>此时VPS上的远程仓库只是一个裸仓库，无法用于搭建站点服务器。所以我们需要在推送更新的同时触发Git Hooks钩子，来从远程仓库中克隆出完整的博客资源放到Web服务器根目录下。</p>
<p>首先创建Web根目录：</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">$ sudo <span class="built_in">mkdir</span> /<span class="built_in">var</span>/www/blog.yearito -p</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>其中，-p 参数表示若所要建立目录的上层目录目前尚未建立，则一并建立上层目录。</p>
          </div>

<p>然后改变Web根目录的所有者和所有工作组，以使git用户拥有对该目录的操作权限：</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">$ sudo chown g<span class="symbol">it:gi</span><span class="built_in">t</span> -R /<span class="built_in">var</span>/www/blog.yearito</span><br></pre></td></tr></table></figure>

<p>打开到远程仓库中的hooks目录下，默认该目录下是没有post-receive钩子文件的，直接通过 <code>vim post-receive</code> 新建该文件并添加以下代码：</p>
<figure class="highlight bash"><figcaption><span>~/blog.yearito.git/hooks/post-receive</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"post-receive hook is running..."</span></span><br><span class="line"></span><br><span class="line">GIT_REPO=/home/git/blog.yearito.git</span><br><span class="line">TMP_GIT_CLONE=/tmp/blog.yearito</span><br><span class="line">PUBLIC_WWW=/var/www/blog.yearito</span><br><span class="line"></span><br><span class="line">rm -rf <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</span><br><span class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>为什么不直接将裸仓库克隆到Web根目录下呢？我之前也一直被这个问题困扰，感觉先克隆到 tmp 目录再拷贝到Web根目录是多此一举。后来我觉得可能是出于项目安全的考虑，在执行cp命令的时候，.git作为隐藏目录不会被拷贝到Web根目录下，也就避免了将整个仓库历史暴漏在Web服务中。</p>
          </div>

<p>输入 <code>:wq</code> 保存并退出，此时可以看到 post-receive 文件只有读写权限，没有执行权限：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/post-receive-before.png" alt="修改 post-receive 权限前" title="修改 post-receive 权限前"></p>
<p>执行以下代码：</p>
<figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">chmod +x post-<span class="keyword">receive</span></span><br></pre></td></tr></table></figure>

<p>执行后可以看到 post-receive 已获得执行权限：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/post-receive-after.png" alt="修改 post-receive 权限后" title="修改 post-receive 权限后"></p>
<p>然后在本地站点目录下执行 <code>hexo deploy -g</code>，如果出现我们之前设定好的 <code>remote: post-receive hook is running...</code> 提示，且没有其他权限错误，则说明钩子正确执行了，从远程仓库拷贝资源成功，此时打开 /var/www/blog.yearito/ 目录可以看到完整的博客静态资源文件。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/auto-deploy-success.png" alt="Git Hooks 拷贝资源成功" title="Git Hooks 拷贝资源成功"></p>
<h2 id="配置Nginx服务器"><a href="#配置Nginx服务器" class="headerlink" title="配置Nginx服务器"></a>配置Nginx服务器</h2><p>将静态资源部署到Web服务器根目录后，接下来要做就是通过配置Nginx来启动Web服务。</p>
<p>切换到根用户并安装Nginx：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ apt-<span class="builtin-name">get</span> install nginx</span><br></pre></td></tr></table></figure>

<p>成功安装后可以通过 <code>nginx -v</code> 查看Nginx版本信息，以及可以通过 <code>service nginx status</code> 或者 <code>systemctl status nginx</code> 命令来查看Nginx运行状态。</p>
<p>修改nginx配置文件内容，启动80端口的HTTP服务到Web根目录，此处提供最简配置作为参考，读者可以在此基础上自定义：</p>
<figure class="highlight nginx"><figcaption><span>/etc/nginx/nginx.conf</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attribute">user</span> www-data;</span><br><span class="line"><span class="attribute">worker_processes</span> auto;</span><br><span class="line"><span class="attribute">pid</span> /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">  <span class="attribute">worker_connections</span>  <span class="number">768</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  <span class="attribute">include</span>  mime.types;</span><br><span class="line">  <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">  <span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>  <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">root</span> /var/www/blog.yearito;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时通过 <code>nginx -s reload</code> 重新加载配置文件，如果此前Nginx服务未启动，则直接执行 <code>nginx</code> 命令即可。</p>
<p>执行以下命令设置Nginx开机自动启动：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="builtin-name">enable</span> nginx</span><br></pre></td></tr></table></figure>

<p>此外提供一些其他的Nginx语法命令：</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">nginx -s stop <span class="string">//</span>强制关闭</span><br><span class="line">nginx -s <span class="keyword">quit</span> <span class="string">//</span>完成当前服务后关闭</span><br><span class="line">nginx -s <span class="keyword">reload</span> <span class="string">//</span>重新加载配置文件</span><br></pre></td></tr></table></figure>

<p>在浏览器中输入VPS域名，即可打开个人博客站点，至此实现了在本地推送更新后自动同步部署线上站点内容的功能。</p>
<h1 id="页面加载性能"><a href="#页面加载性能" class="headerlink" title="页面加载性能"></a>页面加载性能</h1><p>博客上线后，需要关注页面的加载速度。<a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">Google PageSpeed Insights</a> 可用于帮助分析网页加载速度瓶颈，该网站将会针对指定域名进行在线测试，并提供一份详细的页面加载分析报告，报告中还会根据页面资源加载情况给出合理的优化建议及预期优化效果，因此用户可以有的放矢的进行性能优化专项整改。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/pagespeed-insights.png" alt="Google PageSpeed Insights" title="Google Pagespeed Insights"></p>
<p>虽然可以从报告中了解到站点的加载性能瓶颈，但是，报告中仅是提供优化建议，具体的落实还须自己实施。本章节主要介绍CDN加速和代码合并压缩两种比较常见的优化方案。</p>
<h2 id="CDN加速"><a href="#CDN加速" class="headerlink" title="CDN加速"></a>CDN加速</h2><p>在控制台的Network Tab页中可以查看到页面加载瀑布流。在此需要勾选 Disable cache 以避免缓存干扰分析。另外，在所有静态资源中，对加载速度影响较大且存在大幅优化空间的主要还是JS脚本，所以我们先拿它开刀。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/before-optimize.png" alt="页面加载瀑布流" title="页面加载瀑布流"></p>
<p>首先理解一下底部信息栏中的这行文字：</p>
<blockquote>
<p><span style="font-family: Arial">21 / 50 requests | 518 KB / 818KB transferred | Finish: 8.44 s | <span style="color: blue">DOMContentLoaded: 4.36 s</span> | <span style="color: red">Load: 6.80 s</span></span></p>
</blockquote>
<p>主要包括以下几条信息：</p>
<ul>
<li>加载页面总共发起了50次请求，下载了818 KB资源，其中JS脚本资源共计518 KB，占据了21次请求。</li>
<li>在 4.36 s 时DOM树渲染完毕（蓝线），此时已经可以看到正常的页面，由于JS脚本会阻塞DOM解析，所以这段时间是包含了JS脚本的下载与执行过程的。</li>
<li>在 6.80 s 时所有资源加载完毕（红线），包括异步的脚本和其他非阻塞的页面资源，如图片、CSS文件等。</li>
<li>在 8.44 s 时所有HTTP请求响应完毕，包括XHR请求。</li>
</ul>
<div class="note info">
            <p>关于 Finish / DOMContentLoaded / Load 的讨论请参见 <a href="https://stackoverflow.com/questions/31729240/how-to-analyzing-page-speed-in-chrome-dev-tools" target="_blank" rel="noopener">How to analyzing Page Speed in Chrome Dev tools</a> 和 <a href="https://segmentfault.com/q/1010000011840948/a-1020000011947156" target="_blank" rel="noopener">chrome devtools 中 network 一栏中的 Finish 时间代表着什么</a>，两者说法不一致，我倾向于认同后者的观点。</p>
          </div>

<p>分析以上页面加载瀑布流可知，DOM树的解析渲染主要是被从VPS本地下载 jquery、velocity、fancybox 等脚本所滞后，所以对症下药，我们可以改为从开源公共CDN加载脚本。</p>
<p>对于在站点中用到的三方插件，在主题配置文件中为其添加CDN加载源：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="attr">jquery:</span> <span class="string">//cdn.jsdelivr.net/npm/jquery@2.1.3/dist/jquery.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">fancybox:</span> <span class="string">https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3.5.2/dist/jquery.fancybox.min.js</span></span><br><span class="line">  <span class="attr">fancybox_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3.5.2/dist/jquery.fancybox.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">velocity:</span> <span class="string">https://cdn.jsdelivr.net/npm/velocity-animate@1.2.1/velocity.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">velocity_ui:</span> <span class="string">//cdn.jsdelivr.net/npm/velocity-animate@1.2.1/velocity.ui.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">fontawesome:</span> <span class="string">//cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">algolia_instant_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js</span></span><br><span class="line">  <span class="attr">algolia_instant_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">pace:</span> <span class="string">//cdn.jsdelivr.net/npm/pace-js@1.0.2/pace.min.js</span></span><br><span class="line">  <span class="attr">pace_css:</span> <span class="string">//cdn.jsdelivr.net/npm/pace-js@1.0.2/themes/blue/pace-theme-minimal.css</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">pangu:</span> <span class="string">//cdn.jsdelivr.net/npm/pangu@3.3.0/dist/browser/pangu.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">valine:</span> <span class="string">https://cdn.jsdelivr.net/npm/valine@1.3.3/dist/Valine.min.js</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>主题配置文件中给出的CDN链接示例的版本可能已经落后很久了，请查找并使用最新版的插件CDN链接。</p>
          </div>

<p>比较常用的开源项目CDN服务商主要有unpkg、bootcdn、 cdnjs、jsdelivr 和 cloudflare，用户可以自行在浏览器中检测资源下载速度后做取舍。本站中主要使用 jsdelivr 提供的CDN加速服务。</p>
<p>使用CDN加速后页面加载瀑布流如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/after-optimize.png" alt="CDN加载三方插件后的页面加载瀑布流" title="CDN加载三方插件后的页面加载瀑布流"></p>
<p>DOM树的渲染完成时间缩减到了654 ms，<strong>也就是说刷新页面后654 ms后就可以看到页面内容了，相比优化前的4.36 s 有了极大的提升</strong>。</p>
<p>如果开启了Live2D看板娘，一样可以通过将脚本来源改为CDN来完成性能优化：</p>
<figure class="highlight diff"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">  # Live2D</span><br><span class="line">  ## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="line">  live2d:</span><br><span class="line">    enable: true</span><br><span class="line">    pluginRootPath: live2dw/ # Root path of plugin to be on the site (Relative)</span><br><span class="line">    pluginJsPath: lib/ # JavaScript path related to plugin's root (Relative)</span><br><span class="line">    pluginModelPath: assets/ # Relative model path related to plugin's root (Relative)</span><br><span class="line"><span class="deletion">-   scriptFrom: local # Default</span></span><br><span class="line"><span class="addition">+   scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">    tagMode: true # Whether only to replace live2d tag instead of inject to all pages</span><br><span class="line">    log: false # Whether to show logs in console</span><br><span class="line">    model:</span><br><span class="line">      use: live2d-widget-model-shizuku  # 萌系少女</span><br><span class="line">    display:</span><br><span class="line">      position: left</span><br><span class="line">      width: 100</span><br><span class="line">      height: 180</span><br><span class="line">    mobile:</span><br><span class="line">      show: false</span><br><span class="line">    react:</span><br><span class="line">      opacityDefault: 0.7 # 默认透明度</span><br></pre></td></tr></table></figure>

<p>另外，我们注意到，处理 hotjar 的脚本共计耗时 5 s，那么该脚本是否影响到了页面加载性能呢？事实上没有，在HTML结构树中可以找到 hotjar 的脚本引入代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://static.hotjar.com/c/hotjar-1061283.js?sv=6"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中 <code>async</code> 属性意味着脚本将以异步形式加载，不会阻塞DOM树的解析和渲染。也就是说该脚本只使得 Load 的完成时间滞后，但没有影响到 DOMContentLoaded 的时间节点。</p>
<p>关于 Hotjar 是否会使得站点加载变慢，Hotjar 官方给出否定的回应，理由如下：</p>
<ul>
<li>通过异步的方式加载脚本</li>
<li>脚本使用CDN加速</li>
<li>脚本合理利用了浏览器缓存</li>
</ul>
<div class="note info">
            <p>更多详情请参考 <a href="https://help.hotjar.com/hc/en-us/articles/115009335727-Will-Hotjar-Slow-Down-My-Site-" target="_blank" rel="noopener">Will Hotjar Slow Down My Site?</a></p>
          </div>

<p>除了可以使用CDN加速三方插件外，还可以使用CDN域名加速来加速站点静态资源，包括HTML文件、CSS样式、字体文件等，具体操作方案参考VPS服务商说明文档。</p>
<p>CDN域名加速也有几个坑点：</p>
<ul>
<li>CDN缓存会导致更新站点后访问到的仍是旧版内容，需要等待缓存刷新后才能看到更新。</li>
<li>加速后就不能通过该域名建立ssh连接了，此时 <code>hexo deploy</code> 将会出现端口连接超时，可以将远程仓库地址改为真实IP地址来确保推送成功。</li>
</ul>
<h2 id="代码合并压缩"><a href="#代码合并压缩" class="headerlink" title="代码合并压缩"></a>代码合并压缩</h2><p>另一种优化页面加载速度的方案是通过删除注释和空格、将长变量名改为短变量名等方式压缩代码体积，从而缩短资源下载时间。</p>
<p><a href="https://github.com/chenzhutian/hexo-all-minifier" target="_blank" rel="noopener">hexo-all-minifier</a> 插件通过集成下列插件提供一站式的资源压缩服务：</p>
<ul>
<li><a href="https://github.com/hexojs/hexo-html-minifier" target="_blank" rel="noopener">hexo-html-minifier</a>: 基于 <a href="https://github.com/kangax/html-minifier" target="_blank" rel="noopener">HTMLMinifier</a> 提供 HTML 压缩服务。</li>
<li><a href="https://github.com/hexojs/hexo-clean-css" target="_blank" rel="noopener">hexo-clean-css</a>: 基于 <a href="https://github.com/jakubpawlowicz/clean-css" target="_blank" rel="noopener">clean-css</a> 提供 CSS 压缩服务。</li>
<li><a href="https://github.com/hexojs/hexo-uglify" target="_blank" rel="noopener">hexo-uglify</a>: 基于 <a href="http://lisperator.net/uglifyjs/" target="_blank" rel="noopener">UglifyJS</a> 提供 JS 压缩服务。</li>
<li><a href="https://github.com/vseventer/hexo-imagemin" target="_blank" rel="noopener">hexo-imagemin</a>: 基于 <a href="https://github.com/imagemin/imagemin" target="_blank" rel="noopener">imagemin</a> 提供图片压缩服务。</li>
</ul>
<p>此外，该插件还可以把多个JS脚本拼接打包到一个文件中来减少HTTP请求次数，从而减少页面加载时间。</p>
<p>该方案从理论上来讲是有效且可行的，但是和一般的大型软件项目不同，博客项目中的主要资源是Markdown文件解析后的HTML文件，其核心是文本内容而非逻辑代码，压缩空间极其有限，在实际应用过程中效果并不明显，所以本站也就没有应用该插件功能。</p>
<h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1><h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><div class="note info">
            <p>本节参考 <a href="https://juejin.im/post/590b451a0ce46300588c43a0" target="_blank" rel="noopener">hexo高阶教程：教你怎么让你的hexo博客在搜索引擎中排第一</a></p>
          </div>

<p>在搜索引擎中输入 site:yearito.cn，会发现暂时还搜不到自己的站点：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/google-search-result.png" alt="谷歌搜索结果" title="谷歌搜索结果"></p>
<p>想要搜到自己的站点，首先要将个人网站提交给搜索引擎收录。针对不同的搜索引擎需要分别提交网址，但提交的步骤是大同小异的：</p>
<p><strong>第一步：提交网站域名</strong></p>
<p>注意需要区分输入 http 与 https。</p>
<p><strong>第二步：验证网站所有权</strong></p>
<p>一般都包括以下三种验证方法，其本质都是通过一段字符串验证码来验证用户的网站所有权，三种方法任选其一：</p>
<ul>
<li>HTML文件验证：将给定的HTML文件上传到站点根目录下（验证码包含在HTML文件中）</li>
<li>HTML元标签验证：在站点首页中添加给定的 <code>meta</code> 标签（验证码包含在 <code>meta</code> 标签属性中）</li>
<li>CNAME验证：添加一个CNAME域名解析记录到指定站点（验证码包含在二级域名中）</li>
</ul>
<p>Next主题中已经内置集成了各大搜索引擎的HTML元标签验证方案，用户只需获取验证码填写到主题配置文件中并重新打包部署即可完成身份验证。</p>
<p><strong>第三步：推送或者提交 sitemap</strong></p>
<p>sitemap，又称站点地图，通常是一个xml格式的文件，最早由谷歌提出，现已被多数引擎所支持。里面包含了站点内的页面列表，帮助搜索引擎理解网站内容的组织架构。</p>
<p>在Hexo中可以通过 <a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="noopener">hexo-generator-sitemap</a> 和 <a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="noopener">hexo-generator-baidu-sitemap</a> 两个插件帮助生成通用站点地图和百度专用站点地图文件。</p>
<p>在站点根目录下执行以下命令安装相关依赖：</p>
<figure class="highlight q"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-sitemap --<span class="built_in">save</span>-<span class="built_in">dev</span></span><br><span class="line">$ npm install hexo-generator-baidu-sitemap --<span class="built_in">save</span>-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure>

<p>之后在执行 <code>hexo generate</code> 打包后即可在 public 目录下找到 sitemap.xml 和 baidusitemap.xml 两个文件，将该文件提交到搜索引擎站长后台即可帮助搜索引擎分析收录站点内容，各个搜索引擎收录效率不同，可能需要耐心等上几天。</p>
<h3 id="谷歌"><a href="#谷歌" class="headerlink" title="谷歌"></a>谷歌</h3><p>在 <a href="https://search.google.com/search-console" target="_blank" rel="noopener">Google Search Console</a> 中提交站点域名，此时会提供几种验证网站所有权的方法，展开 <strong>其他验证方法</strong> 中的 <strong>HTML 标记</strong>，然后将 <code>meta</code> 标签的 <code>content</code> 属性值复制到主题配置文件中：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/google-verify-site.png" alt="Google 选择验证方式" title="Google 选择验证方式"></p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters/</span></span><br><span class="line"><span class="attr">google_site_verification:</span> <span class="string">cEGDN99xe2gtAy97He-NH4ihW3Y4GrGQl_xTxp7p3sg</span></span><br></pre></td></tr></table></figure>

<p>执行 <code>hexo generate deploy</code> 重新部署站点，此时网站中就已经自动包含了用于验证身份的 <code>meta</code> 标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"google-site-verification"</span> <span class="attr">content</span>=<span class="string">"u9qDJxSM-SphoS5GXBhunqp1UXBY5H4FT6J1V2LxXqI"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>回到 Search Console 页面点击验证按钮，验证成功后将进入控制台，点击左侧 <strong>站点地图</strong> 菜单，在域名后输入 sitemap.xml 并提交，即可添加新的站点地图。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/google-add-sitemap.png" alt="添加站点地图" title="添加站点地图"></p>
<p>在新版的 Search Console 中只能添加站点地图，却没有删除站点地图的接口，后来在 <a href="https://www.dear.today/731.html" target="_blank" rel="noopener">Google Search Console 删除站点地图方法</a> 一文中发现了解决办法：需要在 <a href="www.google.com/webmasters/tools/sitemap-list">旧版 Search Console</a> 中才能删除。</p>
<h3 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h3><p>在 <a href="https://ziyuan.baidu.com/site" target="_blank" rel="noopener">百度搜索资源平台</a> 中提交站点域名，勾选站点属性，最后一步中同样会要求验证网站的所有权身份，选择 <strong>HTML标签验证</strong>，然后将 <code>meta</code> 标签的 <code>content</code> 属性值复制到主题配置文件中：：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/baidu-verify-site.png" alt="Baidu 选择验证方式" title="Baidu 选择验证方式"></p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">#  Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://ziyuan.baidu.com/site/</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span> <span class="string">UHED80Nn65</span></span><br></pre></td></tr></table></figure>

<p>执行 <code>hexo generate deploy</code> 重新部署站点，此时网站中就已经自动包含了用于验证身份的 <code>meta</code> 标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"baidu-site-verification"</span> <span class="attr">content</span>=<span class="string">"UHED80Nn65"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>回到百度站长管理平台点击完成验证按钮，验证成功后将进入控制台，在左侧 <strong>数据引入</strong> 菜单下点击 <strong>链接提交</strong>，在此可以看到除了sitemap之外还提供了多种推送站点内容的方案：</p>
<ul>
<li>主动推送：通过API接口推送站点内容，实时性较高</li>
<li>自动推送：在网页内添加JS脚本，每当页面被访问的时候会将页面url推送给百度，比较被动</li>
<li>sitemap：填写站点地图文件地址，百度会周期性的抓取其中的内容进行分析收录，收录效率比较低</li>
<li>手动提交：手动填写链接地址进行收录</li>
</ul>
<p>本站采用主动推送和自动推送相结合的形式推送站点内容。</p>
<h4 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h4><p>Hexo中可以借助 <a href="https://github.com/huiwang/hexo-baidu-url-submit" target="_blank" rel="noopener">hexo-baidu-url-submit</a> 插件快捷实现主动推送，在根目录下安装相关依赖：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-baidu-<span class="keyword">url</span>-submit <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在站点配置文件中添加以下代码：</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 百度主动推送</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">100</span>  <span class="comment"># 提交最新的一个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">yearito.cn</span>  <span class="comment"># 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">xxxxx</span>  <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span>  <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure>

<p>然后在站点配置文件中修改部署策略：</p>
<figure class="highlight diff"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">  # Deployment</span><br><span class="line">  ## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line"><span class="deletion">- deploy:</span></span><br><span class="line"><span class="deletion">-   type: git</span></span><br><span class="line"><span class="deletion">-   repo: git@yearito.cn:~/blog.yearito.git</span></span><br><span class="line"><span class="addition">+ deploy:</span></span><br><span class="line"><span class="addition">+ - type: git</span></span><br><span class="line"><span class="addition">+   repo: git@yearito.cn:~/blog.yearito.git</span></span><br><span class="line"><span class="addition">+ - type: baidu_url_submitter # 百度</span></span><br></pre></td></tr></table></figure>

<p>每次部署的时候将会自动推送网站内容到百度。</p>
<h4 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h4><p>Next主题中内置了一键开启百度自动推送的选项：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>开启后将会自动在页面中添加如下脚本用于百度推送：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">    bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="actionscript">  <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">    bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span></span><br><span class="line">  s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>每次访问站点页面都会通过以上脚本推送本页url到百度。</p>
<h3 id="必应"><a href="#必应" class="headerlink" title="必应"></a>必应</h3><p>在 <a href="https://www.bing.com/toolbox/webmaster" target="_blank" rel="noopener">必应网站管理员</a> 中提交站点域名，此时可以同时输入 sitemap 文件链接，然后同样会进入网站所有权验证页面，在选择二中复制 <code>meta</code> 标签的 <code>content</code> 属性值到主题配置文件中：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/bing-verify-site.png" alt="Bing 选择验证方式" title="Bing 选择验证方式"></p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bing Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://www.bing.com/webmaster/</span></span><br><span class="line"><span class="attr">bing_site_verification:</span> <span class="string">538CCB61234CB4A0B1A71C4581705DCD</span></span><br></pre></td></tr></table></figure>

<p>执行 <code>hexo generate deploy</code> 重新部署站点，此时网站中就已经自动包含了用于验证身份的 <code>meta</code> 标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msvalidate.01"</span> <span class="attr">content</span>=<span class="string">"538CCB61234CB4A0B1A71C4581705DCD"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>回到网站管理员页面点击验证按钮，验证成功后将进入控制台，可以在左侧导航菜单中点击 <strong>仪表板</strong> -&gt; <strong>配置我的网站</strong> -&gt; ** Sitemaps** 查看已提交的站点地图文件的解析抓取情况。</p>
<h2 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h2><div class="note info">
            <p>本节参考 <a href="https://blog.paddings.cn/2016/08/16/blog/Hexo-NexT-SEO/" target="_blank" rel="noopener">Hexo NexT 主题SEO优化指南</a> 及<br><a href="https://sofree.cc/meta-keywords/" target="_blank" rel="noopener">SEO優化：不要使用Meta Keywords關鍵字</a></p>
          </div>

<p>SEO（Search Engine Optimization）意指搜索引擎优化，可以帮助提高目标网站在搜索引擎中的排名，使得在别人搜索相关内容的时候更容易脱颖而出被人所发现，以提高个人站点的存在价值。</p>
<p>在Hexo中可以从以下几个方面进行简单的优化：</p>
<ul>
<li><p><strong>开启Next主题内置seo优化</strong></p>
<p>在主题配置文件中设置 <code>seo: true</code>，将会自动部署Next内置的seo优化方案，比如在 themes\next\layout\_partials\footer.swig 为链接添加 <code>rel=&quot;external nofollow&quot;</code> 属性。</p>
</li>
<li><p><strong>修改文章url地址格式</strong></p>
<p>默认的文章url地址为 <code>http://yoursite.com/:year/:month/:day/:title/</code>，这种url格式层级太多，并且如果文章标题是中文的话可能会发生转义而出现一堆乱码，不利于搜索引擎的爬取分析，因此建议在站点配置中修改 <code>permalink</code> 的格式来简化页面url，并尽量采用英文命名Markdown文件。</p>
</li>
</ul>
<p>在一些SEO优化的教程中会提到通过为页面添加 keywords 来影响搜索结果排名，事实上，在早期搜索引擎技术发展尚未成熟的时候，这样的做法确实有效，但当人们发现了这个规律后，就开始添加甚至无关的keywords来影响搜索结果排名，这一标签的滥用极大的降低了搜索引擎的准确度。随后，各大搜索引擎纷纷宣布不再将keywords作为搜索排名权重因子。</p>
<p>如Google就在2009年发布声明：<a href="https://webmasters.googleblog.com/2009/09/google-does-not-use-keywords-meta-tag.html" target="_blank" rel="noopener">Google does not use the keywords meta tag in web ranking</a>。声明中表示Google不会将keywords标签作为网页排名的依据，未来也不会改变这一政策。部分原文摘录如下：</p>
<blockquote>
<p>Our web search (the well-known search at Google.com that hundreds of millions of people use each day) disregards keyword metatags completely. They simply don’t have any effect in our search ranking at present.</p>
</blockquote>
<blockquote>
<p>Google has ignored the keywords meta tag for years and currently we see no need to change that policy.</p>
</blockquote>
<p>而Bing则表示过多的keywords会被作为垃圾讯号，可能导致你的网站被归类为垃圾网站，详见<a href="https://searchengineland.com/the-meta-keywords-tag-lives-at-bing-why-only-spammers-should-use-it-96874" target="_blank" rel="noopener">The Meta Keywords Tag Lives At Bing &amp; Why Only Spammers Should Use It</a>。</p>
<p>说起keywords，不得不提到另外一个与之相关的meta标签description。那么description是否有助于提升搜索排名呢？Google仍然给出了否定的答案：</p>
<blockquote>
<p>Even though we sometimes use the description meta tag for the snippets we show, we still don’t use the description meta tag in our ranking.</p>
</blockquote>
<p>虽然description不影响搜索排名，但搜索引擎通常会将description作为快照显示在搜索结果页面作为内容补充，因此合适的description还是有助于吸引读者的目光增加网站的点击率的。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/search-snapshot.png" alt="搜索结果快照" title="搜索结果快照"></p>
<p>如果页面上没有description元标签的话，搜索引擎可能会从页面中自动抓取部分内容作为页面描述，至于说抓取质量可就没法保证了。</p>
<p>默认情况下，Next会使用 tags 作为页面 keywords，使用文章前两百个字符作为description。如果文章页面内含有 <code>&lt;!-- more --&gt;</code> 内容分隔符，则会使用分隔符之前的正文 description。用户也可以在Front-Matter中添加 keywords 和 description属性来手动指定页面meta标签内容。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/keywords-description.png" alt="keywords &amp; description" title="keywords &amp; description"></p>
<p>越是容易被人为操控的SEO影响因子，影响力就会越来越低，所以：</p>
<blockquote class="blockquote-center"><p>最好的SEO优化是做好内容，最好的加薪办法是做好工作。</p>
</blockquote>

<h1 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h1><p>Nginx默认的404页面有些简陋，这里有两种自定义404页面的方案。</p>
<p><strong>第一种是仍沿用Hexo主题的页面框架，基于 page 布局搭建404页面。</strong></p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/404pages.png" alt="基于主题布局的404页面" title="基于主题布局的404页面"></p>
<p>在 source 目录下新建 404.md 文件，添加如下内容：</p>
<figure class="highlight html"><figcaption><span>source\404.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-align:center; font-size: 36px"</span>&gt;</span></span><br><span class="line">  404 页面未找到</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">onclick</span>=<span class="string">"window.history.back()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-double-left fa-fw fa-lg"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    返回</span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  &#123;% btn /, 首页, home fa-fw fa-lg %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>用户可以在此基础上自定义修改显示内容。</p>
<p><strong>第二种是完全抛弃掉Hexo的框架，搭建一个纯粹的自定义 404 HTML 页面。</strong></p>
<p>在 source 目录下新建 404.html 文件，自行编写页面结构与样式。你也可以直接在网上搜索404页面模板并下载使用，一般都不会太复杂，一个HTML文件就能搞定。例如 <a href="https://freefrontend.com/html-css-404-page-templates/" target="_blank" rel="noopener">28 HTML 404 Page Templates</a> 中就提供了很多精美的动态404页面。</p>
<p>此时打包的时候Hexo仍会渲染该文件，添加上复杂的主题框架与功能，用户可以修改站点配置文件以跳过渲染该文件：</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="number">404.</span><span class="string">html</span></span><br></pre></td></tr></table></figure>

<p>这样以来Hexo在打包的时候就只是将该文件复制到 public 目录下，而不做任何处理了。</p>
<p>以上仅仅是搭建起了404页面，至于如何在服务器返回404响应时重定向到该页面，还要依赖于Nginx的配置规则。修改VPS上的Nginx配置文件，添加一行404页面重定向规则：</p>
<figure class="highlight diff"><figcaption><span>/etc/nginx/nginx.conf</span></figcaption><table><tr><td class="code"><pre><span class="line">  http &#123;</span><br><span class="line">    include  mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">      listen  80;</span><br><span class="line">      root /var/www/blog.yearito;</span><br><span class="line"><span class="addition">+     error_page 404 /404.html;      </span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>修改后执行 <code>nginx -s reload</code> 重新加载配置文件即可生效。</p>
<h1 id="RSS链接"><a href="#RSS链接" class="headerlink" title="RSS链接"></a>RSS链接</h1><p>什么是RSS，RSS有什么用？第一次在别人的博客搭建教程中了解到这个概念的时候，同样的问题也困扰着我。通过订阅网站RSS可以第一时间发现站点内容的更新，而不用自己跑到站点去刷新，这是一个轮询到通知的转变。</p>
<div class="note ">
            <p>虽然大致知道它的用途，但还是理解不够深刻，读者可以参考 <a href="http://www.ruanyifeng.com/blog/2006/01/rss.html" target="_blank" rel="noopener">如何使用RSS | 阮一峰</a> 来帮助理解这一概念。</p>
          </div>

<p>在站点根目录下执行以下命令安装相关依赖：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>然后站点概览中就会自动出现feed链接：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-deploy-to-VPS/rss-feed.png" alt="站点 feed 链接" title="站点 feed 链接"></p>
<p>在主题配置文件中不需要设置rss的值，置空即可，如果设置为 <code>true</code> 反而会导致如下报错：</p>
<blockquote>
<p><a href="https://github.com/iissnan/theme-next-docs/issues/99" target="_blank" rel="noopener">Unhandled rejection TypeError: path.substring is not a function</a></p>
</blockquote>
<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>本文介绍了在站点部署上线过程中将会遇到的各种技术问题，包括部署到VPS中的三步实现方案，优化页面加载性能的方法等。至此，Hexo搭建个人博客系列的最后一篇文章也已经完成，本站历经2个月的修修改改后也终于上线与大家见面了。如果你喜欢本站，可以在我的 <a href="http://github.com/Coodool/hexo-blog-yearito" target="_blank" rel="noopener">Github仓库</a> 上Fork或者Star。关于本系列文章如果有什么疑问与指正，也欢迎私信或者评论。</p>
<div class="reference-linking">参考链接</div>

<ul>
<li><a href="https://blog.yizhilee.com/post/deploy-hexo-to-vps/" target="_blank" rel="noopener">荔枝 | 通过 Git Hooks 自动部署 Hexo 到 VPS</a></li>
<li><a href="https://stackoverflow.com/questions/31729240/how-to-analyzing-page-speed-in-chrome-dev-tools" target="_blank" rel="noopener">How to analyzing Page Speed in Chrome Dev tools</a></li>
<li><a href="https://segmentfault.com/q/1010000011840948/a-1020000011947156" target="_blank" rel="noopener">chrome devtools 中 network 一栏中的 Finish 时间代表着什么</a></li>
<li><a href="https://help.hotjar.com/hc/en-us/articles/115009335727-Will-Hotjar-Slow-Down-My-Site-" target="_blank" rel="noopener">Will Hotjar Slow Down My Site?</a></li>
<li><a href="https://juejin.im/post/590b451a0ce46300588c43a0" target="_blank" rel="noopener">hexo高阶教程：教你怎么让你的hexo博客在搜索引擎中排第一</a></li>
<li><a href="https://blog.paddings.cn/2016/08/16/blog/Hexo-NexT-SEO/" target="_blank" rel="noopener">Hexo NexT 主题SEO优化指南</a></li>
<li><a href="https://sofree.cc/meta-keywords/" target="_blank" rel="noopener">SEO優化：不要使用Meta Keywords關鍵字</a></li>
<li><a href="https://webmasters.googleblog.com/2009/09/google-does-not-use-keywords-meta-tag.html" target="_blank" rel="noopener">Google does not use the keywords meta tag in web ranking</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2006/01/rss.html" target="_blank" rel="noopener">如何使用RSS | 阮一峰</a></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建个人博客系列：进阶设置篇</title>
    <url>/hexo-advanced-settings/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本篇文章介绍了如何为 Hexo 博客集成更多强大的功能。</p>
<p>第一章介绍了在站点中集成基于三方插件的数据统计服务，包括站点PV和PU统计、站点运行时间统计、文章PV统计、站点和文章字数统计等。</p>
<p>第二章介绍了针对于站点的个性化设置方案，包括添加搞怪的网页标题，添加站内搜索功能，添加热门文章排行榜页面，添加豆瓣阅读/电影/游戏等资料页面，添加在线聊天和即时反馈等功能。</p>
<p>第三章介绍了针对于文章页面的个性化设置方案，包括在文章末尾添加评论组件、评分组件、打赏入口、版权声明、推荐文章等，为文章中的图片添加点击灯箱效果，以及为文章设置访问密码。</p>
<a id="more"></a>

<h1 id="数据统计"><a href="#数据统计" class="headerlink" title="数据统计"></a>数据统计</h1><h2 id="站点访问量统计"><a href="#站点访问量统计" class="headerlink" title="站点访问量统计"></a>站点访问量统计</h2><p>该功能由 <a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a> 提供，效果如下图：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/busuanzi-site-footer.png" alt="站点访问统计" title="站点访问统计"></p>
<p>左侧数据表示独立访客数UV，右侧数据表示网站浏览量PV，访客数和浏览量的区别在于一个用户连续点击n篇文章，会记录n次浏览量，但只记录一次访客数。</p>
<div class="note ">
            <p>由于不蒜子是基于域名来进行统计计算的，所以通过 localhost:4000 端口访问的时候统计数据PV和UV都会异常的大，属于正常现象。</p>
          </div>

<p>在页脚布局模板文件首行添加如下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_partial\footer.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在主题配置文件中做出如下修改：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span>   <span class="comment"># 访客数</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span>   <span class="comment"># 访问量</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure>

<p>刷新浏览器即可生效。</p>
<p>高阶用法：通过修改代码来自定义统计文案，如果你想使用本站统计文案，需要对不蒜子的代码做出如下修改：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_third-party\analytics\busuanzi-counter.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">  &#123;% if theme.busuanzi_count.total_visitors %&#125;</span><br><span class="line"><span class="deletion">-   &lt;span class="site-uv" title="&#123;&#123; __('footer.total_visitors') &#125;&#125;"&gt;</span></span><br><span class="line"><span class="addition">+   &lt;span class="site-uv"&gt;</span></span><br><span class="line"><span class="addition">+     &#123;&#123; __('footer.total_visitors', '&lt;span class="busuanzi-value" id="busuanzi_value_site_uv"&gt;&lt;/span&gt;') &#125;&#125;</span></span><br><span class="line"><span class="deletion">-     &lt;i class="fa fa-&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="deletion">-     &lt;span class="busuanzi-value" id="busuanzi_value_site_uv"&gt;&lt;/span&gt;</span></span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% if theme.busuanzi_count.total_views %&#125;</span><br><span class="line"><span class="deletion">-   &lt;span class="site-pv" title="&#123;&#123; __('footer.total_views') &#125;&#125;"&gt;</span></span><br><span class="line"><span class="addition">+   &lt;span class="site-pv"&gt;</span></span><br><span class="line"><span class="addition">+     &#123;&#123; __('footer.total_views', '&lt;span class="busuanzi-value" id="busuanzi_value_site_pv"&gt;&lt;/span&gt;') &#125;&#125;</span></span><br><span class="line"><span class="deletion">-     &lt;i class="fa fa-&#123;&#123; theme.busuanzi_count.total_views_icon &#125;&#125;"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="deletion">-     &lt;span class="busuanzi-value" id="busuanzi_value_site_pv"&gt;&lt;/span&gt;</span></span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>在自定义样式文件中添加如下样式：</p>
<figure class="highlight css"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//修改不蒜子数据颜色</span><br><span class="line"><span class="selector-class">.busuanzi-value</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#1890ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后修改统计表述文案：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\languages\zh-CN.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="string">"历经 %s 次回眸才与你相遇"</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="string">"我的第 %s 位朋友，"</span></span><br></pre></td></tr></table></figure>

<h2 id="站点运行时间统计"><a href="#站点运行时间统计" class="headerlink" title="站点运行时间统计"></a>站点运行时间统计</h2><div class="note info">
            <p>本章节受 <a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">reuixiy | 打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化 #5.7</a> 启发，自行重构了代码逻辑。</p>
          </div>

<p>在站点底部显示站点已运行时间，效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/site-running-time.png" alt="站点运行时间" title="站点运行时间"></p>
<p>在主题自定义布局文件中添加以下代码：</p>
<figure class="highlight html"><figcaption><span>thems\next\layout\_custom\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# 页脚站点运行时间统计 #&#125;</span><br><span class="line">&#123;% if theme.footer.ages.enable %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/moment@2.22.2/moment.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/moment-precise-range-plugin@1.3.0/moment-precise-range.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">timer</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> ages = moment.preciseDiff(moment(),moment(&#123;&#123; theme.footer.ages.birthday &#125;&#125;,<span class="string">"YYYYMMDD"</span>));</span></span><br><span class="line"><span class="javascript">      ages = ages.replace(<span class="regexp">/years?/</span>, <span class="string">"年"</span>);</span></span><br><span class="line"><span class="javascript">      ages = ages.replace(<span class="regexp">/months?/</span>, <span class="string">"月"</span>);</span></span><br><span class="line"><span class="javascript">      ages = ages.replace(<span class="regexp">/days?/</span>, <span class="string">"天"</span>);</span></span><br><span class="line"><span class="javascript">      ages = ages.replace(<span class="regexp">/hours?/</span>, <span class="string">"小时"</span>);</span></span><br><span class="line"><span class="javascript">      ages = ages.replace(<span class="regexp">/minutes?/</span>, <span class="string">"分"</span>);</span></span><br><span class="line"><span class="javascript">      ages = ages.replace(<span class="regexp">/seconds?/</span>, <span class="string">"秒"</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml">      ages = ages.replace(/\d+/g, '<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:</span></span></span><span class="template-variable">&#123;&#123; theme.footer.ages.color &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>$&amp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>');</span></span></span><br><span class="line"><span class="javascript">      div.innerHTML = <span class="string">`&#123;&#123; __('footer.age')&#125;&#125; <span class="subst">$&#123;ages&#125;</span>`</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//插入到copyright之后</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> copyright = <span class="built_in">document</span>.querySelector(<span class="string">".copyright"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.querySelector(<span class="string">".footer-inner"</span>).insertBefore(div, copyright.nextSibling);</span></span><br><span class="line">    timer();</span><br><span class="line"><span class="actionscript">    setInterval(<span class="string">"timer()"</span>,<span class="number">1000</span>)</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>修改主题配置文件：</p>
<figure class="highlight diff"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">  footer:</span><br><span class="line">    ...</span><br><span class="line"><span class="addition">+   ages:</span></span><br><span class="line"><span class="addition">+     # site running time</span></span><br><span class="line"><span class="addition">+     enable: true</span></span><br><span class="line"><span class="addition">+     # birthday of your site</span></span><br><span class="line"><span class="addition">+     birthday: 20181001</span></span><br><span class="line"><span class="addition">+     # color of number</span></span><br><span class="line"><span class="addition">+     color: "#1890ff"</span></span><br></pre></td></tr></table></figure>

<p>然后补全对应文案：</p>
<figure class="highlight diff"><figcaption><span>themes\next\languages\zh-CN.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">  footer:</span><br><span class="line">    powered: "由 %s 强力驱动"</span><br><span class="line">    theme: 主题</span><br><span class="line"><span class="addition">+   age: 我已在此等候你</span></span><br><span class="line">    total_views: "历经 %s 次回眸才与你相遇"</span><br><span class="line">    total_visitors: "我的第 %s 位朋友，"</span><br></pre></td></tr></table></figure>

<p>刷新浏览器即可生效。</p>
<div class="note info">
            <p>日期统计计算功能由 <a href="https://momentjs.com/" target="_blank" rel="noopener">moment</a> 和 <a href="https://github.com/codebox/moment-precise-range" target="_blank" rel="noopener">moment-precise-range</a> 提供，也可用原生JS Date对象来实现。</p>
          </div>

<h2 id="文章访问量统计"><a href="#文章访问量统计" class="headerlink" title="文章访问量统计"></a>文章访问量统计</h2><div class="note info">
            <p>本章节参考 <a href="https://notes.doublemine.me/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">夏末 | 为NexT主题添加文章阅读量统计功能</a></p>
          </div>

<p>该功能基于 <a href="https://leancloud.cn" target="_blank" rel="noopener">LeanCloud</a> 提供后端数据服务，效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/post-pageviews.png" alt="文章访问量" title="文章访问量"></p>
<p>在LeanCloud上注册账号并创建应用，新建一个名为 Counter 的Class，ACL权限设置为 <strong>无限制</strong>：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/LeanCloud-Counter-class.png" alt="新建Counter类" title="新建Counter类"></p>
<div class="note info">
            <p>在LeanCloud中的Class可以理解为数据库中的数据表。Counter用于存储记录文章访问量，记录是以url作为唯一依据的，所以根据默认的permalink组成结构，如果你更改了文章的发布日期和标题中的任意一个，都会造成文章阅读数值的清零重计。</p>
          </div>

<p>在控制台的 <strong>设置</strong> -&gt; <strong>应用Key</strong> 中获取App ID和App Key填入到主题配置文件中：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="string">***&lt;app_id***</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="string">***&lt;app_key&gt;***</span></span><br><span class="line">  <span class="attr">security:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">betterPerformance:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>站点上线后可以在 <strong>设置</strong> -&gt; <strong>安全中心</strong> 中添加博客域名到 Web 安全域名中，设置后仅可在该域名下通过 JavaScript SDK 调用服务器资源，借以保护LeanCloud应用的数据安全。</p>
<p>如果想要自定义PV表述文案，可以修改文章布局模板中的相关代码：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_macro\post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">  &#123;# LeanCould PageView #&#125;</span><br><span class="line">    ...</span><br><span class="line">    &#123;% if theme.post_meta.item_text %&#125;</span><br><span class="line"><span class="deletion">-     &lt;span class="post-meta-item-text"&gt;&#123;&#123;__('post.views') + __('symbol.colon') &#125;&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="addition">+     &lt;span class="post-meta-item-text"&gt;&#123;&#123;__('post.views')&#125;&#125; &lt;/span&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    &lt;span class="leancloud-visitors-count"&gt;&lt;/span&gt;</span><br><span class="line"><span class="addition">+   &lt;span&gt;℃&lt;/span&gt;</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

<p>修改统计表述文案：</p>
<figure class="highlight yaml"><figcaption><span>themes/next/languages/zh-CN.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">views:</span> <span class="string">热度</span></span><br></pre></td></tr></table></figure>

<p>刷新浏览器即可生效。</p>
<p>如果遇到如下报错，可能是你配置了 <code>security: true</code> 但又没有做好安全策略配置。</p>
<blockquote>
<p>阅读次数： Counter not initialized! See more at console err msg.</p>
</blockquote>
<p>有以下两种解决方案：</p>
<ul>
<li>下载安装 <a href="https://github.com/theme-next/hexo-leancloud-counter-security" target="_blank" rel="noopener">hexo-leancloud-counter-security</a> 插件</li>
<li>在主题配置中设置 <code>security: false</code></li>
</ul>
<p>个人推荐第二种，简单粗暴。</p>
<p>除了LeanCloud，不蒜子也能提供文章阅读次数统计，但是不蒜子的统计结果只会在文章页显示，而不会显示在首页列表中，相关讨论可以参见 <a href="https://github.com/iissnan/hexo-theme-next/issues/801" target="_blank" rel="noopener">阅读计数。对比LeanCloud和不蒜子</a></p>
<h2 id="站点及文章字数统计"><a href="#站点及文章字数统计" class="headerlink" title="站点及文章字数统计"></a>站点及文章字数统计</h2><p>该功能由 <a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">hexo-symbols-count-time</a> 提供，效果如下图：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/site-word-count.png" alt="站点字数统计" title="站点字数统计"></p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/post-word-count.png" alt="文章字数统计" title="文章字数统计"></p>
<p>在根目录下执行如下命令安装相关依赖</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-symbols-<span class="keyword">count</span>-<span class="built_in">time</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>启用该功能需要同时修改站点配置文件和主题配置文件。</p>
<p>将如下配置项添加到<strong>站点配置文件</strong>中，这些配置项主要用于控制每项统计信息是否显示。</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>   <span class="comment"># 统计单篇文章字数</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">false</span>   <span class="comment"># 取消估算单篇文章阅读时间</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>  <span class="comment"># 统计站点总字数</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">false</span>  <span class="comment"># 取消估算站点总阅读时间</span></span><br></pre></td></tr></table></figure>

<p>在<strong>主题配置文件</strong>中做如下修改，这些配置项主要用于控制统计信息的显示样式。</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">false</span>  <span class="comment"># 统计信息不换行显示</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span>  <span class="comment"># 文章统计信息中是否显示“本文字数/阅读时长”等描述文字</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span>   <span class="comment"># 站点统计信息中是否显示“本文字数/阅读时长”等描述文字</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span>  <span class="comment"># Average Word Length：平均字符长度</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span>  <span class="comment"># Words Per Minute：阅读速度</span></span><br></pre></td></tr></table></figure>

<p>汉字的平均字符长度为1.5，如果在文章中使用纯中文进行写作（没有混杂英文），那么推荐设置 <code>awl: 2</code> 及 <code>wpm: 300</code>，但是如果文章中存在英文，建议设置 <code>awl: 4</code> 及 <code>wpm: 275</code>。</p>
<p>因为修改了站点配置文件，所以需要重新启动服务器才能生效。</p>
<h1 id="站点个性化设置"><a href="#站点个性化设置" class="headerlink" title="站点个性化设置"></a>站点个性化设置</h1><h2 id="搞怪网页标题"><a href="#搞怪网页标题" class="headerlink" title="搞怪网页标题"></a>搞怪网页标题</h2><div class="note info">
            <p>本章节参考 <a href="https://diygod.me/2153/" target="_blank" rel="noopener">DIYgod | 我藏好了哦</a></p>
          </div>

<p>离开和进入页面时动态修改Tab标签中的标题。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/title-trick.png" alt="搞怪网页标题" title="搞怪网页标题"></p>
<p>在主题自定义布局文件中添加以下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_custom\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# 搞怪网页标题 #&#125;</span><br><span class="line">&#123;% if theme.title_trick.enable %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> OriginTitile = <span class="built_in">document</span>.title;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> titleTime;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.title = <span class="string">'&#123;&#123; theme.title_trick.leave &#125;&#125;'</span> + OriginTitile;</span></span><br><span class="line">        clearTimeout(titleTime);</span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.title = <span class="string">'&#123;&#123; theme.title_trick.enter &#125;&#125;'</span> + OriginTitile;</span></span><br><span class="line"><span class="actionscript">        titleTime = setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.title = OriginTitile;</span></span><br><span class="line">        &#125;, 2000);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>在主题配置文件中添加以下代码：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># a trick on website title</span></span><br><span class="line"><span class="attr">title_trick:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">leave:</span> <span class="string">"(つェ⊂)我藏好了哦~"</span></span><br><span class="line">  <span class="attr">enter:</span> <span class="string">"(*´∇｀*) 被你发现啦~"</span></span><br></pre></td></tr></table></figure>

<h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><p>该功能由 <a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="noopener">hexo-generator-searchdb</a> 提供，效果如下图：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/local-search.png" alt="站内搜索" title="站内搜索"></p>
<p>在根目录下执行以下命令安装相关依赖：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-generator-searchdb <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在<strong>主题配置</strong>文件中修改相关字段：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span>  <span class="comment"># 每次输入改变都执行搜索</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">3</span>  <span class="comment"># 每篇文章显示的搜索结果数量</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>在<strong>站点配置</strong>文件中添加以下字段：</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span>  <span class="comment"># 指定搜索范围，可选 post | page | all</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span>  <span class="comment"># 指定页面内容形式，可选 html | raw (Markdown) | excerpt | more</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>在自定义样式文件中添加如下样式规则来增加搜索弹窗的页边距：</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//增加搜索弹窗的页边距</span><br><span class="line"><span class="selector-class">.local-search-popup</span> <span class="selector-id">#local-search-result</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">25px</span> <span class="number">40px</span></span><br><span class="line">  height: <span class="built_in">calc</span>(100% - 95px)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果你同时在站点内启用了 wobblewindow 边缘摆动效果，则有可能会出现背景蒙版叠加在弹窗之前的问题，这种层级叠加异常的问题主要是因为 wobblewindow 中修改了弹窗父元素的 <code>position</code> 定位和 <code>z-index</code> 优先级，目前只能通过修改 localsearch 源码来修复该Bug：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_third-party\search\localsearch.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">  $.ajax(&#123;</span><br><span class="line">    url: path,</span><br><span class="line">    dataType: isXml ? "xml" : "json",</span><br><span class="line">    async: true,</span><br><span class="line">    success: function(res) &#123;</span><br><span class="line">      // get the contents from search data</span><br><span class="line">      isfetched = true;</span><br><span class="line"><span class="deletion">-     $('.popup').detach().appendTo('.header-inner');</span></span><br><span class="line"><span class="addition">+     $('.popup').detach().appendTo('body');</span></span><br><span class="line">      var datas = isXml ? $("entry", res).map(function() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          title: $("title", this).text(),</span><br><span class="line">          content: $("content",this).text(),</span><br><span class="line">          url: $("url" , this).text()</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;).get() : res;</span><br><span class="line">      ...</span><br></pre></td></tr></table></figure>

<h2 id="热门文章排行榜"><a href="#热门文章排行榜" class="headerlink" title="热门文章排行榜"></a>热门文章排行榜</h2><div class="note info">
            <p>本章节部分思路参考 <a href="https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">nMask | Hexo搭建博客教程 #7.16</a>，自行进行了代码重构。</p>
          </div>

<p>添加文章阅读次数排行统计页面，效果如下图：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/top10.png" alt="热门文章排行榜" title="热门文章排行榜"></p>
<p>该功能同样是基于LeanCloud提供的后端服务支持。具体实现方案如下：</p>
<p>在站点目录下执行以下命令新建页面</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ hexo new<span class="built_in"> page </span>top</span><br></pre></td></tr></table></figure>

<p>在主题配置文件中新增一项菜单入口：</p>
<figure class="highlight diff"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">  menu:</span><br><span class="line">    home: / || home</span><br><span class="line"><span class="addition">+   top: /top/ || signal</span></span><br><span class="line">    tags: /tags/ || tags</span><br><span class="line">    categories: /categories/ || th</span><br><span class="line">    archives: /archives/ || archive</span><br><span class="line">    about: /about/ || user</span><br></pre></td></tr></table></figure>

<p>在语言包中新增菜单中文：</p>
<figure class="highlight diff"><figcaption><span>themes\next\languages\zh-CN.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">  menu:</span><br><span class="line">    home: 首页</span><br><span class="line">    archives: 归档</span><br><span class="line">    categories: 分类</span><br><span class="line">    tags: 标签</span><br><span class="line">    about: 关于</span><br><span class="line"><span class="addition">+   top: 排行榜</span></span><br></pre></td></tr></table></figure>

<p>然后在新增的排行榜页面内添加以下内容：</p>
<figure class="highlight html"><figcaption><span>source\top\index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 热门文章Top 10</span><br><span class="line">comments: false</span><br><span class="line">date: 2018-10-30 00:54:50</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"post-rank"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/leancloud-storage@3.10.0/dist/av-min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> APP_ID = ******;  <span class="comment">//输入个人LeanCloud账号AppID</span></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> APP_KEY = ******;  <span class="comment">//输入个人LeanCloud账号AppKey</span></span></span><br><span class="line">  AV.init(&#123;</span><br><span class="line">    appId: APP_ID,</span><br><span class="line">    appKey: APP_KEY</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">'Counter'</span>);<span class="comment">//表名</span></span></span><br><span class="line"><span class="actionscript">  query.descending(<span class="string">'time'</span>); <span class="comment">//结果按阅读次数降序排序</span></span></span><br><span class="line"><span class="actionscript">  query.limit(<span class="number">10</span>);  <span class="comment">//最终只返回10条结果</span></span></span><br><span class="line"><span class="javascript">  query.find().then( <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> content = response.reduce( <span class="function">(<span class="params">accum, &#123;attributes&#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">      accum += `<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prefix"</span>&gt;</span>热度 $&#123;attributes.time&#125; ℃<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;attributes.url&#125;"</span>&gt;</span>$&#123;attributes.title&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>`</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> accum;</span></span><br><span class="line"><span class="actionscript">    &#125;,<span class="string">""</span>)</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.querySelector(<span class="string">"#post-rank"</span>).innerHTML = content;</span></span><br><span class="line">  &#125;)</span><br><span class="line"><span class="javascript">  .catch( <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(error);</span></span><br><span class="line">  &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-id">#post-rank</span> &#123;</span></span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-id">#post-rank</span> <span class="selector-class">.prefix</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#ff4d4f</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>本是根据 <a href="https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">nMask | Hexo搭建博客教程 #7.16</a> 引入v0.6.1的脚本来实现该功能，结果发现出现如下Bug：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/LeanCloud-bug.png" alt="LeanCloud v0.6.1 Bug" title="LeanCloud v0.6.1 Bug"></p>
<p>后来根据 <a href="https://leancloud.cn/docs/leanstorage_guide-js.html" target="_blank" rel="noopener">LeanCloud | JavaScript SDK 安装指南</a> 引入v3.10.0的最新脚本，使用过程中虽然功能正常，但是控制台有报错信息:</p>
<blockquote>
<p> Uncaught TypeError: Cannot redefine property: applicationId</p>
</blockquote>
<h2 id="豆瓣阅读-电影-游戏"><a href="#豆瓣阅读-电影-游戏" class="headerlink" title="豆瓣阅读/电影/游戏"></a>豆瓣阅读/电影/游戏</h2><div class="note info">
            <p>本章节参考 <a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">mythsman/hexo-douban README.md</a></p>
          </div>

<p>为站点添加豆瓣阅读/电影/游戏页面，效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/douban-movies.png" alt="豆瓣电影" title="豆瓣电影"></p>
<p>在根目录下执行以下命令安装相关依赖：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-douban <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在站点配置文件中添加以下内容：</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">douban:</span></span><br><span class="line">  <span class="attr">user:</span>  <span class="comment"># 个人豆瓣ID</span></span><br><span class="line">  <span class="attr">builtin:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">book:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">'This is my book title'</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">'This is my book quote'</span></span><br><span class="line">  <span class="attr">movie:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">'This is my movie title'</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">'This is my movie quote'</span></span><br><span class="line">  <span class="attr">game:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">'This is my game title'</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">'This is my game quote'</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<ul>
<li>user: 填写豆瓣ID。登陆豆瓣后点击<strong>个人主页</strong>，此时url中最后一段即是用户ID，一般情况下会是一段数字，如果设置了个人域名的话，则个人域名即为ID。</li>
<li>builtin: 是否将生成页面的功能嵌入 <code>hexo s</code> 和 <code>hexo g</code> 中。</li>
<li>timeout: 爬取数据的超时时间。</li>
</ul>
<p>如果只想生成某一个页面（比如只生成读书页面），把其他的配置项注释掉即可。</p>
<p>在主题配置文件中新增菜单入口：</p>
<figure class="highlight diff"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">  menu:</span><br><span class="line">    home: / || home</span><br><span class="line">    tags: /tags/ || tags</span><br><span class="line">    categories: /categories/ || th</span><br><span class="line">    archives: /archives/ || tasks</span><br><span class="line"><span class="addition">+   books: /books/ || book  </span></span><br><span class="line"><span class="addition">+   movies: /movies/ || video-camera  </span></span><br><span class="line"><span class="addition">+   games: /games/ || gamepad</span></span><br></pre></td></tr></table></figure>

<p>在语言包中新增菜单中文：</p>
<figure class="highlight diff"><figcaption><span>themes\next\language\zh_CN.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">  menu:</span><br><span class="line">    home: 首页</span><br><span class="line">    archives: 归档</span><br><span class="line">    categories: 分类</span><br><span class="line">    tags: 标签</span><br><span class="line"><span class="addition">+   movies: 电影</span></span><br><span class="line"><span class="addition">+   books: 读书</span></span><br><span class="line"><span class="addition">+   games: 游戏</span></span><br></pre></td></tr></table></figure>

<p>然后在根目录下执行以下命令生成豆瓣阅读/电影/游戏页面：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo douban</span><br></pre></td></tr></table></figure>

<p>可选参数:</p>
<ul>
<li>-b | --books: 只生成豆瓣读书页面</li>
<li>-m | --movies:  只生成豆瓣电影页面</li>
<li>-g | --games: 只生成豆瓣游戏页面</li>
</ul>
<p>执行命令后，插件会根据用户提供的ID爬取豆瓣中的数据信息并在 <code>public</code> 目录下生成对应的页面，当服务器启动或部署后会将页面显示在对应的菜单路由下。</p>
<p>如果在站点配置中设置了 <code>douban.builtin: false</code>，则每次豆瓣数据变动后需要手动执行一次 <code>hexo douban</code> 来刷新页面数据。如果设置了 <code>douban.builtin: true</code>，则每次执行 <code>hexo s</code> 和 <code>hexo g</code> 的时候将会自动同时执行 <code>hexo douban</code> 命令，但这样可能会增加打包编译的时间。建议如果豆瓣数据变动不频繁的情况下该项设为 <code>false</code> 即可。</p>
<p>通常大家都喜欢用 <code>hexo d</code> 来作为 <code>hexo deploy</code> 命令的简化，但是当安装了 <code>hexo douban</code> 之后， <code>hexo d</code> 就会有歧义而无法执行，因为 <code>hexo douban</code> 跟 <code>hexo deploy</code> 的Alias都是 <code>hexo d</code>。</p>
<h2 id="在线聊天"><a href="#在线聊天" class="headerlink" title="在线聊天"></a>在线聊天</h2><p>在线聊天算是一个比较成熟的SaaS商业应用了，业内产品如 <a href="https://www.tidiochat.com/" target="_blank" rel="noopener">Tidio</a>、 <a href="https://talkjs.com/" target="_blank" rel="noopener">TalkJS</a>、<a href="https://www.intercom.com/" target="_blank" rel="noopener">Intercom</a>、<a href="https://www.tawk.to/" target="_blank" rel="noopener">tawk.to</a> 等，使用体验都很好，交互界面也很干净别致。经过比较，本站最终选择了 Tidio：</p>
<ul>
<li>在个人博客这种业务场景中，几乎用不到它的收费功能，可以算是终身免费了。</li>
<li>Tidio提供了多种消息回复渠道，包括网页、桌面应用、iOS/Android APP（需要Google play服务支持）。</li>
<li>除了在线聊天，Tidio还可以在线发送邮件，以及关联接收Fackbook消息。</li>
<li>在几款产品的界面风格中，还是 Tidio 看起来更加优雅一些，深得我爱。</li>
</ul>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/Tidio.png" alt="Tidio 界面" title="Tidio 界面"></p>
<p>首先需要<a href="https://www.tidiochat.com/panel/login" target="_blank" rel="noopener">注册Tidio账号</a>，根据引导填写应用信息。进入控制台后，在 <strong>SETTINGS</strong> -&gt; <strong>Developer</strong> -&gt; <strong>Project data</strong> 中获取到Public Key：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/tidio-public-key.png" alt="Tidio Public Key" title="Tidio Public Key"></p>
<p>在主题配置文件下添加以下代码并补全Public Key：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Tidio online chat</span></span><br><span class="line"><span class="comment"># see: https://www.tidiochat.com</span></span><br><span class="line"><span class="attr">tidio:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">key:</span>  <span class="comment"># Public_Key</span></span><br></pre></td></tr></table></figure>

<p>在主题自定义布局文件中添加以下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_custom\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# Tidio 在线联系功能 #&#125;</span><br><span class="line">&#123;% if theme.tidio.enable %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//code.tidio.co/&#123;&#123; theme.tidio.key &#125;&#125;.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>为避免代码加载阻塞页面渲染，需要为脚本添加 <code>async</code> 属性使其异步加载。</p>
<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>刷新页面即可在右下角看到Tidio的会话标志了。接下来可以在Tidio控制台的 <strong>Channel</strong> -&gt; <strong>Live chat</strong> -&gt;  <strong>Appearance</strong> 中根据提示定制聊天对话框的主题外观和语言包：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/Tidio-appearance.png" alt="定制Tidio样式与功能" title="定制Tidio样式与功能"></p>
<h2 id="行为监测与反馈"><a href="#行为监测与反馈" class="headerlink" title="行为监测与反馈"></a>行为监测与反馈</h2><p><a href="https://www.hotjar.com/" target="_blank" rel="noopener">Hotjar</a> 是一款轻量级的监测分析工具，能够提供用户行为监测和用户反馈分析，相比Google Analysis而言，它没有复杂的监测指标与分析报表，更加的简单实用，并且为免费用户提供2000pv/day的数据采集服务，适用于小型网站或个人博客的监测分析。</p>
<p>Hotjar主要提供<strong>ANALYTICS</strong>和<strong>FEEDBACK</strong>两大类服务。</p>
<p>ANALYTICS主要用于用户交互行为的监测分析，属于客观分析，包括以下四项具体功能：</p>
<ul>
<li>Heatmaps: 通过热力图可视化用户的鼠标交互行为，帮助理解用户动机和需求。</li>
<li>Recording: 记录用户在站点的行为轨迹，了解应用的可用性以及用户遭遇的问题。</li>
<li>Funnels: 记录每个页面或者步骤的用户流失率。</li>
<li>Forms: 记录表单中每一项输入的完成率，完成时间以及用户流失率。</li>
</ul>
<p>FEEDBACK主要为用户提供反馈渠道，收集用户观点与数据，属于主观分析，包括以下四项具体功能：</p>
<ul>
<li>Incoming: 即时反馈，了解用户对页面的评价。</li>
<li>Polls: 投票反馈，获取某个问题的用户答案。</li>
<li>Surveys: 问卷调查，以问卷形式获取用户反馈。</li>
<li>Recruiters: 获取用户信息，招募用户用于用户调查或测试反馈。</li>
</ul>
<p>Hotjar通过以上八项具体而实用的功能为用户提供主客观相结合的监测分析服务，可以说它是所有轻量级分析工具中唯一做到了主客观相结合的，同时也是所有主客观分析工具中，做的最轻量的。</p>
<div class="note info">
            <p>更多功能介绍请参考 <a href="https://www.hotjar.com/tour" target="_blank" rel="noopener">Hotjar Features</a></p>
          </div>

<p>本站点中应用了Incoming即时反馈功能，读者可以通过该渠道评价页面或者提交勘误，点击悬挂在屏幕右侧的Feedback按钮弹出对话框，点击人物头像评价后将会跳转到如下界面：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/hotjar-feedback.png" alt="Hotjar Incoming Feedback" title="Hotjar Incoming Feedback"></p>
<p>你可以在此页面输入反馈内容，并通过点击左下角的按钮在当前页面上标识目标元素，之后 hotjar 会将反馈内容连同带有高亮标识的页面截图一起提交到后台：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/hotjar-feedback-screenshot.png" alt="Incoming Feedback with screenshot " title="Incoming Feedback with screenshot"></p>
<div class="note info">
            <p>更多关于 Incoming Feedback 的介绍请参考 <a href="https://www.hotjar.com/incoming-feedback" target="_blank" rel="noopener">Incoming Feedback by Hotjar</a></p>
          </div>

<p>在站点中集成Hotjar的各项功能，需要先 <a href="https://insights.hotjar.com/register" target="_blank" rel="noopener">注册 Hotjar 账号</a>，根据指引一步步填写站点信息，然后在控制面板首页中获取site ID：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/hotjar-site-id.png" alt="Hotjar site ID" title="Hotjar site ID"></p>
<p>在主题配置文件下添加以下代码并补全site ID：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hotjar</span></span><br><span class="line"><span class="comment"># see: https://www.hotjar.com/</span></span><br><span class="line"><span class="attr">hotjar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">siteID:</span>  <span class="comment"># site ID</span></span><br></pre></td></tr></table></figure>

<p>在主题自定义布局文件中添加以下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_custom\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# hotjar 页面反馈 #&#125;</span><br><span class="line">&#123;% if theme.hotjar.enable %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    (<span class="function"><span class="keyword">function</span><span class="params">(h,o,t,j,a,r)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">      h.hj=h.hj||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;(h.hj.q=h.hj.q||[]).push(<span class="built_in">arguments</span>)&#125;;</span></span><br><span class="line"><span class="handlebars"><span class="xml">      h._hjSettings=&#123;hjid:</span><span class="template-variable">&#123;&#123; theme.hotjar.siteID &#125;&#125;</span><span class="xml">,hjsv:6&#125;;</span></span></span><br><span class="line"><span class="actionscript">      a=o.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">      r=o.createElement(<span class="string">'script'</span>);r.async=<span class="number">1</span>;</span></span><br><span class="line">      r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;</span><br><span class="line">      a.appendChild(r);</span><br><span class="line"><span class="javascript">    &#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">'https://static.hotjar.com/c/hotjar-'</span>,<span class="string">'.js?sv='</span>);</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>如此即可将 Hotjar 嵌入到站内，接下来在 Hotjar 控制台菜单中点击 Incoming，然后根据引导一步步配置即时反馈服务即可：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/hotjar-setup-incoming.png" alt="配置 Incoming Feedback" title="配置 Incoming Feedback"></p>
<div class="note info">
            <p>如果你在本站内发现了错别字、病句、失效链接、代码缩进不一致，可以通过页面右侧的Feedback反馈。</p>
          </div>

<h1 id="文章页面个性化设置"><a href="#文章页面个性化设置" class="headerlink" title="文章页面个性化设置"></a>文章页面个性化设置</h1><h2 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h2><p>Next支持多款评论系统：</p>
<ul>
<li><a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a>：欧美UI风格，支持Tweet、Facebook等国外社交软件的三方登陆和一键分享。 <a href="https://blog.disqus.com/disqus-welcomes-the-spruce" target="_blank" rel="noopener">Demo</a></li>
<li><a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a>：必须用github账号登陆才能评论，支持Markdown语法，与github issues页面风格一致 <a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Demo</a></li>
<li><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a>：支持匿名评论，支持Markdown语法，界面简洁美观</li>
<li><a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言</a>：国产评论系统，可区分热评和最新评论，论坛贴吧风</li>
<li><a href="https://www.livere.com/" target="_blank" rel="noopener">来必力</a>：支持插入图片和GIF，支持国内外多种社交媒体的三方登陆 <a href="https://www.livere.com/city-demo" target="_blank" rel="noopener">Demo</a></li>
</ul>
<p>博客的评论系统不需要太过复杂的功能，我的要求是一定要轻量级，足够简洁美观，并且支持Markdown语法，因此我首选Valine和gitment，这两个评论系统都是由国内个人开发的，在此向开发者致敬。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/valine-comments.png" alt="Valine 评论系统" title="Valine 评论系统"></p>
<p>Next已经内置了Valine组件，在主题配置文件中开启评论功能即可，同时，由于Valine是基于Leancloud提供后端服务的，所以需要填写LeanCloud的App ID和App Key。</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="string">***&lt;app_id***</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">***&lt;app_key&gt;***</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span>  <span class="comment"># 收到新评论是否邮件通知</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span>  <span class="comment"># 是否开启验证码</span></span><br><span class="line">  <span class="attr">placeholder:</span>  <span class="comment"># 默认填充文字</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span>  <span class="comment"># 设置默认评论列表</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail</span>  <span class="comment"># 评论区头部表单</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span>  <span class="comment"># 每页评论数</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span>  <span class="comment"># 同时开启文章阅读次数统计</span></span><br></pre></td></tr></table></figure>

<p>Valine也附带了阅读统计功能，可以在Valine配置项中设置 <code>visitor: true</code> 开启该功能。为避免后端服务冲突，建议不要同时启用Valine的阅读统计功能和 <code>leancloud_visitors</code>。</p>
<div class="note info">
            <p>关于如何在收到评论时发送邮件提醒请参照 <a href="http://www.zhaojun.im/hexo-valine-admin/" target="_blank" rel="noopener">赵俊 | Hexo 优化 — Valine 扩展之邮件通知</a></p>
          </div>

<p>Next暂时不支持通过配置的方式隐藏文章标题下的评论数量，如要隐藏，可在自定义样式文件中添加如下代码：</p>
<figure class="highlight css"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//屏蔽标题下的评论数量</span><br><span class="line"><span class="selector-class">.post-comments-count</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果你是轻度洁癖患者，想要隐藏评论区的浏览器和操作系统版本号以拥有更加干净的评论界面，可在自定义样式文件中添加如下代码：</p>
<figure class="highlight css"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//屏蔽评论组件的多余信息</span><br><span class="line"><span class="selector-id">#comments</span> <span class="selector-class">.vsys</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="文末版权声明"><a href="#文末版权声明" class="headerlink" title="文末版权声明"></a>文末版权声明</h2><p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/post-copyright.png" alt="文章版权声明" title="文章版权声明"></p>
<p>在主题配置文件中开启文章底部的版权声明，版权声明默认使用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">CC BY-NC-SA 4.0</a> 许可协议，用户可以根据自身需要修改 <code>licence</code> 字段变更协议。</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">&lt;a</span> <span class="string">href="https://creativecommons.org/licenses/by-nc-sa/4.0/"</span> <span class="string">rel="external</span> <span class="string">nofollow"</span> <span class="string">target="_blank"&gt;CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span><span class="string">&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>

<p>默认版权声明中只有 <strong>本文作者</strong>、<strong>本文链接</strong>、<strong>版权声明</strong> 三项，如果你想添加更多内容，如 <strong>创建时间</strong>、<strong>修改时间</strong>、<strong>引用链接</strong> 等，需要修改版权声明的相关代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_macro\post-copyright.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JS库 clipboard 拷贝内容到粘贴板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/clipboard.js/2.0.1/clipboard.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JS库 sweetalert 显示提示信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/sweetalert/dist/sweetalert.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"post-copyright"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 本文标题 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.title') + __('symbol.colon') &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; post.title &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 本文作者 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-author"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; post.author | default(author) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 创建时间 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.created') + __('symbol.colon') &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; post.date.format("YYYY年MM月DD日 - HH时MM分") &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 修改时间 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.modified') + __('symbol.colon') &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; post.updated.format("YYYY年MM月DD日 - HH时MM分") &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 引用链接 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-link"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; post.url | default(post.permalink) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; post.title &#125;&#125;"</span>&gt;</span>&#123;&#123; post.url | default(post.permalink) &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制引用链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">style</span>=<span class="string">"cursor: pointer"</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"[&#123;&#123; post.author | default(author) &#125;&#125;'s Blog | &#123;&#123; post.title &#125;&#125;](&#123;&#123; post.permalink &#125;&#125;)"</span>  <span class="attr">aria-label</span>=<span class="string">"&#123;&#123; __('post.copy_success') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 版权声明 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-license"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> clipboard = <span class="keyword">new</span> ClipboardJS(<span class="string">'.fa-clipboard'</span>);</span></span><br><span class="line"><span class="actionscript">  clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span><span class="params">(target)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> message = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml">    message.innerHTML = '<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-check-circle message-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"message-content"</span>&gt;</span>' + target.trigger.getAttribute('aria-label') + '<span class="tag">&lt;/<span class="name">span</span>&gt;</span>';</span></span></span><br><span class="line">    swal(&#123;</span><br><span class="line">      content: message,</span><br><span class="line"><span class="actionscript">      className: <span class="string">"copy-success-message"</span>,</span></span><br><span class="line">      timer: 1000,</span><br><span class="line"><span class="actionscript">      button: <span class="literal">false</span></span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在版权样式文件中添加如下样式：</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_common\components\post\post-copyright.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.swal-overlay</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.copy-success-message</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">4px</span> <span class="number">12px</span> <span class="built_in">rgba</span>(0,0,0,0.15);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">width</span>: auto;  </span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">16</span>x <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.copy-success-message</span> <span class="selector-class">.swal-content</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span>;  </span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.copy-success-message</span> <span class="selector-class">.message-icon</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#52c41a</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.copy-success-message</span> <span class="selector-class">.message-content</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后补全版权信息文案字段：</p>
<figure class="highlight yaml"><figcaption><span>themes/next/languages/zh-CN.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">created:</span> <span class="string">创建时间</span></span><br><span class="line">  <span class="attr">modified:</span> <span class="string">修改时间</span></span><br><span class="line">  <span class="attr">copy_success:</span> <span class="string">复制成功</span>  </span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">本文标题</span></span><br><span class="line">    <span class="attr">author:</span> <span class="string">本文作者</span></span><br><span class="line">    <span class="attr">link:</span> <span class="string">引用链接</span></span><br><span class="line">    <span class="attr">license_title:</span> <span class="string">版权声明</span></span><br><span class="line">    <span class="attr">license_content:</span> <span class="string">"本博客所有文章除特别声明外，均采用 %s 许可协议。转载请注明出处！"</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>点击引用链接后的图标 <i class="fa fa-clipboard"></i> 即可快捷复制Markdown引用链接，并将弹出复制成功的提示语。该功能主要借助 <a href="https://clipboardjs.com/" target="_blank" rel="noopener">clipboard</a> 和 <a href="https://sweetalert.js.org/" target="_blank" rel="noopener">sweetalert</a> 两个js库来实现，并参考 <a href="https://ant.design/components/message/" target="_blank" rel="noopener">antDesign | message组件</a> 重写了弹框样式。</p>
          </div>


<p>在实际使用过程中，并非每篇文章都需要版权声明，如果转载了别人的文章，文末再出现个人版权声明就不太合适。此时可在Front-Matter中设定变量 <code>copyright</code> 用于控制是否显示版权信息。修改文章布局模板中相关代码，使得只有当主题配置文件中 <code>post_copyright.enable</code> 字段和 <code>page.copyright</code> 字段同时为 <code>true</code> 时才会插入版权声明：</p>
<figure class="highlight diff"><figcaption><span>themes/next/layout/_macro/post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="deletion">- &#123;% if theme.post_copyright.enable and not is_index %&#125;</span></span><br><span class="line"><span class="addition">+ &#123;% if theme.post_copyright.enable and page.copyright and not is_index %&#125;</span></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123;% include 'post-copyright.swig' with &#123; post: post &#125; %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>为了批量为每篇新文章设定该变量并赋默认值，可以修改草稿模板内容，这样以来每篇草稿发布为正文后都会默认显示底部版权信息：</p>
<figure class="highlight diff"><figcaption><span>scaffolds\draft.md</span></figcaption><table><tr><td class="code"><pre><span class="line">  title: &#123;&#123; title &#125;&#125;</span><br><span class="line">  tags:</span><br><span class="line">  categories:</span><br><span class="line"><span class="addition">+ copyright: true</span></span><br></pre></td></tr></table></figure>

<h2 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h2><p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/post-reward.png" alt="文章打赏功能" title="文章打赏功能"></p>
<p>启用主题配置文件中的打赏相关字段，并将个人收款码图片置于 themes\next\source\images\ 目录下，注意保持图片命名与配置文件中一致：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">reward_comment:</span></span><br><span class="line"><span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.png</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br></pre></td></tr></table></figure>

<p>如果要关闭悬停收款码上的文字抖动效果，可以在自定义样式文件中添加以下代码：</p>
<figure class="highlight css"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//关闭打赏收款码的文字抖动效果</span><br><span class="line"><span class="selector-id">#QR</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>并非每个页面都需要开启打赏功能，可以在 Front-Matter 中添加 <code>reward</code> 字段来控制是否在本文章中添加打赏信息，然后修改文章布局模板中相关的判定条件：</p>
<figure class="highlight diff"><figcaption><span>themes/next/layout/_macro/post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="deletion">- &#123;% if (theme.alipay or theme.wechatpay or theme.bitcoin) and not is_index %&#125;</span></span><br><span class="line"><span class="addition">+ &#123;% if ( post.reward and (theme.alipay or theme.wechatpay or theme.bitcoin) and not is_index %&#125;</span></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123;% include 'reward.swig' %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>为了方便可在草稿模板 scaffolds\draft.md 中统一添加 <code>reward</code> 字段默认值：</p>
<figure class="highlight diff"><figcaption><span>scaffolds\draft.md</span></figcaption><table><tr><td class="code"><pre><span class="line">  title: &#123;&#123; title &#125;&#125;</span><br><span class="line">  tags:</span><br><span class="line">  categories:</span><br><span class="line"><span class="addition">+ reward: true</span></span><br></pre></td></tr></table></figure>

<h2 id="添加图片灯箱"><a href="#添加图片灯箱" class="headerlink" title="添加图片灯箱"></a>添加图片灯箱</h2><p>添加灯箱功能，实现点击图片后放大聚焦图片，并支持幻灯片播放、全屏播放、缩略图、快速分享到社交媒体等，该功能由 <a href="https://github.com/fancyapps/fancybox" target="_blank" rel="noopener">fancyBox</a> 提供，效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/fancybox.png" alt="fancyBox 灯箱" title="fancyBox 灯箱"></p>
<p>在根目录下执行以下命令安装相关依赖：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">$ git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/theme</span>-<span class="keyword">next</span>/theme-<span class="keyword">next</span>-fancybox3 themes/<span class="keyword">next</span>/source/<span class="class"><span class="keyword">lib</span>/<span class="title">fancybox</span></span></span><br></pre></td></tr></table></figure>

<p>在主题配置文件中设置 <code>fancybox: true</code>：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>刷新浏览器即可生效。</p>
<h2 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h2><p>该功能由 <a href="https://github.com/tea3/hexo-related-popular-posts" target="_blank" rel="noopener">hexo-related-popular-posts</a> 插件提供，效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/related-post.png" alt="相关文章推荐" title="相关文章推荐"></p>
<p>在站点根目录中执行以下命令安装依赖：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-related-popular-posts <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在主题配置文件中开启相关文章推荐功能：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span>  <span class="comment"># custom header, leave empty to use the default one</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">maxCount:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>此时会在每篇文章结尾根据标签相关性和内容相关性来推荐相关文章。</p>
<p>事实上并非每篇文章都需要开启该功能，可在文章 Front-Matter 中设置 <code>related_posts</code> 字段来控制是否在文末显示相关文章，然后修改文章布局模板中相关的判定条件：</p>
<figure class="highlight diff"><figcaption><span>themes/next/layout/_macro/post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="deletion">- &#123;% if theme.related_posts.enable and (theme.related_posts.display_in_home or not is_index) %&#125;</span></span><br><span class="line"><span class="addition">+ &#123;% if theme.related_posts.enable and (theme.related_posts.display_in_home or not is_index) and post.related_posts %&#125;</span></span><br><span class="line">    &#123;% include 'post-related.swig' with &#123; post: post &#125; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>为了方便可在草稿模板 scaffolds\draft.md 中统一添加 <code>related_posts</code> 字段默认值：</p>
<figure class="highlight diff"><figcaption><span>scaffolds\draft.md</span></figcaption><table><tr><td class="code"><pre><span class="line">  title: &#123;&#123; title &#125;&#125;</span><br><span class="line">  tags:</span><br><span class="line">  categories:</span><br><span class="line"><span class="addition">+ related_posts: true</span></span><br></pre></td></tr></table></figure>

<h2 id="文章评分"><a href="#文章评分" class="headerlink" title="文章评分"></a>文章评分</h2><p><a href="https://widgetpack.com" target="_blank" rel="noopener">widgetpack</a> 是一款轻量级的插件，提供四项具体的功能：</p>
<ul>
<li>Comments: 评论系统，类似于留言板</li>
<li>Reviews: 评价系统，类似于商品评价</li>
<li>Rating: 星级评分系统</li>
<li>Google Reviews: 关联展示Google Rating</li>
</ul>
<p>Next主题中已经集成了 widgetpack 的星级评分系统，用户无须再安装或引入插件脚本，只需在 widgetpack 中注册账号并修改主题配置即可，应用效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/rating.png" alt="文章评分组件" title="文章评分组件"></p>
<p>在 <a href="https://widgetpack.com" target="_blank" rel="noopener">widgetpack</a> 中注册账号，根据引导填写应用名称和域名创建应用，创建后可在页面左上角看到应用id。</p>
<p>在主题配置文件中开启评分功能，填写应用id，并设置评分颜色：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Star rating support to each article.</span></span><br><span class="line"><span class="comment"># To get your ID visit https://widgetpack.com</span></span><br><span class="line"><span class="attr">rating:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span>     <span class="comment">#&lt;app_id&gt;</span></span><br><span class="line">  <span class="attr">color:</span>  <span class="string">fadb14</span></span><br></pre></td></tr></table></figure>

<p>此时刷新浏览器即可在文章末尾看到空的评分栏了。点击评分发现需要以社交账号登陆，而这些社交账号基本都是facebook、twitter等墙外的社交软件，限制了评分系统可用性，我们可以在 widgetpack 控制台中修改评分认证机制。</p>
<p>在控制台中点击左上角展开菜单，在 <strong>Rating</strong> -&gt; <strong>Setting</strong> 中将 Vote via 选项改为 Device(cookie) 以开启匿名评分，该选项将基于设备认证访问者身份：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/rate-vote-via.png" alt="开启匿名评分" title="开启匿名评分"></p>
<p>用户还可以在该页面设定 star 数量和大小。修改后记得勾选右下角的SAVE SETTING才会生效。</p>
<p>在实际使用过程中，并非每篇文章都需要开启评分。此时可在 Front-Matter 中设定变量 rating 用于控制是否开启评分。修改文章布局模板中相关代码，使得只有当主题配置文件中 <code>rating.enable</code> 字段和 <code>page.rating</code> 字段同时为 <code>true</code> 才会插入评分组件：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_macro\post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line"><span class="deletion">-  &#123;% if theme.rating.enable or (theme.vkontakte_api.enable and theme.vkontakte_api.like) or (theme.facebook_sdk.enable and theme.facebook_sdk.like_button) or (theme.needmoreshare2.enable and theme.needmoreshare2.postbottom.enable) or (theme.baidushare and theme.baidushare.type === "button" )%&#125;</span></span><br><span class="line"><span class="addition">+  &#123;% if (theme.rating.enable and post.rating) or (theme.vkontakte_api.enable and theme.vkontakte_api.like) or (theme.facebook_sdk.enable and theme.facebook_sdk.like_button) or (theme.needmoreshare2.enable and theme.needmoreshare2.postbottom.enable) or (theme.baidushare and theme.baidushare.type === "button" )%&#125;</span></span><br><span class="line">    &lt;div class="post-widgets"&gt;</span><br><span class="line">    &#123;% if theme.rating.enable %&#125;</span><br><span class="line">      &lt;div class="wp_rating"&gt;</span><br><span class="line">        &lt;div id="wpac-rating"&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>为了批量为每篇新文章设定该变量并赋默认值，可以修改草稿模板内容，这样以来每篇草稿发布后都会默认开启评分：</p>
<figure class="highlight diff"><figcaption><span>scaffolds\draft.md</span></figcaption><table><tr><td class="code"><pre><span class="line">  title: &#123;&#123; title &#125;&#125;</span><br><span class="line">  tags:</span><br><span class="line">  categories:</span><br><span class="line"><span class="addition">+ rating: true</span></span><br></pre></td></tr></table></figure>

<p>站点上线后，可以在控制台菜单的 <strong>Site</strong> -&gt; <strong>Setting</strong> 中勾选 Private，使得组件只对应用内指定的域名上生效，这样以来即时别人错填了你的id也不会将评分数据误提交到你的应用中了。</p>
<div class="note info">
            <p>widgetpack 与前文提到的 hotjar 在评价反馈功能上的侧重点不一样，widgetpack 更侧重于对文章的评分，而hotjar侧重于对整个页面的评分，并提供了文字和截图反馈的渠道。</p>
          </div>

<h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p>该功能由 <a href="https://github.com/MikeCoder/hexo-blog-encrypt" target="_blank" rel="noopener">hexo-blog-encrypt</a> 插件提供，效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-advanced-settings/post-encrypt.png" alt="文章加密" title="文章加密"></p>
<p>在站点根目录中执行以下命令安装依赖：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-blog-<span class="keyword">encrypt</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在站点配置文件中添加如下字段：</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">encrypt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">default_abstract:</span> <span class="string">此文章已被加密，需要输入密码访问。</span>  <span class="string">//首页文章列表中加密文章的默认描述文案</span></span><br><span class="line">  <span class="attr">default_message:</span> <span class="string">请输入密码以阅读这篇私密文章。</span>  <span class="string">//文章详情页的密码输入框上的默认描述文案</span></span><br></pre></td></tr></table></figure>

<p>重启服务器，这个时候可能需要经历较长一段时间的加密过程，请耐心等待，加密完成后刷新页面将会显示密码输入框，输入密码后才能继续访问文章内容。</p>
<div class="note info">
            <p>该功能只会加密文章正文，其他内容如打赏、版权信息、标签等则不会被加密隐藏，这样看起来有点奇怪，所以建议加密文章隐藏掉打赏和版权信息内容。</p>
          </div>

<p>密码输入错误时将会显示浏览器默认告警弹窗，可以使用 <a href="https://sweetalert.js.org/" target="_blank" rel="noopener">sweetalert</a> 来美化错误提示：</p>
<p>在主题自定义布局文件中添加如下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_custom\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/sweetalert/dist/sweetalert.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>在 node_modules 依赖库中修改 hexo-blog-encrypt 源码：</p>
<figure class="highlight diff"><figcaption><span>node_modules\hexo-blog-encrypt\lib\blog.encrypt.js</span></figcaption><table><tr><td class="code"><pre><span class="line">  ...</span><br><span class="line">  &#125; catch (e) &#123;</span><br><span class="line"><span class="deletion">-   alert(decryptionError);</span></span><br><span class="line"><span class="addition">+   swal(&#123;   </span></span><br><span class="line"><span class="addition">+     text: "密码错误!",</span></span><br><span class="line"><span class="addition">+     icon: "error",</span></span><br><span class="line"><span class="addition">+     className: "password-error",</span></span><br><span class="line"><span class="addition">+     timer: 1000,  </span></span><br><span class="line"><span class="addition">+     button: false</span></span><br><span class="line"><span class="addition">+   &#125;);</span></span><br><span class="line">    console.log(e);</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>

<p>在自定义样式文件中添加如下代码：</p>
<figure class="highlight css"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//密码错误sweetalert弹框样式修改</span><br><span class="line"><span class="selector-class">.swal-overlay</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.password-error</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">4px</span> <span class="number">12px</span> <span class="built_in">rgba</span>(0,0,0,0.15);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note warning">
            <p>由于是在node_module中修改的依赖文件，一旦更新或者重装依赖都会覆盖修改，需要重新修改一遍。</p>
          </div>

<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>在集成第三方插件或者自定义新功能的过程中我一直试图秉持这些原则：</p>
<ul>
<li>可以在站点配置/主题配置文件中方便快捷的开启/关闭插件服务</li>
<li>可以在语言包 zh-CN.yml 中快速修改页面中的自定义文案，而不是在代码中将文字表述写死</li>
<li>尽量在自定义样式文件 custom.styl 和自定义布局文件 custom.swig 中添加代码，而非修改主题源码</li>
<li>新增文件统一放在 _custom 目录下</li>
</ul>
<p>所有以上这些原则，尽管实现起来可能更复杂，需要更多的代码，但都是为了让站点更好维护，更灵活方便。</p>
<p>本文介绍了如何通过修改自定义设置和集成三方插件服务搭建一个功能更加完善的个性化Hexo博客，尽管我们的博客可能已经做的令自己很满意了，但至今仍是只能在本地访问，别人看不到。我们建立博客往往都是希望能将自己的文章分享给他人来创造更多价值，如果想要了解如何将站点部署到公网，请参考本系列中最后一篇文章：。</p>
<div class="reference-linking">参考链接</div>

<ul>
<li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">reuixiy | 打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</a></li>
<li><a href="https://notes.doublemine.me/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">夏末 | 为NexT主题添加文章阅读量统计功能</a></li>
<li><a href="https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">nMask | Hexo搭建博客教程</a></li>
<li><a href="https://leancloud.cn/docs/leanstorage_guide-js.html" target="_blank" rel="noopener">LeanCloud | JavaScript SDK 安装指南</a></li>
<li><a href="https://diygod.me/2153/" target="_blank" rel="noopener">DIYgod | 我藏好了哦</a></li>
<li><a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">mythsman/hexo-douban README.md</a></li>
<li><a href="https://asdfv1929.github.io/2018/01/21/daovoice/" target="_blank" rel="noopener">asdfv1929 | Hexo NexT主题内接入网页在线联系功能</a></li>
<li><a href="https://www.hotjar.com/tour" target="_blank" rel="noopener">Hotjar Features</a></li>
<li><a href="https://www.hotjar.com/incoming-feedback" target="_blank" rel="noopener">Incoming Feedback by Hotjar</a></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建个人博客系列：主题美化篇</title>
    <url>/hexo-theme-beautiful/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文介绍了在 Next 主题的基础上进一步对博客进行美化的方案，主要包括:</p>
<ul>
<li>在文章末尾添加结束标记</li>
<li>修改侧边栏的位置到左边</li>
<li>添加不同类型的动态背景效果</li>
<li>添加 live2d 看板娘</li>
<li>为布局元素添加边缘弹性摆动效果</li>
<li>个性化回到顶部按钮</li>
<li>添加不同类型的鼠标点击特效</li>
<li>评论区输入打字礼花特效</li>
</ul>
<p>读者可以根据需要选择其中喜欢的方案应用到站点博客中。</p>
<a id="more"></a>

<h1 id="修改博客字体"><a href="#修改博客字体" class="headerlink" title="修改博客字体"></a>修改博客字体</h1><p>在 <a href="https://www.google.com/fonts" target="_blank" rel="noopener">Google Fonts</a> 上找到心仪的字体，然后在主题配置文件中为不同的应用场景配置字体：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 外链字体库地址，例如 //fonts.googleapis.com (默认值)</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 全局字体，应用在 body 元素上</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Monda</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 标题字体 (h1, h2, h3, h4, h5, h6)</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Roboto</span> <span class="string">Slab</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 文章字体</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Logo 字体</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 代码字体，应用于 code 以及代码块</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br></pre></td></tr></table></figure>

<h1 id="文章页末美化"><a href="#文章页末美化" class="headerlink" title="文章页末美化"></a>文章页末美化</h1><h2 id="为标签添加图标"><a href="#为标签添加图标" class="headerlink" title="为标签添加图标"></a>为标签添加图标</h2><p>默认情况下标签前缀是 <code>#</code> 字符，用户可以通过修改主题源码将标签的字符前缀改为图标前缀，更改后效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/20181113045027074.png" alt="标签图标前缀" title="标签图标前缀"></p>
<p>在文章布局模板中找到文末标签相关代码段，将 <code>#</code> 换成 <code>&lt;i class=&quot;fa fa-tags&quot;&gt;&lt;/i&gt;</code> 即可：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_macro\post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">  &lt;footer class="post-footer"&gt;</span><br><span class="line">    &#123;% if post.tags and post.tags.length and not is_index %&#125;</span><br><span class="line">      &lt;div class="post-tags"&gt;</span><br><span class="line">        &#123;% for tag in post.tags %&#125;</span><br><span class="line"><span class="deletion">-          &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;# &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span></span><br><span class="line"><span class="addition">+          &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tags"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    ...</span><br><span class="line">  &lt;/footer&gt;</span><br></pre></td></tr></table></figure>

<p>Next中使用 <a href="https://fontawesome.com/v4.7.0/icons/" target="_blank" rel="noopener">FontAwesome</a> 作为图标库，用户可以在 FontAwesome 上找到心仪的图标来替换标签的字符前缀。</p>
<h2 id="添加结束标记"><a href="#添加结束标记" class="headerlink" title="添加结束标记"></a>添加结束标记</h2><div class="note info">
            <p>本章节参考 <a href="https://asdfv1929.github.io/2018/01/28/add-the-end/" target="_blank" rel="noopener">asdfv1929 | Hexo NexT主题内给每篇文章后添加结束标语</a></p>
          </div>

<p>在文末添加结束标记，效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/20181113045252399.png" alt="文末结束标记" title="文末结束标记"></p>
<p>新建布局模板文件 post-end-tag.swig，添加如下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_macro\post-end-tag.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color:#bfbfbf;font-size:16px;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>-------- 本文结束 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-&#123;&#123; config.post_end_tag.icon &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span> 感谢阅读 --------<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在文章布局模板中添加如下代码：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_macro\post</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;#####################&#125;</span><br><span class="line">&#123;### END POST BODY ###&#125;</span><br><span class="line">&#123;#####################&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+ &#123;% if config.post_end_tag.enabled and not is_index %&#125;</span></span><br><span class="line"><span class="addition">+   &lt;div&gt;</span></span><br><span class="line"><span class="addition">+     &#123;% include 'post-end-tag.swig' %&#125;</span></span><br><span class="line"><span class="addition">+   &lt;/div&gt;</span></span><br><span class="line"><span class="addition">+ &#123;% endif %&#125;</span></span><br><span class="line"></span><br><span class="line">&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &#123;% include 'wechat-subscriber.swig' %&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>在站点配置文件末尾添加如下代码：</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">post_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span>  <span class="comment"># 是否开启文末的本文结束标记</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">paw</span> <span class="comment"># 结束标记之间的图标</span></span><br></pre></td></tr></table></figure>

<p>重启服务器后即可在文末看到结束标记。</p>
<h1 id="页面加载进度条"><a href="#页面加载进度条" class="headerlink" title="页面加载进度条"></a>页面加载进度条</h1><p>当网络不好的时候可能会在打开站点或跳转文章时出现短暂的白屏，此时如果能有加载进度提示将会提高用户操作体验。</p>
<p>在根目录下执行以下命令安装相关依赖：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">$ git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/theme</span>-<span class="keyword">next</span>/theme-<span class="keyword">next</span>-pace themes/<span class="keyword">next</span>/source/<span class="class"><span class="keyword">lib</span>/<span class="title">fancybox</span></span></span><br></pre></td></tr></table></figure>

<p>在主题配置文件中设置 <code>pace: true</code>。</p>
<p>默认提供了多种主题的进度条加载样式，有顶部提示的，有中间提示的，还有全页面遮挡提示的，个人认为默认的进度条效果就恰如其当，既能够在页面空白的时候起到加载作用，也不会因为太过花里胡哨而喧宾夺主，尤其是当你如果使用了不蒜子的站点访问统计的功能的时候，常常会遇到所有资源都加载完毕而不蒜子还在等待响应，如果这个时候在页面较显眼的位置出现一个停滞不前的进度条，很让人抓狂。</p>
<h1 id="侧边栏放左边"><a href="#侧边栏放左边" class="headerlink" title="侧边栏放左边"></a>侧边栏放左边</h1><p>受 <a href="https://www.ofind.cn/" target="_blank" rel="noopener">猪猪侠的博客</a> 所启发，萌生了想把主题侧边栏放在左侧的想法。</p>
<p>Next主题各系列中只有Pisces和Gemini支持通过主题配置文件来将侧边栏置于左侧或右侧，而Muse和Mist则需要深度修改源码才能实现改变侧边栏位置。</p>
<p>在自定义样式文件中添加如下规则：</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.sidebar-toggle</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改动效脚本代码：</p>
<figure class="highlight diff"><figcaption><span>themes\next\source\js\src\motion.js</span></figcaption><table><tr><td class="code"><pre><span class="line">$(document)</span><br><span class="line">  .on('sidebar.isShowing', function() &#123;</span><br><span class="line">    NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(</span><br><span class="line"><span class="deletion">-     &#123;paddingRight: SIDEBAR_WIDTH&#125;,</span></span><br><span class="line"><span class="addition">+     &#123;paddingLeft: SIDEBAR_WIDTH&#125;,</span></span><br><span class="line">      SIDEBAR_DISPLAY_DURATION</span><br><span class="line">    );</span><br><span class="line">  &#125;)</span><br><span class="line">  .on('sidebar.isHiding', function() &#123;</span><br><span class="line">  &#125;);</span><br><span class="line">  ...</span><br><span class="line">  hideSidebar: function() &#123;</span><br><span class="line"><span class="deletion">-   NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(&#123;paddingRight: 0&#125;);</span></span><br><span class="line"><span class="addition">+   NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(&#123;paddingLeft: 0&#125;);</span></span><br><span class="line">    this.sidebarEl.find('.motion-element').velocity('stop').css('display', 'none');</span><br><span class="line">    this.sidebarEl.velocity('stop').velocity(&#123;width: 0&#125;, &#123;display: 'none'&#125;);</span><br><span class="line"></span><br><span class="line">    sidebarToggleLines.init();</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如此以来就可以将侧边栏放置在左边了，但当窗口宽度缩小到991px之后会出现样式错误：侧边栏收缩消失但是页面左侧仍留有空白间距，此时修改如下代码即可：</p>
<figure class="highlight diff"><figcaption><span>themes\next\source\css\_common\scaffolding\base.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  position: relative; // Required by scrollspy</span><br><span class="line">  font-family: $font-family-base;</span><br><span class="line">  font-size: $font-size-base;</span><br><span class="line">  line-height: $line-height-base;</span><br><span class="line">  color: $text-color;</span><br><span class="line">  background: $body-bg-color;</span><br><span class="line"></span><br><span class="line"><span class="deletion">- +mobile() &#123; padding-left: 0 !important; &#125;</span></span><br><span class="line"><span class="deletion">- +tablet() &#123; padding-left: 0 !important; &#125;  </span></span><br><span class="line"><span class="addition">+ +mobile() &#123; padding-right: 0 !important; &#125;</span></span><br><span class="line"><span class="addition">+ +tablet() &#123; padding-right: 0 !important; &#125;</span></span><br><span class="line">  +desktop-large() &#123; font-size: $font-size-large; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h1><p>Next主题可以通过安装插件快速为站点添加不同效果的动态背景。</p>
<h2 id="粒子漂浮聚合"><a href="#粒子漂浮聚合" class="headerlink" title="粒子漂浮聚合"></a>粒子漂浮聚合</h2><p>应用效果如下图：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/20181115092103046.png" alt="canvas-nest 动态背景" title="canvas-nest 动态背景"></p>
<p>该功能由 <a href="https://github.com/theme-next/theme-next-canvas-nest" target="_blank" rel="noopener">theme-next-canvas-nest</a> 插件提供，在根目录下执行如下命令：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">$ git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/theme</span>-<span class="keyword">next</span>/theme-<span class="keyword">next</span>-canvas-nest themes/<span class="keyword">next</span>/source/<span class="class"><span class="keyword">lib</span>/<span class="title">canvas</span>-<span class="title">nest</span></span></span><br></pre></td></tr></table></figure>

<p>然后在主题配置文件中设置 <code>canvas_nest: true</code> 即可。</p>
<p>Next v6.5.0 及以上版本支持更多的自定义选项：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">true</span> <span class="comment"># 是否在移动端显示</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">'0,0,255'</span> <span class="comment"># 动态背景中线条的 RGB 颜色</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.5</span> <span class="comment"># 动态背景中线条透明度</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># 动态背景的 z-index 属性值</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">99</span> <span class="comment"># 动态背景中线条数量</span></span><br></pre></td></tr></table></figure>

<h2 id="Three-三维动效"><a href="#Three-三维动效" class="headerlink" title="Three 三维动效"></a>Three 三维动效</h2><p><a href="https://github.com/theme-next/theme-next-three" target="_blank" rel="noopener">theme-next-three</a> 插件提供了三个类型的背景动效，应用效果如下：</p>
<div class="tabs" id="three-三维动效"><ul class="nav-tabs"><li class="tab active"><a href="#three-三维动效-1">three-waves</a></li><li class="tab"><a href="#three-三维动效-2">canvas-lines</a></li><li class="tab"><a href="#three-三维动效-3">canvas-sphere</a></li></ul><div class="tab-content"><div class="tab-pane active" id="three-三维动效-1"><p>  <img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/20181115091950761.png" alt></p></div><div class="tab-pane" id="three-三维动效-2"><p>  <img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/20181115091914602.png" alt></p></div><div class="tab-pane" id="three-三维动效-3"><p>  <img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/20181115091826700.png" alt></p></div></div></div>

<p>在根目录下执行如下命令安装相关依赖：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">$ git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/theme</span>-<span class="keyword">next</span>/theme-<span class="keyword">next</span>-three themes/<span class="keyword">next</span>/source/<span class="class"><span class="keyword">lib</span>/<span class="title">three</span></span></span><br></pre></td></tr></table></figure>

<p>然后在主题配置文件中设置开启对应的动效选项即可。</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># JavaScript 3D library.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-three</span></span><br><span class="line"><span class="comment"># three_waves</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># canvas_lines</span></span><br><span class="line"><span class="attr">canvas_lines:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># canvas_sphere</span></span><br><span class="line"><span class="attr">canvas_sphere:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>个人认为在站点中添加动态背景并没有实际的意义，只会凭空增加页面内存占用及CPU消耗，所以本站没有添加任何动态背景。</p>
          </div>

<h2 id="随机三角丝带"><a href="#随机三角丝带" class="headerlink" title="随机三角丝带"></a>随机三角丝带</h2><p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/evan-you.png" alt="随机三角丝带" title="随机三角丝带"></p>
<div class="note info">
            <p>该功能由 Vue 作者 <a href="http://evanyou.me/" target="_blank" rel="noopener">尤雨溪</a> 首创。本章节中核心代码来源于 <a href="https://diygod.me/" target="_blank" rel="noopener">DIYgod</a> 编写的 <a href="https://github.com/DIYgod/hexo-theme-sagiri" target="_blank" rel="noopener">sagiri</a> 主题。</p>
          </div>

<p>点击下方按钮下载相应的脚本，并置于 themes\next\source\js\ 目录下：</p>
<p>
<a class="btn" href="https://script-1256884783.file.myqcloud.com/evan-you.js" target="_blank" rel="noopener"><i class="fa fa-download fa-fw"></i>随机三角丝带</a>
</p>

<p>在主题自定义布局文件中添加以下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_custom\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# 随机三角丝带背景 #&#125;</span><br><span class="line">&#123;% if theme.evanyou %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"evanyou"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#evanyou</span> &#123;</span></span><br><span class="line">      position: fixed;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 100%;</span><br><span class="line">      top: 0;</span><br><span class="line">      left: 0;</span><br><span class="line">      z-index: -1;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/evan-you.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>在主题配置文件中添加以下代码：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># colorful trilateral riband background</span></span><br><span class="line"><span class="attr">evanyou:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>如果从本地加载JS脚本速度较慢，可以考虑将脚本放到CDN上再引入。</p>
<h1 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h1><div class="note info">
            <p>本章节部分内容参考 <a href="https://fjkang.github.io/2017/12/08/%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%90%8C%E7%89%A9/" target="_blank" rel="noopener">FJKang | 添加一个萌物</a></p>
          </div>

<p>该功能由 <a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">hexo-helper-live2d</a> 插件支持，效果如下图：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/live2d.gif" alt="live2d 看板娘" title="live2d 看板娘"></p>
<p>在站点根目录下执行以下命令安装依赖：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> <span class="comment">--save hexo-helper-live2d</span></span><br></pre></td></tr></table></figure>

<p>在站点配置文件中添加以下下配置项</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment"># https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="string">Relative)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 脚本加载源</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认从本地加载脚本</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # 从 jsdelivr CDN 加载脚本</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # 从 unpkg CDN 加载脚本</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 从自定义地址加载脚本</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 只在有 &#123;&#123; live2d() &#125;&#125; 标签的页面上加载 / 在所有页面上加载</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span> <span class="comment"># 是否在控制台打印日志</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 选择看板娘模型</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-shizuku</span>  <span class="comment"># npm package的名字</span></span><br><span class="line">    <span class="comment"># use: wanko # /live2d_models/ 目录下的模型文件夹名称</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 站点根目录下的模型文件夹名称</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 自定义网络数据源</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span> <span class="comment"># 显示在左边还是右边</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span> <span class="comment"># 宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">180</span> <span class="comment"># 高度</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span> <span class="comment"># 默认透明度</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>更多配置参数请查看 <a href="https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init" target="_blank" rel="noopener">L2Dwidget | live2d-widget.js</a></p>
          </div>

<p>此时重启服务器暂时还看不到看板娘，需要手动下载或安装模型资源。可以从 <a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">hexo live2d 模型预览</a> 里找到你喜欢的角色，然后根据 <a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">live2d-widget-models</a> 中提供的方法来下载模型数据.</p>
<p>例如通过以下命令下载模型 shizuku：</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$</span> npm install live2d-widget-<span class="keyword">model</span>-shizuku</span><br></pre></td></tr></table></figure>

<p>因为修改了站点配置文件，所以需要重启服务器才能预览模型效果。</p>
<p>如果设置了 <code>live2d.tagMode: true</code>，则可以在指定页面中插入以下标签：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;&#123;</span> <span class="string">live2d()</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure>

<p>只有拥有该标签的页面才会渲染live2d模型，这样以来就可以精确控制在哪些页面上显示看板娘了。</p>
<p>如果只想在一级菜单页面上显示看板娘，可以在Header模板中添加以下代码：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_partials\header\index.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="addition">+ &#123;% if is_index %&#125;</span></span><br><span class="line"><span class="addition">+   &#123;&#123; live2d() &#125;&#125;</span></span><br><span class="line"><span class="addition">+ &#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>个人认为在文章内出现看板娘将会影响读者注意力的集中，毕竟一篇博客里最重要的是内容，而不是这些花里胡哨转移注意力的东西。所以本站只在一级菜单页面添加了看板娘，文章页面则保持极致精简的阅读体验。</p>
          </div>

<p>经过测试发现 <code>live2d.mobile.show: false</code> 并没有生效，暂时没有找到好的解决方法，参考 <a href="https://github.com/EYHN/hexo-helper-live2d/issues/12" target="_blank" rel="noopener">EYHN/hexo-helper-live2d Issues #12</a> 后发现可以在自定义样式文件中添加以下代码来解决：</p>
<figure class="highlight css"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#live2dcanvas</span> &#123;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  +<span class="selector-tag">tablet</span>() &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>不要乱点不该点的地方，会生气的。</p>
          </div>

<h1 id="边缘摆动效果"><a href="#边缘摆动效果" class="headerlink" title="边缘摆动效果"></a>边缘摆动效果</h1><p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/wobblewindow.gif" alt="wobblewindow 边缘摆动" title="wobblewindow 边缘摆动"></p>
<p>在 <a href="https://www.ofind.cn/" target="_blank" rel="noopener">猪猪侠的博客</a> 里发现的这种特效，觉得挺有意思的，就从他Github上给扒过来了</p>
<p>点击下方按钮下载脚本，并置于 themes\next\source\js\ 目录下：</p>
<p>
<a class="btn" href="https://script-1256884783.file.myqcloud.com/wobblewindow.js" target="_blank" rel="noopener"><i class="fa fa-download fa-fw"></i>wobblewindow.js</a>
</p>

<p>在主题自定义布局文件中添加以下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_script\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# wobble窗口摆动特效 #&#125;</span><br><span class="line">&#123;% if theme.wobble %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/wobblewindow"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//只在桌面版网页启用特效</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>( <span class="built_in">window</span>.innerWidth &gt; <span class="number">768</span>  )&#123;</span></span><br><span class="line"><span class="javascript">      $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        &#123;% if theme.wobble.header %&#125;</span><br><span class="line"><span class="javascript">          $(<span class="string">'#header'</span>).wobbleWindow(&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            radius: </span><span class="template-variable">&#123;&#123; theme.wobble.radius &#125;&#125;</span><span class="xml">,</span></span></span><br><span class="line"><span class="actionscript">            movementTop: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            movementLeft: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            movementRight: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            debug: <span class="literal">false</span>,</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">        &#123;% if theme.wobble.sidebar %&#125;</span><br><span class="line"><span class="javascript">          $(<span class="string">'#sidebar'</span>).wobbleWindow(&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            radius: </span><span class="template-variable">&#123;&#123; theme.wobble.radius &#125;&#125;</span><span class="xml">,</span></span></span><br><span class="line"><span class="actionscript">            movementLeft: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            movementTop: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            movementBottom: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            position: <span class="string">'fixed'</span>,</span></span><br><span class="line"><span class="actionscript">            debug: <span class="literal">false</span>,</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">        &#123;% if theme.wobble.footer %&#125;</span><br><span class="line"><span class="javascript">          $(<span class="string">'#footer'</span>).wobbleWindow(&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            radius: </span><span class="template-variable">&#123;&#123; theme.wobble.radius &#125;&#125;</span><span class="xml">,</span></span></span><br><span class="line"><span class="actionscript">            movementBottom: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            movementLeft: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            movementRight: <span class="literal">false</span>,</span></span><br><span class="line"><span class="handlebars"><span class="xml">            offsetX: </span><span class="template-variable">&#123;&#123; theme.wobble.offset &#125;&#125;</span><span class="xml">,</span></span></span><br><span class="line"><span class="actionscript">            position: <span class="string">'absolute'</span>,</span></span><br><span class="line"><span class="actionscript">            debug: <span class="literal">false</span>,</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>在自定义样式文件中添加以下样式：</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//窗口波动效果相关样式</span><br><span class="line">if hexo-config('wobble')  &#123;</span><br><span class="line">  <span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.wobbleTransparentBK</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0,0,0,0) <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.wobbleTransparentLine</span>&#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="built_in">rgba</span>(0,0,0,0) <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //Next.Muse中为Header和Footer添加背景色</span><br><span class="line">  <span class="selector-id">#header</span>, <span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(245, 245, 245);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //防止sidebar和footer同时开启动效时堆叠异常</span><br><span class="line">  <span class="selector-id">#sidebar</span>, <span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //防止挡住页末文章的阅读全文按钮</span><br><span class="line">  <span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">200px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note warning">
            <p>Next.Muse主题方案中Header和Footer是没有背景色的，所以需要添加背景色后才能看出边缘摆动效果。另外，实现边缘摆动效果所需的 <code>z-index</code> 属性可能会导致元素堆叠异常，需要添加以上样式来矫正。</p>
          </div>

<p>在主题配置文件中添加以下代码：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># window woblle</span></span><br><span class="line"><span class="attr">wobble:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否开启边缘波动效果</span></span><br><span class="line">  <span class="attr">radius:</span> <span class="number">50</span>  <span class="comment"># 波动半径</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span>  <span class="comment"># 开启侧边栏边缘摆动</span></span><br><span class="line">  <span class="attr">header:</span> <span class="literal">true</span>  <span class="comment"># 开启头部边缘摆动</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="literal">true</span>  <span class="comment"># 开启脚部边缘摆动</span></span><br></pre></td></tr></table></figure>

<p>用户可以根据需要在配置文件中为选择开启边缘摆动效果的布局元素。刷新浏览器，然后将鼠标移动到布局边缘上尽情的挑逗它吧。</p>
<p>如果从本地加载JS脚本速度较慢，可以考虑将脚本放到CDN上再引入。</p>
<h1 id="个性化回到顶部"><a href="#个性化回到顶部" class="headerlink" title="个性化回到顶部"></a>个性化回到顶部</h1><p>从 <a href="https://diygod.me/" target="_blank" rel="noopener">DIYgod的博客</a> 里扒来的，效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/back-to-top.gif" alt="回到顶部" title="回到顶部"></p>
<p>原理很简单，将 back-to-top 按钮添加图片背景，并添加CSS3动效即可。</p>
<p>首先，找到自己喜欢的图片素材放到 source\images\ 目录下。</p>
<p>你可以点击下方按钮下载本站所使用的小猫上吊素材（<br>小猫咪这么可爱，当然要多放点孜然啦…）</p>
<a class="btn" href="/images/scroll.png" download>
  <i class="fa fa-download fa-fw"></i>
  下载图片
</a>

<p>然后在自定义样式文件中添加如下代码：</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//自定义回到顶部样式</span><br><span class="line"><span class="selector-class">.back-to-top</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">60px</span>;</span><br><span class="line">  width: 70px;  //图片素材宽度</span><br><span class="line">  height: 900px;  //图片素材高度</span><br><span class="line">  <span class="selector-tag">top</span>: <span class="selector-tag">-900px</span>;</span><br><span class="line">  <span class="selector-tag">bottom</span>: <span class="selector-tag">unset</span>;</span><br><span class="line">  <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span> <span class="selector-tag">ease-in-out</span>;</span><br><span class="line">  background: url("/images/scroll.png");</span><br><span class="line"></span><br><span class="line">  //隐藏箭头图标</span><br><span class="line">  &gt; <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.back-to-top-on</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: unset;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100vh</span> &lt; (<span class="number">900px</span> + <span class="number">200px</span>) ? <span class="built_in">calc</span>( 100vh - 900px - 200px ) : <span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>刷新浏览器即可预览效果。</p>
<h1 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h1><p>从各个站点里搜罗了以下四个比较常用的鼠标点击特效：</p>
<div class="tabs" id="鼠标点击特效"><ul class="nav-tabs"><li class="tab active"><a href="#鼠标点击特效-1">礼花特效</a></li><li class="tab"><a href="#鼠标点击特效-2">爆炸特效</a></li><li class="tab"><a href="#鼠标点击特效-3">浮出爱心</a></li><li class="tab"><a href="#鼠标点击特效-4">浮出文字</a></li></ul><div class="tab-content"><div class="tab-pane active" id="鼠标点击特效-1"><p>  <img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/cursor-fireworks.gif" alt></p></div><div class="tab-pane" id="鼠标点击特效-2"><p>  <img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/cursor-explosion.gif" alt></p></div><div class="tab-pane" id="鼠标点击特效-3"><p>  <img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/cursor-love.gif" alt></p></div><div class="tab-pane" id="鼠标点击特效-4"><p>  <img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/cursor-text.gif" alt></p></div></div></div>

<p>点击下方按钮下载相应的脚本，并置于 themes\next\source\js\cursor\ 目录下：</p>
<p>
<a class="btn" href="https://script-1256884783.file.myqcloud.com/cursor/fireworks.js" target="_blank" rel="noopener"><i class="fa fa-download fa-fw"></i>礼花特效</a>
<a class="btn" href="https://script-1256884783.file.myqcloud.com/cursor/explosion.min.js" target="_blank" rel="noopener"><i class="fa fa-download fa-fw"></i>爆炸特效</a>
<a class="btn" href="https://script-1256884783.file.myqcloud.com/cursor/love.min.js" target="_blank" rel="noopener"><i class="fa fa-download fa-fw"></i>浮出爱心</a>
<a class="btn" href="https://script-1256884783.file.myqcloud.com/cursor/text.js" target="_blank" rel="noopener"><i class="fa fa-download fa-fw"></i>浮出文字</a>
</p>

<p>在主题自定义布局文件中添加以下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_custom\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# 鼠标点击特效 #&#125;</span><br><span class="line">&#123;% if theme.cursor_effect == "fireworks" %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"js/cursor/fireworks.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% elseif theme.cursor_effect == "explosion" %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"js/cursor/explosion.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% elseif theme.cursor_effect == "love" %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"js/cursor/love.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% elseif theme.cursor_effect == "text" %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"js/cursor/text.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>在主题配置文件中添加以下代码：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># mouse click effect: fireworks | explosion | love | text</span></span><br><span class="line"><span class="attr">cursor_effect:</span> <span class="string">fireworks</span></span><br></pre></td></tr></table></figure>

<p>这样即可在配置文件中一键快速切换鼠标点击特效。</p>
<p>如果从本地加载JS脚本速度较慢，可以考虑将脚本放到CDN上再引入。</p>
<h1 id="打字特效"><a href="#打字特效" class="headerlink" title="打字特效"></a>打字特效</h1><div class="note info">
            <p>本章节参考 <a href="https://qianling.pw/hexo-optimization/" target="_blank" rel="noopener">千灵夙赋 | Hexo 优化汇总 #31</a>，原文出自 <a href="https://www.ilxtx.com/comment-input-effects.html" target="_blank" rel="noopener">龙笑天下 | 给 WordPress 博客网站添加评论输入打字礼花及震动特效</a></p>
          </div>

<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/typing-effect.gif" alt="打字特效" title="打字特效"></p>
<p>点击下方按钮下载相应的脚本，并置于 themes\next\source\js\ 目录下：</p>
<p>
<a class="btn" href="https://script-1256884783.file.myqcloud.com/activate-power-mode.min.js" target="_blank" rel="noopener"><i class="fa fa-download fa-fw"></i>打字特效</a>
</p>

<p>在主题自定义布局文件中添加以下代码：</p>
<figure class="highlight html"><figcaption><span>themes\next\layout\_custom\custom.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# 打字特效 #&#125;</span><br><span class="line">&#123;% if theme.typing_effect %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/activate-power-mode.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    POWERMODE.colorful = </span><span class="template-variable">&#123;&#123; theme.typing_effect.colorful &#125;&#125;</span><span class="xml">;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    POWERMODE.shake = </span><span class="template-variable">&#123;&#123; theme.typing_effect.shake &#125;&#125;</span><span class="xml">;</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.body.addEventListener(<span class="string">'input'</span>, POWERMODE);</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;% include '_third-party/exturl.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/bookmark.swig' %&#125;</span><br><span class="line">      &#123;% include '_third-party/copy-code.swig' %&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+     &#123;% include '_custom/custom.swig' %&#125;</span></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>在主题配置文件中添加以下代码：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># typing effect</span></span><br><span class="line"><span class="attr">typing_effect:</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span>  <span class="comment"># 礼花特效</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">false</span>  <span class="comment"># 震动特效</span></span><br></pre></td></tr></table></figure>

<p>如果从本地加载JS脚本速度较慢，可以考虑将脚本放到CDN上再引入。</p>
<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>本文记录了本站在Next的基础上的进阶美化方案，除了一些简单的样式修改外，还添加了一些由插件支持的高级动效，包括动态背景、看板娘、边缘摆动、鼠标点击和打字特效等。笔者认为，动效可以使得站点变有趣，但同时也会增加网页的资源消耗，以及影响用户的关注点，有时候会喧宾夺主适得其反，建议珍爱PC资源，合理使用动效。</p>
<p>本文内容仅涉及到主题美化，也就是说仅使得网页看起来更好看或者更炫酷，但并没有使其功能上变得更强大。如果你希望为站点集成更高级的功能，可以关注本系列的后续文章：</p>
<ul>
<li>想要深度定制个性化站点，请参考本系列中的 。</li>
<li>想要了解如何将站点部署到公网，请参考本系列中的 </li>
</ul>
<div class="reference-linking">参考链接</div>

<ul>
<li><a href="https://asdfv1929.github.io/2018/01/28/add-the-end/" target="_blank" rel="noopener">asdfv1929 | Hexo NexT主题内给每篇文章后添加结束标语</a></li>
<li><a href="https://fjkang.github.io/2017/12/08/%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%90%8C%E7%89%A9/" target="_blank" rel="noopener">FJKang | 添加一个萌物</a></li>
<li><a href="http://evanyou.me/" target="_blank" rel="noopener">尤雨溪的个人主页</a></li>
<li><a href="https://diygod.me/" target="_blank" rel="noopener">DIYgod的博客</a></li>
<li><a href="https://www.ofind.cn/" target="_blank" rel="noopener">猪猪侠的博客</a></li>
<li><a href="https://qianling.pw/hexo-optimization/" target="_blank" rel="noopener">千灵夙赋 | Hexo 优化汇总</a></li>
<li><a href="https://www.ilxtx.com/comment-input-effects.html" target="_blank" rel="noopener">龙笑天下 | 给 WordPress 博客网站添加评论输入打字礼花及震动特效</a></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建个人博客系列：写作技巧篇</title>
    <url>/hexo-whirting-skills/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文介绍 Hexo 博客的写作技巧。</p>
<p>第一章中介绍了 Hexo 中写作相关的基本概念，包括三种基本布局，标签与分类，Markdown 写作语法。</p>
<p>第二章中介绍了 Hexo 中常用的内置标签，包括 note 标签、 label 标签、 button 标签、 tab 标签以及代码块的高级用法，通过使用写作标签可以快速编写样式丰富的文档片段。</p>
<p>第三章中介绍了在文档中插入图片、音乐、视频等多媒体元素的方案。</p>
<p>第四章中根据个人使用经验为大家推荐了几款优雅实用的 Markdown 写作工具。</p>
<a id="more"></a>

<h1 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h1><p>在博客目录下执行如下命令新建一篇文章</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> [layout] &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure>

<p>如果未指定文章的布局（layout），则默认使用 <code>post</code> 布局，生成的文档存放于 <code>source\_posts\</code> 目录下，打开后使用Markdown语法进行写作，保存后刷新浏览器即可看到文章。</p>
<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>布局是什么概念呢，你可以理解为新建文档时的一个模板，基于布局生成的文档将会继承布局的样式。</p>
<p>Hexo默认有三种布局：<code>post</code>、 <code>page</code> 和 <code>draft</code>，用户可以在 <code>scaffolds</code> 目录下新建文档来自定义布局格式，还可以修改站点配置文件中的 <code>default_layout</code>参数来指定生成文档时的默认布局。</p>
<h3 id="文章（post）"><a href="#文章（post）" class="headerlink" title="文章（post）"></a>文章（post）</h3><p>基于 <code>post</code> 布局生成的文档存在于 <code>source\_posts\</code> 目录下，该目录下的文档会作为博客正文显示在网站中。</p>
<h3 id="页面（page）"><a href="#页面（page）" class="headerlink" title="页面（page）"></a>页面（page）</h3><p><code>page</code> 布局用于生成类似 <strong>首页</strong> 和 <strong>归档</strong> 这样的页面。默认的Next主题样式中只包含首页和归档这两个链接，可以通过修改主题配置文件中的 <code>menu</code> 字段来新增更多页面菜单。</p>
<figure class="highlight diff"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line"><span class="addition">+ tags: /tags/ || tags</span></span><br><span class="line"><span class="addition">+ categories: /categories/ || th</span></span><br><span class="line"><span class="addition">+ archives: /archives/ || archive</span></span><br></pre></td></tr></table></figure>

<p>其中，<code>||</code> 之前的值表示菜单链接，之后的值表示所用的 <code>FontAwesome</code> 图标名称。</p>
<p>刷新页面后即可看到页面内多了几项菜单。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181103115805642.png" alt="新增菜单入口" title="新增菜单入口"></p>
<p>此时点击 <strong>关于</strong>、<strong>标签</strong> 和 <strong>分类</strong> 都会跳转到404页面，原因是我们只开放了页面入口，却没有创造对应于链接的页面视图，此时就需要通过 <code>hexo new page &lt;title&gt;</code> 命令来新建页面。</p>
<p>基于 <code>page</code> 布局的新建命令将会在 <code>source</code> 目录下新建一个 <code>&lt;title&gt;</code> 文件夹，并在该文件夹下创建一个 <code>index.md</code> 文件，编辑该文件即可修改页面内容。</p>
<p>例如，通过 <code>hexo new page tags</code> 命令将会生成如下目录。</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">└──  <span class="keyword">source</span>             </span><br><span class="line">  ├── _posts          </span><br><span class="line">  └── <span class="keyword">tags</span></span><br><span class="line">    └── <span class="built_in">index</span>.md</span><br></pre></td></tr></table></figure>

<p>编辑 <code>index.md</code> 文件，在Front-Matter中添加 <code>type: tags</code> ，Next主题将自动在该页面内显示标签云。</p>
<figure class="highlight diff"><figcaption><span>source\tags\index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">  title: 标签</span><br><span class="line">  date: 2018-10-19 22:57:00</span><br><span class="line"><span class="addition">+ type: tags</span></span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>Front-Matter是文件最上方以 <code>---</code> 分隔的区域，用于指定本文件的各种参数值</p>
          </div>

<p>在菜单中点击 <strong>标签</strong> 跳转到刚创建的标签页面。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181104120213426.png" alt="Hexo 标签页面" title="Hexo 标签页面"></p>
<p>同理可通过 <code>page</code> 布局生成 <strong>关于</strong> 和 <strong>分类</strong> 两个页面。</p>
<h3 id="草稿（draft）"><a href="#草稿（draft）" class="headerlink" title="草稿（draft）"></a>草稿（draft）</h3><p><code>draft</code> 布局用于创建草稿，生成的文档存在于 source\_drafts\ 目录中，默认配置下将不会把该目录下的文档渲染到网站中。</p>
<p>通过以下命令将草稿发布为正式文章：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">$ hexo publish <span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>该命令会将 source\_drafts\ 目录下以 <title> 开头的草稿发布到 sources\_posts\ 目录下。另外，<code>hexo publish *</code> 会将最新创建的一篇草稿发布为正式文章，并以Front-Matter中的title作为文件名称。</title></p>
<p>考虑到一些文章可能需要数天才能完成，建议将新建文档时的默认布局设置为 <code>draft</code>：</p>
<figure class="highlight diff"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="deletion">- default_layout: post</span></span><br><span class="line"><span class="addition">+ default_layout: draft</span></span><br></pre></td></tr></table></figure>

<h2 id="标签与分类"><a href="#标签与分类" class="headerlink" title="标签与分类"></a>标签与分类</h2><p>我们刚提到了标签，也提到了分类，那么标签和分类是什么，其区别是什么。</p>
<p>标签和分类都是用于对文章进行归档的一种方式，标签是一种列表结构，而分类是一种树结构。我们以人作为例子，从标签的角度考虑，我可以拥有程序员、高颜值、幽默等标签，这些标签之间没有层级关系；从分类的角度考虑，我是亚洲人、中国人、河南人，这些分类之间是有明确的包含关系的。</p>
<p>可以在Front-Matter中添加 <code>catergories</code> 和 <code>tags</code> 字段为文章添加标签和分类，如我为本文添加了 <strong>Hexo</strong> 和 <strong>Markdown</strong> 两个标签，并将其归类到了 <strong>技术/博客</strong> 类别，对应的Front-Matter结构如下：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">title: Hexo搭建个人博客系列：写作技巧篇</span><br><span class="line"><span class="keyword">tags:</span> Hexo Markdown</span><br><span class="line">categories:</span><br><span class="line">- 技术</span><br><span class="line">- 博客</span><br></pre></td></tr></table></figure>

<h2 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h2><p>Markdown是一种标记语言，语法简单，易阅读易编写，可以让用户完全脱离鼠标写出样式丰富的文档，广受程序员喜爱，目前许多网站都已经支持通过Markdown语法来写文章或者发表评论。</p>
<table>
<thead>
<tr>
<th>元素</th>
<th>Markdown语法</th>
<th>效果预览</th>
</tr>
</thead>
<tbody><tr>
<td>标题</td>
<td><code># 标题1</code><br><code>## h2</code><br><code>### h3</code></td>
<td><div style="font-weight: bold"><div style="font-size: 24px">标题一</div><div style="font-size: 22px">标题二</div><div style="font-size: 20px">标题三</div></div></td>
</tr>
<tr>
<td>加粗</td>
<td><code>**文字加粗**</code></td>
<td><strong>文字加粗</strong></td>
</tr>
<tr>
<td>引用</td>
<td><code>&gt; 引用文字</code></td>
<td><blockquote>引用文字</blockquote></td>
</tr>
<tr>
<td>有序列表</td>
<td><code>1. 第一项</code><br><code>2. 第二项</code><br><code>3. 第三项</code></td>
<td><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></td>
</tr>
<tr>
<td>无序列表</td>
<td><code>- 第一项</code><br><code>- 第二项</code><br><code>- 第三项</code></td>
<td><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></td>
</tr>
<tr>
<td>链接</td>
<td><code>[链接](url)</code></td>
<td><a href="url">链接</a></td>
</tr>
<tr>
<td>图片</td>
<td><code>![图片](image.jpg)</code></td>
<td><i class="fa fa-image"></i></td>
</tr>
<tr>
<td>水平线</td>
<td><code>---</code></td>
<td><hr></td>
</tr>
<tr>
<td>代码</td>
<td><code>`code`</code></td>
<td><code>code</code></td>
</tr>
<tr>
<td>代码块</td>
<td><code>```code snippet```</code></td>
<td><figure class="highlight"><table><tbody><tr><td class="code"><pre>code snippet</pre></td></tr></tbody></table></figure></td>
</tr>
</tbody></table>
<div class="note info">
            <p>更多语法请参考 <a href="https://www.markdownguide.org/basic-syntax" target="_blank" rel="noopener">基础语法 | Markdown Guide</a> 和 <a href="https://www.markdownguide.org/extended-syntax" target="_blank" rel="noopener">扩展语法 | Markdown Guide</a></p>
          </div>

<h1 id="Hexo内置标签"><a href="#Hexo内置标签" class="headerlink" title="Hexo内置标签"></a>Hexo内置标签</h1><div class="note info">
            <p>本章节参考 <a href="https://almostover.ru/2016-01/hexo-theme-next-test/" target="_blank" rel="noopener">Ivan.nginx | Hexo Theme Next主题样式测试</a> 及 <a href="https://theme-next.iissnan.com/tag-plugins.html" target="_blank" rel="noopener">内置标签 - NexT 使用文档</a></p>
          </div>

<h2 id="文本居中标签"><a href="#文本居中标签" class="headerlink" title="文本居中标签"></a>文本居中标签</h2><p>居中标签效果如下：</p>
<blockquote class="blockquote-center"><p>我不去想是否能够成功，既然选择了远方，便只顾风雨兼程。</p>
</blockquote>

<p>一般在引用单行文本时使用，如作为文章开篇题词。</p>
<p>可以通过以下几种方式使用该标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其中 class="blockquote-center" 是必须的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-center"</span>&gt;</span>blah blah blah<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签方式 --&gt;</span></span><br><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签别名 --&gt;</span></span><br><span class="line">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="代码块进阶用法"><a href="#代码块进阶用法" class="headerlink" title="代码块进阶用法"></a>代码块进阶用法</h2><p>可以通过为代码块附加参数的形式为其添加更丰富的信息提示，效果如下：</p>
<figure class="highlight js"><figcaption><span>Hellow World</span><a href="http://yearito.cn" target="_blank" rel="noopener">链接地址</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"Hello world!"</span>);</span><br></pre></td></tr></table></figure>

<p>代码块进阶语法规则：</p>
<div style="background-color: #f7f7f7; margin: 20px 0; padding: 10px;border-radius: 5px; font-family: consolas;">
  &#x60;&#x60;&#x60; [language] [title] [url] [link text]<br>
  code snippet <br>
  &#x60;&#x60;&#x60;
</div>

<p>其中，各参数意义如下：</p>
<ul>
<li>langugae：语言名称，引导渲染引擎正确解析并高亮显示关键字</li>
<li>title：代码块标题，将会显示在左上角</li>
<li>url：链接地址，如果没有指定link text则会在右上角显示link</li>
<li>link text：链接名称，指定url后有效，将会显示在右上角</li>
</ul>
<p>url 必须为有效链接地址才会以链接的形式显示在右上角，否则将作为标题显示在左上角。以url为分界，左侧除了第一个单词会被解析为language，其他所有单词都会被解析为title，而右侧的所有单词都会被解析为link text。</p>
<p>如果不想填写title，可以在language和url之间添加至少三个空格。</p>
<div class="note info">
            <p>代码块支持多种语言高亮预设，详细的语言列表可查看<a href="https://almostover.ru/2016-07/hexo-highlight-code-styles/" target="_blank" rel="noopener">Ivan.nginx | Hexo代码块中的颜色方案</a>。</p>
          </div>

<p>可以在站点配置文件中设置 <code>highlight.auto_detect: true</code> 来开启自动语言检测高亮。</p>
<figure class="highlight diff"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"> highlight:</span><br><span class="line">   enable: true</span><br><span class="line">   line_number: false</span><br><span class="line"><span class="deletion">-  auto_detect: false</span></span><br><span class="line"><span class="addition">+  auto_detect: true</span></span><br><span class="line">   tab_replace:</span><br></pre></td></tr></table></figure>

<p>如果设置语言为diff，可以在代码前添加 <code>+</code> 和 <code>-</code> 来使用如上所示的高亮增删行提示效果，在展示代码改动痕迹时比较实用。</p>
<div class="note info">
            <p>更多代码块高亮的个性化设置请参见 <a href="https://www.ofind.cn/blog/HEXO/HEXO%E4%B8%8B%E7%9A%84%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E6%8B%93%E5%B1%95%E4%BF%AE%E6%94%B9.html#%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%A0%81%E6%B7%BB%E5%8A%A0%E5%88%A0%E9%99%A4%E6%A0%87%E8%AE%B0" target="_blank" rel="noopener">猪猪侠 | Hexo下的语法高亮拓展修改</a></p>
          </div>

<h2 id="note标签"><a href="#note标签" class="headerlink" title="note标签"></a>note标签</h2><p>通过note标签可以为段落添加背景色，语法如下：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&#123;%<span class="built_in"> note </span>[class] %&#125;</span><br><span class="line">文本内容 (支持行内标签)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<p>支持的class种类包括 <code>default</code> <code>primary</code> <code>success</code> <code>info</code> <code>warning</code> <code>danger</code>，也可以不指定class。</p>
<p>各种class种类的效果如下：</p>
<div class="note primary">
            <p><strong>primary</strong> note tag</p>
          </div>

<div class="note success">
            <p><strong>success</strong> note tag</p>
          </div>

<div class="note info">
            <p><strong>info</strong> note tag</p>
          </div>

<div class="note warning">
            <p><strong>warning</strong> note tag</p>
          </div>

<div class="note danger">
            <p><strong>danger</strong> note tag</p>
          </div>

<div class="note ">
            <p>undefined class note tag</p>
          </div>

<p>更多配置可在主题配置文件中设置</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note 标签样式预设</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">modern</span>  <span class="comment"># simple | modern | flat | disabled</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span>  <span class="comment"># 是否显示图标</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span>  <span class="comment"># 圆角半径</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span>  <span class="comment"># 默认背景减淡效果，以百分比计算</span></span><br></pre></td></tr></table></figure>

<h2 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h2><p>通过label标签可以为文字添加背景色，语法如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">&#123;% label [<span class="class"><span class="keyword">class</span>]<span class="meta">@text</span>  %&#125;</span></span><br></pre></td></tr></table></figure>

<p>支持的class种类包括 <code>default</code> <code>primary</code> <code>success</code> <code>info</code> <code>warning</code> <code>danger</code>，默认使用 <code>default</code> 作为缺省。</p>
<p>使用示例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I heard the echo, &#123;% label default@from the valleys and the heart %&#125;</span><br><span class="line">Open to the lonely soul of &#123;% label info@sickle harvesting %&#125;</span><br><span class="line">Repeat outrightly, but also repeat the well-being of</span><br><span class="line">Eventually &#123;% label warning@swaying in the desert oasis %&#125;</span><br><span class="line">&#123;% label success@I believe %&#125; I am</span><br><span class="line">&#123;% label primary@Born as the bright summer flowers %&#125;</span><br><span class="line">Do not withered undefeated fiery demon rule</span><br><span class="line">Heart rate and breathing to bear &#123;% label danger@the load of the cumbersome %&#125;</span><br><span class="line">Bored</span><br></pre></td></tr></table></figure>

<blockquote class="blockquote-center"><p>I heard the echo, <span class="label default">from the valleys and the heart</span><br><br>Open to the lonely soul of <span class="label info">sickle harvesting</span><br><br>Repeat outrightly, but also repeat the well-being of<br><br>Eventually <span class="label warning">swaying in the desert oasis</span><br><br><span class="label success">I believe</span> I am <br><br><span class="label primary">Born as the bright summer flowers</span><br><br>Do not withered undefeated fiery demon rule<br><br>Heart rate and breathing to bear <span class="label danger">the load of the cumbersome</span><br><br>Bored</p>
</blockquote>

<p>可在主题配置文件中设置 <code>label: false</code> 来取消label标签默认CSS样式。</p>
<h2 id="button按钮"><a href="#button按钮" class="headerlink" title="button按钮"></a>button按钮</h2><p>通过button标签可以快速添加带有主题样式的按钮，语法如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&#123;% button /<span class="type">path</span>/<span class="keyword">to</span>/url/, <span class="type">text</span>, icon [<span class="keyword">class</span>], title %&#125;</span><br></pre></td></tr></table></figure>

<p>也可简写为：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&#123;% btn /<span class="type">path</span>/<span class="keyword">to</span>/url/, <span class="type">text</span>, icon [<span class="keyword">class</span>], title %&#125;</span><br></pre></td></tr></table></figure>

<p>其中， 图标ID来源于 <a href="https://fontawesome.com/v4.7.0/icons/" target="_blank" rel="noopener">FontAwesome</a> 。</p>
<p>使用示例如下：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">btn</span> #, 文本 %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">btn</span> #, 文本 &amp; 标题,, 标题 %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">btn</span> #, 文本 &amp; 图标, home %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">btn</span> #, 文本 &amp; 大图标 (固定宽度), home fa-fw fa-lg %&#125;</span></span><br></pre></td></tr></table></figure>

<p><a class="btn" href="#">文本</a></p>
<p><a class="btn" href="#" title="标题">文本 & 标题</a></p>
<p><a class="btn" href="#"><i class="fa fa-home"></i>文本 & 图标</a></p>
<p><a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>文本 & 大图标 (固定宽度)</a></p>

<h2 id="tab标签"><a href="#tab标签" class="headerlink" title="tab标签"></a>tab标签</h2><p>tab标签用于快速创建tab选项卡，语法如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% tabs [Unique name], [index] %&#125;</span><br><span class="line">  <span class="comment">&lt;!-- tab [Tab caption]@[icon] --&gt;</span></span><br><span class="line">  标签页内容（支持行内标签）</span><br><span class="line">  <span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p>其中，各参数意义如下：</p>
<ul>
<li>Unique name: 全局唯一的Tab名称，将作为各个标签页的id属性前缀</li>
<li>index: 当前激活的标签页索引，如果未定义则默认选中显示第一个标签页，如果设为-1则默认隐藏所有标签页</li>
<li>Tab caption: 当前标签页的标题，如果不指定则会以Unique name加上索引作为标题</li>
<li>icon: 在标签页标题中添加Font awesome图标</li>
</ul>
<p>使用示例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Tab标签列表 %&#125;</span><br><span class="line">  &lt;!-- tab 标签页1 --&gt;</span><br><span class="line">    标签页1文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">  &lt;!-- tab 标签页2 --&gt;</span><br><span class="line">    标签页2文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">  &lt;!-- tab 标签页3 --&gt;</span><br><span class="line">    标签页3文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="tab标签列表"><ul class="nav-tabs"><li class="tab active"><a href="#tab标签列表-1">标签页1</a></li><li class="tab"><a href="#tab标签列表-2">标签页2</a></li><li class="tab"><a href="#tab标签列表-3">标签页3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab标签列表-1"><p>  标签页1文本内容</p></div><div class="tab-pane" id="tab标签列表-2"><p>  标签页2文本内容</p></div><div class="tab-pane" id="tab标签列表-3"><p>  标签页3文本内容</p></div></div></div>

<h2 id="引用站内链接"><a href="#引用站内链接" class="headerlink" title="引用站内链接"></a>引用站内链接</h2><p>可以通过如下语法引入站内文章的地址或链接：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">post_path</span> slug %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">post_link</span> slug [title] %&#125;</span></span><br></pre></td></tr></table></figure>

<p>其中，<code>slug</code> 表示 <code>_post</code> 目录下的Markdown文件名。</p>
<p><code>post_path</code> 标签将会渲染为文章的地址，即 <code>permalink</code>；而 <code>post_link</code> 标签将会渲染为链接，可以通过 <code>title</code> 指定链接标题。</p>
<p>如以下标签将会生成 <code></code></p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">post_path</span> hexo-writing-skills %&#125;</span></span><br></pre></td></tr></table></figure>

<p>而以下标签则会生成 </p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">post_link</span> hexo-writing-skills 链接标题 %&#125;</span></span><br></pre></td></tr></table></figure>

<p>这种站内引用方式比直接使用url引用的形式更为可靠，因为即使修改了 <code>permalink</code> 格式，或者修改了文章的路由地址，只要Markdown文件名没有发生改变，引用链接都不会失效。</p>
<h2 id="插入Swig代码"><a href="#插入Swig代码" class="headerlink" title="插入Swig代码"></a>插入Swig代码</h2><p>如果需要在页面内插入Swig代码，包括原生HTML代码，JavaScript脚本等，可以通过 raw 标签来禁止Markdown引擎渲染标签内的内容。语法如下：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&#123;%<span class="built_in"> raw </span>%&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>

<p>该标签通常用于在页面内引入三方脚本实现特殊功能，尤其是当该三方脚本尚无相关hexo插件支持的时候，可以通过写原生Web页面的形式引入脚本并编写实现逻辑。</p>
<h2 id="插入Gist"><a href="#插入Gist" class="headerlink" title="插入Gist"></a>插入Gist</h2><p>如果需要在页面内插入Gist上的代码片段时，可以使用如下标签:</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>

<p>其中，各参数意义如下：</p>
<ul>
<li>gist_id: Gist仓库页面url中最后一段随机字符串</li>
<li>filename: Gist中的文件名</li>
</ul>
<p>如果Gist中只有一个文件，可以不用指定filename，也可以通过JavaScript脚本的形式直接引入，如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://gist.github.com/Coodool/cb4ff46a3523955dd4b918dd775b6774.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果Gist中有多个文件，可以在标签内输入filename来指定只引入某个文件，如果没有指定filename，将会引入Gist中的所有文件。另外，引用JavaScript脚本形式无法精确控制只引入某一个文件，将会同时引入Gist中的所有文件。</p>
<p>如果指定了与Gist无法匹配的filename，页面上将不会显示任何标签内容。所以，一般在Gist只有一个文件的情况下无需指定filename。</p>
<div class="note warning">
            <p>在页面中引入Gist代码段将会同时从github服务器上下载脚本与CSS样式文件，由于国内访问github服务器延迟较高，往往资源文件连接和下载的速度很慢，会阻塞页面的渲染进程导致短时白屏。</p>
          </div>

<h1 id="插入多媒体"><a href="#插入多媒体" class="headerlink" title="插入多媒体"></a>插入多媒体</h1><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>Markdown并不会保存插入的图片资源本身，只是记录了获取资源的链接。因此我们需要选择一款合适的图床来支持博客写作，目前各大云服务商都提供了对象存储服务，如七牛云KODO、又拍云USS、腾讯云COS、阿里云OSS等。</p>
<p>所以在Markdown中插入一张图片要分为以下几步来进行：</p>
<ol>
<li>将图片资源上传到图床中</li>
<li>获取图片外链</li>
<li>插入到Markdown文档中</li>
</ol>
<p>对于博客这种低频访问的应用场景，各大服务商的服务其实并没有显著的差异，并且前期的使用都提供了免费的流量，所以我认为图床的选择主要参考以下几个方面：</p>
<ul>
<li><p>图床是否提供了便捷的图形化管理工具用于图片的上传下载？</p>
<p>如阿里云有ossbrowser，腾讯云有cosbrowser，七牛云有QsunSync等，但就本人使用体验来说，七牛云QsunSync的UI界面确实很拙劣，功能较为单一，而腾讯云cosbrowser的界面就相对美观优雅的多，并以Windows资源管理器的交互方式为用户提供资源的上传、下载和管理服务。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181023103058966.png" alt="腾讯云COS客户端界面截图" title="腾讯云COS客户端界面截图"></p>
</li>
<li><p>是否能够方便的插入到Markdown文档中？</p>
<p>这就和服务商的关系不大了，主要看主流Markdown文档编辑器对各大图床的支持程度。其实关于在Markdown中更便捷的插入图片这事儿，最上心的还是文档编辑器的开发者，为了给用户提供更方便的文档写作体验，各大文档编辑器以及支持了Markdown语法的笔记软件都花了不少心思，解决方案无外乎两种，第一种是内置图片存储服务，如有道云笔记（需付费）、石墨文档，第二种是集成了云服务商的图床服务，如Hexo Editor、Mweb等，前者插入图片方便，适用于个人笔记，而后者能够提供CDN加速服务，适用于博客等公开文档。</p>
<p>其中Hexo Editor支持腾讯云和七牛云的一键上传服务，MWeb支持Imgur、七牛云、又拍云，也可自定义图床服务。</p>
</li>
</ul>
<div class="note info">
            <p>本站使用腾讯云COS提供对象存储服务。</p>
          </div>

<h2 id="网易云音乐"><a href="#网易云音乐" class="headerlink" title="网易云音乐"></a>网易云音乐</h2><p>在网页版云音乐中找到歌曲，点击生成外链播放器：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181104044431732.png" alt="获取歌曲外链" title="获取歌曲外链"></p>
<p>根据个人喜好选择播放器尺寸和播放模式：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181104044659251.png" alt="获取插件代码" title="获取插件代码"></p>
<p>将获取到的 <code>iframe</code> 代码添加到页面中，默认样式如下：</p>
<div class="fluid-vids" style="position: relative; margin-bottom: 20px; width: 100%; padding-top: 10.75%;"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="329" height="86" src="//music.163.com/outchain/player?type=2&amp;id=34613621&amp;auto=0&amp;height=66" style="width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;">
</iframe></div>

<p>播放器宽度将会被拉长占满整个页宽，看起来有点别扭。查看控制台之后发现 <code>iframe</code> 在渲染的时候被处理过，外层包了一个类名为 <code>fluid-vids</code> 的 <code>div</code> 元素。顺藤摸瓜，找到了相关代码，原来是为了让嵌入的视频支持自适应布局，恰好也将 <code>music.163.com</code> 域名包含在了处理逻辑内，只需要将该行删除即可。</p>
<figure class="highlight js"><figcaption><span>themes\next\source\js\src\utils.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> SUPPORTED_PLAYERS = [</span><br><span class="line">  <span class="string">'www.youtube.com'</span>,</span><br><span class="line">  <span class="string">'player.vimeo.com'</span>,</span><br><span class="line">  <span class="string">'player.youku.com'</span>,</span><br><span class="line">  <span class="comment">//'music.163.com',</span></span><br><span class="line">  <span class="string">'www.tudou.com'</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<p>这样播放器样式就变成左对齐固定宽度了，如果你还想让播放器居中，可以将 <code>iframe</code> 包在 <code>&lt;center&gt;</code> 标签内。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">329</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=34613621&amp;auto=0&amp;height=66"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<center>
  <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="329" height="86" src="//music.163.com/outchain/player?type=2&id=34613621&auto=0&height=66">
  </iframe>
</center>

<div class="note warning">
            <p>其实这种通过HTML标签实现CSS样式的做法并不合适，写前端代码的时候不推荐这么做，并且HTML5中也已经废除了 <code>&lt;center&gt;</code> <code>&lt;strong&gt;</code> 等纯粹为了改变样式而存在的HTML标签，HTML标签应该只负责文档结构，所有样式相关的工作应该交给CSS来实现。</p>
          </div>

<p>如果你发现播放器前后都有空行，可以在控制台中查看元素，检查 <code>iframe</code> 元素前后是否多了 <code>&lt;br&gt;</code> 元素：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181027111824579.png" alt="播放器前后空行代码" title="播放器前后空行代码"></p>
<p>造成这样的原因是Markdown渲染引擎把 <code>&lt;center&gt;</code> 标签和 <code>&lt;iframe&gt;</code> 标签之间的回车当作 <code>&lt;br&gt;</code> 来处理了。参考链接: <a href="https://github.com/hexojs/hexo/issues/1388" target="_blank" rel="noopener">Hexo issues #1388</a></p>
<p>简单的解决方案是将HTML标签写到一行内，但这样会降低代码可编辑性。</p>
<p>另外一种方案是在站点配置文件中添加如下代码：</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">gfm:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">breaks:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>重启服务器之后更改才会生效。</p>
<div class="note warning">
            <p>网易云音乐中部分歌曲因版权保护已经无法生成外链了，即使是通过控制台强行拿到外链地址，嵌入网页后也无法播放。</p>
          </div>

<h2 id="Aplayer音频播放器"><a href="#Aplayer音频播放器" class="headerlink" title="Aplayer音频播放器"></a>Aplayer音频播放器</h2><p><a href="https://aplayer.js.org/#/" target="_blank" rel="noopener">APlayer</a>是由 <a href="https://github.com/DIYgod" target="_blank" rel="noopener">DIYgod</a> 编写的HTML5音频播放器，提供了另一种音频播放方案。</p>
<div class="note ">
            <p>了解诞生背景： <a href="https://diygod.me/2167/" target="_blank" rel="noopener">APlayer - 送给小狐狸和小兔子的 HTML5 播放器</a></p>
          </div>

<p>借助 <a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a> 插件，可以通过标签的形式方便快捷的插入音频组件。</p>
<p>在站点根目录下执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure>

<p>然后在页面中按照以下标签格式插入歌曲链接和相关信息：</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure>

<p>其中，各参数意义如下：</p>
<ul>
<li>title: 曲目标题</li>
<li>author: 曲目作者</li>
<li>url: 音乐文件 URL 地址</li>
<li>picture_url: (可选) 音乐对应的图片地址</li>
<li>narrow: （可选）播放器袖珍风格</li>
<li>autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能</li>
<li>width:xxx: (可选) 播放器宽度 (默认: 100%)</li>
<li>lrc:xxx: （可选）歌词文件 URL 地址</li>
</ul>
<p>示例效果如下：</p>

        <div id="aplayer-vMmtUGeo" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">
            <pre class="aplayer-lrc-content"></pre>
        </div>
        <script>
          var ap = new APlayer({
            element: document.getElementById("aplayer-vMmtUGeo"),
            narrow: false,
            autoplay: false,
            showlrc: 3,
            music: {
              title: "前前世世 -《君の名は。》",
              author: "RADWIMPS",
              url: "https://moeplayer.b0.upaiyun.com/aplayer/yourname.mp3",
              pic: "http://pic.5577.com/up/2016-12/201612891712576.png",
              lrc: "https://moeplayer.b0.upaiyun.com/aplayer/yourname.lrc"
            }
          });
          window.aplayers || (window.aplayers = []);
          window.aplayers.push(ap);
        </script>

<p>当开启 Hexo 的 <a href="https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9" target="_blank" rel="noopener">文章资源文件夹</a> 功能时，可以将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用，示例如下：</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&#123;<span class="meta">%</span> aplayer <span class="string">"Caffeine"</span> <span class="string">"Jeff Williams"</span> <span class="string">"caffeine.mp3"</span> <span class="string">"picture.jpg"</span> <span class="string">"lrc:caffeine.txt"</span> <span class="meta">%</span>&#125;</span><br></pre></td></tr></table></figure>

<p>如果想要统一实现固定宽度和居中样式，可以在自定义样式文件中添加如下样式规则</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//Aplayer 播放器居中</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.aplayer</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span> auto;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>插入播放列表功能请参考： <a href="https://github.com/MoePlayer/hexo-tag-aplayer#with-playlist" target="_blank" rel="noopener">hexo-tag-aplayer | With playlist</a></p>
          </div>

<h2 id="Dpalyer视频播放器"><a href="#Dpalyer视频播放器" class="headerlink" title="Dpalyer视频播放器"></a>Dpalyer视频播放器</h2><p><a href="http://dplayer.js.org/#/" target="_blank" rel="noopener">DPlayer</a> 是一款简洁美观的HTML5视频播放器，同样出自 <a href="https://github.com/DIYgod" target="_blank" rel="noopener">DIYgod</a> 之手，支持弹幕互动。</p>
<div class="note ">
            <p>了解诞生背景： <a href="https://diygod.me/2648/" target="_blank" rel="noopener">DPlayer – 最好看的弹幕播放器送给最好看的宫园薰</a></p>
          </div>

<p>借助 <a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a> 插件，可以通过标签的形式方便快捷的插入视频组件。</p>
<p>在站点根目录下执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure>

<p>然后在页面中按照以下标签格式插入歌曲链接和相关信息：</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% dplayer <span class="string">"url=video-url"</span> <span class="string">"pic=image-url"</span> ... [<span class="string">"key=value"</span>] %&#125;</span><br></pre></td></tr></table></figure>

<p>此处列举部分重要 <code>key</code> 的参数意义:</p>
<div class="tabs" id="tab标签列表"><ul class="nav-tabs"><li class="tab active"><a href="#tab标签列表-1">播放器</a></li><li class="tab"><a href="#tab标签列表-2">视频</a></li><li class="tab"><a href="#tab标签列表-3">字幕</a></li><li class="tab"><a href="#tab标签列表-4">弹幕</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab标签列表-1"><ul>
<li>autoplay：是否开启视频自动播放，默认为 <code>fasle</code></li>
<li>loop：是否开启视频循环播放，默认为 <code>false</code></li>
<li>screenshot：是否开启截图，默认为 <code>false</code></li>
<li>mutex：是否禁止多个播放器同时播放，默认为 <code>true</code></li>
<li>dmunlimited：是否开启海量弹幕模式，默认为 <code>false</code></li>
<li>preload：预加载模式，可选 <code>note</code> <code>metadata</code> <code>auto</code></li>
<li>theme：主题色</li>
<li>lang：语言，可选 <code>en</code> <code>zh-cn</code> <code>zh-tw</code></li>
<li>logo：左上角的Logo</li>
<li>volume：默认音量，默认为0.7</li>
<li>width：播放器宽度</li>
<li>height：播放器长度</li>
</ul></div><div class="tab-pane" id="tab标签列表-2"><ul>
<li>url：视频链接</li>
<li>pic：视频封面</li>
<li>thumbnails：视频缩略图，可以使用 <a href="https://github.com/MoePlayer/DPlayer-thumbnails" target="_blank" rel="noopener">DPlayer-thumbnails</a> 生成</li>
<li>vidtype：视频类型，可选 <code>auto</code> <code>hls</code> <code>flv</code> <code>dash</code> 或其他自定义类型</li>
</ul></div><div class="tab-pane" id="tab标签列表-3"><ul>
<li>suburl：字幕链接</li>
<li>subtype：字幕类型，可选 <code>webvtt</code> <code>ass</code>，目前只支持 <code>webvtt</code></li>
<li>subbottom：字幕距离播放器底部的距离，如 <code>10px</code> <code>10%</code></li>
<li>subcolor：字幕颜色</li>
</ul></div><div class="tab-pane" id="tab标签列表-4"><ul>
<li>id：弹幕id</li>
<li>api：弹幕api</li>
<li>token：弹幕后端验证 token</li>
<li>addition：额外外挂弹幕</li>
<li>dmuser：弹幕用户名</li>
<li>maximum：弹幕最大数量</li>
</ul></div></div></div>

<p>示例效果如下：</p>
<div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"screenshot":true,"video":{"url":"https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4","pic":"https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>

<p>也可以通过raw标签引入原生Dplayer以使用更多配置项，示例代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dplayer"</span> <span class="attr">className</span>=<span class="string">"dplayer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">class</span>=<span class="string">"dplayer-css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> dp = <span class="keyword">new</span> DPlayer(&#123;</span></span><br><span class="line"><span class="javascript">    container: <span class="built_in">document</span>.querySelector(<span class="string">'#dplayer'</span>),</span></span><br><span class="line"><span class="actionscript">    autoplay: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">    theme: <span class="string">'#FADFA3'</span>,</span></span><br><span class="line"><span class="actionscript">    loop: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">    screenshot: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">    hotkey: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">    logo: <span class="string">'logo.png'</span>,</span></span><br><span class="line">    volume: 0.7,</span><br><span class="line"><span class="actionscript">    mutex: <span class="literal">true</span>,</span></span><br><span class="line">    video: &#123;</span><br><span class="line"><span class="actionscript">      url: <span class="string">'demo.mp4'</span>,</span></span><br><span class="line"><span class="actionscript">      pic: <span class="string">'demo.png'</span>,</span></span><br><span class="line"><span class="actionscript">      thumbnails: <span class="string">'thumbnails.jpg'</span>,</span></span><br><span class="line"><span class="actionscript">      type: <span class="string">'auto'</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    subtitle: &#123;</span><br><span class="line"><span class="actionscript">      url: <span class="string">'webvtt.vtt'</span>,</span></span><br><span class="line"><span class="actionscript">      type: <span class="string">'webvtt'</span>,</span></span><br><span class="line"><span class="actionscript">      fontSize: <span class="string">'25px'</span>,</span></span><br><span class="line"><span class="actionscript">      bottom: <span class="string">'10%'</span>,</span></span><br><span class="line"><span class="actionscript">      color: <span class="string">'#b7daff'</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    danmaku: &#123;</span><br><span class="line"><span class="actionscript">      id: <span class="string">'demo'</span>,</span></span><br><span class="line"><span class="actionscript">      api: <span class="string">'https://api.prprpr.me/dplayer/'</span>,</span></span><br><span class="line"><span class="actionscript">      token: <span class="string">'demo'</span>,</span></span><br><span class="line">      maximum: 3000,</span><br><span class="line"><span class="actionscript">      user: <span class="string">'DIYgod'</span>,</span></span><br><span class="line">      margin: &#123;</span><br><span class="line"><span class="actionscript">        bottom: <span class="string">'15%'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      unlimited: <span class="literal">true</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    contextmenu: [</span><br><span class="line">      &#123;</span><br><span class="line"><span class="actionscript">        text: <span class="string">'custom contextmenu'</span>,</span></span><br><span class="line"><span class="actionscript">        link: <span class="string">'https://github.com/MoePlayer/DPlayer'</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>更多配置参数请参考 <a href="http://dplayer.js.org/#/zh-Hans/?id=%E5%8F%82%E6%95%B0" target="_blank" rel="noopener">Dplayer 官方中文文档</a></p>
          </div>

<h1 id="写作工具"><a href="#写作工具" class="headerlink" title="写作工具"></a>写作工具</h1><p>Hexo写作必备一款好用的Markdown文档编辑器，下面推荐几款我比较喜欢的。</p>
<h2 id="Sublime-Text-3"><a href="#Sublime-Text-3" class="headerlink" title="Sublime Text 3"></a>Sublime Text 3</h2><p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181106041459974.png" alt="Sublime Text 3 用户界面" title="Sublime Text 3 用户界面"></p>
<p>Sublime Text 3 是一款轻量级的文档编辑器，响应速度极快，社区活跃，主题插件也很丰富，在Windows下可以取代记事本成为默认的文档编辑器，也可以通过集成不同的编程依赖包成为功能强大的IDE，还可以搭配上Markdown插件成为网络作家的写作工具。</p>
<p>推荐两个比较实用的Markdown写作插件：Markdown Editing和OmniMarkupPreviewer。</p>
<h3 id="Markdown-Editing"><a href="#Markdown-Editing" class="headerlink" title="Markdown Editing"></a><a href="https://github.com/SublimeText-Markdown/MarkdownEditing" target="_blank" rel="noopener">Markdown Editing</a></h3><p>支持Markdown语法高亮，提供Markdown编辑的快捷键，提供多种主题样式。</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + Alt + V</td>
<td>在选中文本上创建行内链接或将剪贴板内容粘贴为所选文本的行内链接</td>
</tr>
<tr>
<td>Ctrl + Alt + R</td>
<td>在选中文本上创建参考式链接或将剪贴板内容粘贴为所选文本的参考式链接</td>
</tr>
<tr>
<td>Shift + Win + K</td>
<td>在选中文本上创建行内图片或将剪贴板内容粘贴为所选文本的行内图片</td>
</tr>
<tr>
<td>Alt + B</td>
<td>加粗强调，当未选中文本时默认加粗光标所在单词，再次按键取消加粗</td>
</tr>
<tr>
<td>Alt + I</td>
<td>斜体强调，当未选中文本时默认倾斜光标所在单词，再次按键取消斜体</td>
</tr>
<tr>
<td>Ctrl + 1~6</td>
<td>在空行上添加对应数字级别的标题，选中已有标题时按键可修改标题级别</td>
</tr>
<tr>
<td>Alt + Shift + 6</td>
<td>添加脚注</td>
</tr>
<tr>
<td>Shift + Tab</td>
<td>折叠/展开当前章节</td>
</tr>
<tr>
<td>Ctrl + Shift + Tab</td>
<td>折叠指定级别下的所有章节</td>
</tr>
<tr>
<td>Ctrl + Alt + Shift + PageUp/PageDown</td>
<td>跳转到上/下一个同级或更高级的其他标题</td>
</tr>
<tr>
<td>Ctrl + Shift + PageUp/PageDown</td>
<td>跳转到上/下一个标题</td>
</tr>
<tr>
<td>Ctrl + Shift + R</td>
<td>显示Markdown文件标题</td>
</tr>
</tbody></table>
<h3 id="OmniMarkupPreviewer"><a href="#OmniMarkupPreviewer" class="headerlink" title="OmniMarkupPreviewer"></a><a href="https://github.com/timonwong/OmniMarkupPreviewer" target="_blank" rel="noopener">OmniMarkupPreviewer</a></h3><p>用于在浏览器中实时预览Markdown文档，用户可以边在Sublime中写作边在浏览器中查看文档的实时变化，而不需要手动刷新浏览器。</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + Alt + O</td>
<td>在浏览器中预览</td>
</tr>
<tr>
<td>Ctrl + Alt + X</td>
<td>导出为HMTL</td>
</tr>
<tr>
<td>Ctrl + Alt + C</td>
<td>以HTML格式拷贝到剪贴板</td>
</tr>
</tbody></table>
<div class="note warning">
            <p>PlainTasks插件（一款Todo List工具）会与OmniMarkupPreviewer产生冲突，导致OmniMarkupPreviewer功能异常，如编辑后无法实时预览，<a href="https://github.com/timonwong/OmniMarkupPreviewer/issues/111" target="_blank" rel="noopener">资源样式加载错误</a> 等。如果不想卸载PlainTasks，可以在使用OmniMarkupPreviewer时暂时禁用PlainTasks，具体做法为在Sublime Text的User Settings中添加如下代码：</p>
          </div>

<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"ignored_packages":[</span><br><span class="line">  <span class="string">"PlainTasks"</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure>

<h2 id="Hexo-Editor"><a href="#Hexo-Editor" class="headerlink" title="Hexo Editor"></a><a href="https://github.com/zhuzhuyule/HexoEditor" target="_blank" rel="noopener">Hexo Editor</a></h2><p>Hexo Editor是专为Hexo博客写作打造的文件编辑器，界面极简美观，支持实时预览，支持图片上传。</p>
<p><img src="https://raw.githubusercontent.com/zhuzhuyule/HexoEditor/master/screenshots/main.png" alt="Hexo Editor 用户界面" title="Hexo Editor 用户界面"></p>
<div class="note warning">
            <p>本人在实际使用过程中发现该软件功能不太稳定，插入图片有时候会卡顿，甚至出现程序崩溃的现象。</p>
          </div>

<h3 id="编辑快捷键"><a href="#编辑快捷键" class="headerlink" title="编辑快捷键"></a>编辑快捷键</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Tab</td>
<td>增加缩进</td>
</tr>
<tr>
<td>Shift + Tab</td>
<td>减少缩进</td>
</tr>
<tr>
<td>Ctrl + B</td>
<td>加粗</td>
</tr>
<tr>
<td>Ctrl + I</td>
<td>斜体</td>
</tr>
<tr>
<td>Ctrl + D</td>
<td>删除当前行</td>
</tr>
<tr>
<td>Ctrl + `</td>
<td>将当前单词标记为代码</td>
</tr>
<tr>
<td>Ctrl + L</td>
<td>插入无序列表</td>
</tr>
<tr>
<td>Ctrl + Alt + L</td>
<td>插入有序列表</td>
</tr>
<tr>
<td>Ctrl + ]</td>
<td>降低标题级别</td>
</tr>
<tr>
<td>Ctrl + [</td>
<td>提升标题级别</td>
</tr>
<tr>
<td>Ctrl + =</td>
<td>插入引用</td>
</tr>
<tr>
<td>Ctrl + U</td>
<td>插入链接</td>
</tr>
<tr>
<td>Ctrl + Alt + U</td>
<td>插入图片</td>
</tr>
<tr>
<td>Ctrl + T</td>
<td>插入表格</td>
</tr>
<tr>
<td>Ctrl + V</td>
<td>粘贴为纯文本（去除格式）</td>
</tr>
<tr>
<td>Shift + Ctrl + V</td>
<td>粘贴（保留源格式）</td>
</tr>
<tr>
<td>Alt + F</td>
<td>格式化表格</td>
</tr>
</tbody></table>
<h3 id="操作快捷键"><a href="#操作快捷键" class="headerlink" title="操作快捷键"></a>操作快捷键</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + N</td>
<td>新建Hexo文档</td>
</tr>
<tr>
<td>Ctrl + H</td>
<td>new hexo document</td>
</tr>
<tr>
<td>Ctrl + O</td>
<td>open md document</td>
</tr>
<tr>
<td>Ctrl + S</td>
<td>save md document</td>
</tr>
<tr>
<td>Shift + Ctrl + S</td>
<td>save as</td>
</tr>
<tr>
<td>Alt + Ctrl + S</td>
<td>open settings</td>
</tr>
<tr>
<td>Ctrl + W</td>
<td>toggle write mode</td>
</tr>
<tr>
<td>Ctrl + P</td>
<td>toggle preview mode</td>
</tr>
<tr>
<td>Ctrl + R</td>
<td>toggle read mode</td>
</tr>
</tbody></table>
<h2 id="MWeb"><a href="#MWeb" class="headerlink" title="MWeb"></a>MWeb</h2><p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181023095629471.png" alt="Mweb 用户界面" title="Mweb 用户界面"></p>
<p>MWeb是Mac平台上一款专业的Markdown写作、记笔记、静态博客生成软件，支持图片上传。他的与众不同在于，除了具备一般Markdown编辑器所具有的一切基本功能之外，还支持以下特性：</p>
<ul>
<li>支持LaTeX公式、TOC</li>
<li>支持丰富的画图库，如mermaid、Graphviz、echarts、plantuml、流程图、时序图等</li>
<li>支持插入图片后自动上传到图床</li>
<li>拥有及其强大的发布功能，支持一键发布到各大博客平台和笔记软件中</li>
</ul>
<p>尽管拥有如此丰富的特性，但界面仍保持清爽简洁，开发者说到：</p>
<blockquote>
<p>原则上，首先是追求界面简洁和高性能，然后才是强大易用，功能全面。</p>
</blockquote>
<p>目前由oulvhai一人独自开发维护。</p>
<h2 id="Dillinger"><a href="#Dillinger" class="headerlink" title="Dillinger"></a><a href="https://dillinger.io/" target="_blank" rel="noopener">Dillinger</a></h2><p>一款优雅的在线Markdown编辑器，界面美观简洁。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-writing-skills/20181020114433264.png" alt="Dillinger 用户界面" title="Dillinger 用户界面"></p>
<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>本文介绍了Hexo博客的几项关键写作技巧，包括Markdown的基本语法，Hexo主题的内置标签等，本文还介绍了如何在文章中利用图床外链插入图片，如何利用Aplayer / Dplayer等音视频播放器插件在页面内插入多媒体元素等，并列举了几款写作工具以供选择，希望你能从中找到用起来最顺手的一款。如果你有更高级的个性化需求，你可以关注本系列的后续几篇文章：</p>
<ul>
<li>想要进一步美化主题，添加动效以及交互，请参考本系列中的 。</li>
<li>想要深度定制个性化站点，请参考本系列中的 。</li>
<li>想要了解如何将站点部署到公网，请参考本系列中的 </li>
</ul>
<div class="reference-linking">参考链接</div>

<ul>
<li><a href="https://www.markdownguide.org/" target="_blank" rel="noopener">Markdown指南</a></li>
<li><a href="https://theme-next.iissnan.com/tag-plugins.html" target="_blank" rel="noopener">NexT使用文档 | 内置标签</a></li>
<li><a href="https://almostover.ru/2016-01/hexo-theme-next-test/" target="_blank" rel="noopener">Ivan.Nginx | Hexo Theme Next主题样式测试</a></li>
<li><a href="https://almostover.ru/2016-07/hexo-highlight-code-styles/" target="_blank" rel="noopener">Ivan.Nginx | Hexo代码块中的颜色方案</a></li>
<li><a href="https://www.ofind.cn/blog/HEXO/HEXO下的语法高亮拓展修改.html" target="_blank" rel="noopener">猪猪侠 | Hexo下的语法高亮拓展修改</a></li>
<li><a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-aplayer | 中文文档</a></li>
<li><a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer | README</a></li>
<li><a href="http://dplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">Dplayer 官方中文文档</a></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建个人博客系列：基础建站篇</title>
    <url>/hexo-get-started/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hexo 是一个高效简洁的静态博客框架，支持 Markdown 写作语法，插件丰富，主题优雅，部署方便。目前已成为多数人博客建站的选择。</p>
<a id="more"></a>

<p>本文为 Hexo 搭建个人博客系列中的第一篇。第一章中介绍了如何在本地搭建 Hexo 博客，第二章中介绍了如何安装使用 Next 主题，第三章和第四章分别介绍了针对于站点和文章详情页的一些基础优化方案。</p>
<h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><p>在命令行中通过 npm 来安装 Hexo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p><code>-g</code> 表示全局安装，会将 Hexo 命令加入环境变量中，以使其在 cmd 下有效。</p>
<div class="note info">
            <p>Hexo 依赖于 <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a> 和 <a href="https://git-scm.com/download/" target="_blank" rel="noopener">git</a> ，所以在安装 Hexo 之前先确保已安装了这两项应用。</p>
          </div>

<p>新建博客目录，然后在该路径下执行初始化命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>官方教程中提到要在项目目录下执行 <code>npm install</code> 命令，事实上不必如此，在执行 <code>hexo init</code> 的过程中就已经自动安装好了项目依赖。</p>
          </div>

<p>执行完毕后，将会生成以下文件结构：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── node_modules       //依赖安装目录</span><br><span class="line">├── scaffolds          //模板文件夹，新建的文章将会从此目录下的文件中继承格式</span><br><span class="line">|   ├── draft.md         //草稿模板</span><br><span class="line">|   ├── page.md          //页面模板</span><br><span class="line">|   └── post.md          //文章模板</span><br><span class="line">├── source             //资源文件夹，用于放置图片、数据、文章等资源</span><br><span class="line">|   └── _posts           //文章目录</span><br><span class="line">├── themes             //主题文件夹</span><br><span class="line">|   └── landscape        //默认主题</span><br><span class="line">├── .gitignore         //指定不纳入git版本控制的文件</span><br><span class="line">├── _config.yml        //站点配置文件</span><br><span class="line">├── db.json            </span><br><span class="line">├── package.json</span><br><span class="line">└── package-lock.json</span><br></pre></td></tr></table></figure>

<p>在根目录下执行如下命令启动 hexo 的内置 Web 服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>该命令将会调用 Markdown 引擎解析项目中的博客内容生成网页资源，资源将会存于内存中，所以用户执行完命令之后在项目文件夹中是找不到相关的 Web 资源目录的。该命令还会启动一个简易的 Web 服务器用于提供对内存中网页资源的访问（工作机制类似于 webpack-dev-server），Web 服务器默认监听4000端口，用户可在浏览器中通过地址 <code>localhost:4000</code> 访问博客。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-get-started/20181102070503130.png" alt="Hexo 默认主题首页" title="Hexo 默认主题首页"></p>
<p>此外，可以通过添加命令行参数来支持高级用法：</p>
<ul>
<li>当4000端口已被其他应用占用时，可以添加 <code>-p</code> / <code>--port</code> 参数来设置 Web 服务监听的端口号，如<code>hexo s -p 8000</code> ,这时访问地址为 <code>localhost:8000</code> 。</li>
<li>默认情况下，hexo 监听项目目录的文件变化，用户对于项目文件的任何改动都会触发实时解析编译并更新内存中的网页资源，也就是说，用户在本地修改后刷新浏览器就可以看到改动效果。如果不希望 hexo 监听项目目录的文件变化，可以添加 <code>-s</code> / <code>--static</code> 参数，这样本地改动就不会触发 hexo 实时解析更新。</li>
</ul>
<h1 id="更换Next主题"><a href="#更换Next主题" class="headerlink" title="更换Next主题"></a>更换Next主题</h1><p>Next 作为一款符合广大程序员审美的主题，还是有着较高的出场率的。Hexo 中切换主题的方式非常简单，只需要将主题文件拷贝至根目录下的 <code>themes</code> 文件夹中， 然后修改 <code>_config.yml</code> 文件中的 <code>theme</code> 字段即可。</p>
<p>在根目录下执行以下命令下载主题文件：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/theme</span>-<span class="keyword">next</span>/hexo-theme-<span class="keyword">next</span>.git themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<div class="note warning">
            <p>注意！ Next 仓库已经从 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">iissnan/hexo-theme-next</a> 转移到了 <a href="https://github.com/theme-next/hexo-theme-next/releases" target="_blank" rel="noopener">theme-next/hexo-theme-next</a> ，并在新仓库中发布了 v7.5.0 版本，后续维护也将在新仓库中开展。如果你仍在使用旧仓库中的 Next 版本，可能会遇到各种 Bug 。</p>
          </div>

<p>打开站点配置文件，将 <code>theme</code> 字段的值修改为 <code>next</code>。</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<p>这个时候刷新浏览器页面并不会发生变化，需要重启服务器并刷新才能使主题生效。</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-get-started/20181102095611506.png" alt="Next 主题首页" title="Next 主题首页"></p>
<div class="note info">
            <p>如果重启服务器仍无效，尝试使用 <code>hexo clean</code> 清除缓存</p>
          </div>

<p>Next 默认主题风格为 Muse，用户可以在主题配置文件中修改 <code>scheme</code> 字段以选择自己喜欢的主题风格：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>

<h1 id="站点优化"><a href="#站点优化" class="headerlink" title="站点优化"></a>站点优化</h1><p>根目录下的 _config.yml 文件负责站点的相关配置，用户可以通过修改该文件来自定义站点内容或功能，修改后需要重启服务器才能看到效果。</p>
<p>本节通过修改站点配置文件完善了网站标题、网站描述、社交链接、站点版权信息、友情链接等，效果如下图：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-get-started/Snipaste_2018-11-17_17-01-51.png" alt="站点概览" title="站点概览"></p>
<h2 id="完善站点基础信息"><a href="#完善站点基础信息" class="headerlink" title="完善站点基础信息"></a>完善站点基础信息</h2><p>在站点配置文件中完善网站基本信息：</p>
<blockquote>
<p>文件位置：~/blog/_config.yml</p>
</blockquote>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Time</span> <span class="bullet">-</span> <span class="string">Container</span>  <span class="comment"># 站点名称</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">Stay</span> <span class="string">hungry,</span> <span class="string">stay</span> <span class="string">foolish.</span>  <span class="comment"># 站点描述</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment"># 设置网站语言为简体中文</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">staySimple</span>  <span class="comment"># 作者名称</span></span><br></pre></td></tr></table></figure>

<p>每个字段的冒号与值之间需要 <strong>间隔一个空格</strong>。</p>
<h2 id="首页显示文章摘要"><a href="#首页显示文章摘要" class="headerlink" title="首页显示文章摘要"></a>首页显示文章摘要</h2><p>根据默认的主题配置，首页将会显示每一篇文章的全文，如果想要只显示文章摘要，可以在主题配置文件中做出如下更改：</p>
<blockquote>
<p>文件位置：~/blog/themes/next/_config.yml</p>
</blockquote>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 开启自动摘要提取</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span>   <span class="comment"># 摘要长度</span></span><br></pre></td></tr></table></figure>

<p>此时将会从文章中提取150个字符作为摘要。</p>
<p>用户可以在文章中通过 <code>&lt;!-- more --&gt;</code> 标记来精确划分摘要信息，标记之前的段落将作为摘要显示在首页。</p>
<p>如果在文章的 Front-Matter 中有非空的 <code>description</code> 字段，则该字段的内容会被作为摘要显示在首页。</p>
<h2 id="修改站点页脚"><a href="#修改站点页脚" class="headerlink" title="修改站点页脚"></a>修改站点页脚</h2><p>在主题配置文件中修改网站页脚信息：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span>  <span class="comment"># 底部信息区</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2018</span>  <span class="comment"># 建站时间</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">heart</span>   <span class="comment"># 图标名称</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">true</span>   <span class="comment"># 开启动画</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">"#ff0000"</span>   <span class="comment"># 图标颜色</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">powered:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 显示由 Hexo 强力驱动</span></span><br><span class="line">    <span class="attr">version:</span> <span class="literal">false</span>  <span class="comment"># 隐藏 Hexo 版本号</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 显示所用的主题名称</span></span><br><span class="line">    <span class="attr">version:</span> <span class="literal">false</span>  <span class="comment"># 隐藏主题版本号</span></span><br></pre></td></tr></table></figure>

<p>更改后效果如下：</p>
<p><img src="http://yearito-1256884783.image.myqcloud.com/hexo-get-started/20181102094925440.png" alt="站点页脚" title="站点页脚"></p>
<h2 id="修改网站-Favicon"><a href="#修改网站-Favicon" class="headerlink" title="修改网站 Favicon"></a>修改网站 Favicon</h2><p>Favicon 即浏览器标签左侧的图标。下载自己喜欢的图标置于 <code>themes\next\source\images\</code> 目录下，命名方式参考主题配置文件中的 <code>favicon</code> 字段。</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span>  <span class="comment"># 小图标</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span>  <span class="comment"># 大图标</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span>  <span class="comment"># 苹果图标</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span>  <span class="comment"># safari浏览器标签页图标</span></span><br></pre></td></tr></table></figure>

<h2 id="添加友链"><a href="#添加友链" class="headerlink" title="添加友链"></a>添加友链</h2><p>在主题配置文件中修改相应字段：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">links_icon:</span> <span class="string">link</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">友情链接</span></span><br><span class="line"><span class="attr">links_layout:</span> <span class="string">inline</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">yearito:</span> <span class="string">http://yearito.cn/</span></span><br></pre></td></tr></table></figure>

<h2 id="添加社交链接"><a href="#添加社交链接" class="headerlink" title="添加社交链接"></a>添加社交链接</h2><p>用户可以在主题配置文件中根据样例提示添加个人社交软件链接：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/yourname</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:yourname@gmail.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line">  <span class="attr">Weibo:</span> <span class="string">https://weibo.com/yourname</span> <span class="string">||</span> <span class="string">weibo</span></span><br><span class="line">  <span class="attr">Google:</span> <span class="string">https://plus.google.com/yourname</span> <span class="string">||</span> <span class="string">google</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">https://twitter.com/yourname</span> <span class="string">||</span> <span class="string">twitter</span></span><br><span class="line">  <span class="attr">FB Page:</span> <span class="string">https://www.facebook.com/yourname</span> <span class="string">||</span> <span class="string">facebook</span></span><br><span class="line">  <span class="attr">VK Group:</span> <span class="string">https://vk.com/yourname</span> <span class="string">||</span> <span class="string">vk</span></span><br><span class="line">  <span class="attr">StackOverflow:</span> <span class="string">https://stackoverflow.com/yourname</span> <span class="string">||</span> <span class="string">stack-overflow</span></span><br><span class="line">  <span class="attr">YouTube:</span> <span class="string">https://youtube.com/yourname</span> <span class="string">||</span> <span class="string">youtube</span></span><br><span class="line">  <span class="attr">Instagram:</span> <span class="string">https://instagram.com/yourname</span> <span class="string">||</span> <span class="string">instagram</span></span><br><span class="line">  <span class="attr">Skype:</span> <span class="string">skype:yourname?call|chat</span> <span class="string">||</span> <span class="string">skype</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span>   </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 显示社交软件图标</span></span><br><span class="line">  <span class="attr">icons_only:</span> <span class="literal">false</span>  <span class="comment"># 显示图标的同时显示文字</span></span><br></pre></td></tr></table></figure>

<p>如果要取消社交图标前的小圆点，可以在自定义样式文件中添加如下样式规则：</p>
<figure class="highlight css"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//隐藏社交图标前的圆点</span><br><span class="line"><span class="selector-class">.links-of-author</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.links-of-author</span> <span class="selector-class">.exturl</span> &#123;</span><br><span class="line">  &amp;:before &#123;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="添加版权协议"><a href="#添加版权协议" class="headerlink" title="添加版权协议"></a>添加版权协议</h2><p>在主题配置文件中开启相关字段并选择知识共享协议：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure>

<h2 id="点击头像回到首页"><a href="#点击头像回到首页" class="headerlink" title="点击头像回到首页"></a>点击头像回到首页</h2><div class="note info">
            <p>本章节参考 <a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">reuixiy | 打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化#5.13</a></p>
          </div>

<p>修改侧边栏模板代码:</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_macro\sidebar.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">  &#123;% if theme.avatar.url %&#125;</span><br><span class="line"><span class="addition">+   &lt;a href="/"&gt;</span></span><br><span class="line">      &lt;img class="site-author-image" itemprop="image"</span><br><span class="line">        src="&#123;&#123; url_for( theme.avatar.url | default(theme.images + '/avatar.gif') ) &#125;&#125;"</span><br><span class="line">        alt="&#123;&#123; author &#125;&#125;" /&gt;</span><br><span class="line"><span class="addition">+   &lt;/a&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<h1 id="文章页优化"><a href="#文章页优化" class="headerlink" title="文章页优化"></a>文章页优化</h1><p>主题目录下的 themes\next\_config.yml 文件负责与主题相关的配置，用户可以通过修改该文件来自定义与主题相关的内容或功能，修改后刷新浏览器即可即时生效。</p>
<h2 id="修改文章目录导航"><a href="#修改文章目录导航" class="headerlink" title="修改文章目录导航"></a>修改文章目录导航</h2><h3 id="取消数字编号"><a href="#取消数字编号" class="headerlink" title="取消数字编号"></a>取消数字编号</h3><p>在主题配置文件中关闭目录中的数字编号：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span>  <span class="comment"># 关闭目录中的数字编号</span></span><br></pre></td></tr></table></figure>

<p>这里建议不关闭目录中的数字编号</p>
<h3 id="展开全部目录层级"><a href="#展开全部目录层级" class="headerlink" title="展开全部目录层级"></a>展开全部目录层级</h3><p>默认情况下文章的多级目录是折叠的，点击才会触发下级菜单的展开，并且同时只能展开一个目录分支，这会造成在点击不同目录标题的时候目录跳来跳去。如果你想实现默认展开全部目录的功能，可以在自定义样式文件中添加以下代码：</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//TOC目录默认全部展开</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.nav-child</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="默认展开两级目录"><a href="#默认展开两级目录" class="headerlink" title="默认展开两级目录"></a>默认展开两级目录</h3><p>通常文章内会出现多级标题，对应的目录里就会有多级导航出现，这时候一些原本你不希望出现的次要标题也会在目录中出现并且无法折叠。可以通过以下样式实现默认只展开两级目录，这样一来就通过一个折中的方案完美解决了目录折叠的问题。</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//TOC目录默认展开两级</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.nav-level-1</span>&gt;<span class="selector-class">.nav-child</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="只显示两级目录"><a href="#只显示两级目录" class="headerlink" title="只显示两级目录"></a>只显示两级目录</h3><p>如果你根本不想让三级及以上的标题出现TOC导航目录中，可以考虑在自定义样式文件中添加以下代码：</p>
<figure class="highlight css"><figcaption><span>themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//TOC目录默认只显示两级目录</span><br><span class="line"><span class="selector-class">.nav-level-2</span> &gt; <span class="selector-class">.nav-child</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="主动隐藏文章目录"><a href="#主动隐藏文章目录" class="headerlink" title="主动隐藏文章目录"></a>主动隐藏文章目录</h3><p>如果你写了一篇并不算长的文章，没有层层嵌套的多级目录结构，此时侧边的文章目录空荡荡的就有点鸡肋了。修改侧边栏布局模板中的相关逻辑代码：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_macro\sidebar.swig</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="deletion">- &#123;% set display_toc = is_post and theme.toc.enable %&#125;</span></span><br><span class="line"><span class="addition">+ &#123;% set display_toc = is_post and theme.toc.enable and not page.hide_toc %&#125;</span></span><br></pre></td></tr></table></figure>

<p>然后就可在 Front-Matter 中设定变量 hide_toc 用于控制是否隐藏侧边目录。</p>
<h2 id="修改文章-meta-信息"><a href="#修改文章-meta-信息" class="headerlink" title="修改文章 meta 信息"></a>修改文章 meta 信息</h2><p>默认主题配置中，标题下方会显示文章的创建时间、文章的修改时间、文章分类信息等元数据，用户可以在主题配置文件中自定义设置需要显示的 meta 信息：</p>
<figure class="highlight yaml"><figcaption><span>themes\next\_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span>  <span class="comment"># 显示文字说明</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span>  <span class="comment"># 显示文章创建时间</span></span><br><span class="line">  <span class="attr">updated_at:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span>  <span class="comment"># 隐藏文章修改时间</span></span><br><span class="line">    <span class="attr">another_day:</span> <span class="literal">true</span>  <span class="comment"># 只有当修改时间和创建时间不是同一天的时候才显示</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">false</span>  <span class="comment"># 隐藏分类信息</span></span><br></pre></td></tr></table></figure>

<h2 id="中英文之间自动添加空格"><a href="#中英文之间自动添加空格" class="headerlink" title="中英文之间自动添加空格"></a>中英文之间自动添加空格</h2><p>该功能由 <a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">pangu</a>  提供，在 Next v7.5.0 版本中集成了插件到项目中，如果使用只需在主题配置文件中设置 <code>pangu: true</code> 即可启用该动能。</p>
<div class="note warning">
            <p>不推荐使用 hexo-filter-auto-spacing 实现该功能，该插件会导致目录中带有中英文的标题失效，无法跳转到文章指定章节。</p>
          </div>

<h2 id="修正文末导航跳转逻辑"><a href="#修正文末导航跳转逻辑" class="headerlink" title="修正文末导航跳转逻辑"></a>修正文末导航跳转逻辑</h2><div class="note info">
            <p>本章节参考 <a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">reuixiy | 打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化#5.2</a></p>
          </div>

<p>如果不是看到 reuixiy 的文章，可能一辈子都不会注意到这个奇葩的逻辑：文章底部的左侧/右侧箭头分别导航到更旧/更新的文章链接，就好像你在手机相册里左滑却看到了更久以前的照片，细细想想这个逻辑毫无社会主义可言，至少没有中国特色。</p>
<p>修改文章布局模板：</p>
<figure class="highlight diff"><figcaption><span>themes\next\layout\_macro\post.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% if not is_index and (post.prev or post.next) %&#125;</span><br><span class="line">  &lt;div class="post-nav"&gt;</span><br><span class="line">    &lt;div class="post-nav-next post-nav-item"&gt;</span><br><span class="line"><span class="deletion">-      &#123;% if post.next %&#125;</span></span><br><span class="line"><span class="addition">+      &#123;% if post.prev %&#125;</span></span><br><span class="line"><span class="deletion">-        &lt;a href="&#123;&#123; url_for(post.next.path) &#125;&#125;" rel="next" title="&#123;&#123; post.next.title &#125;&#125;"&gt;</span></span><br><span class="line"><span class="addition">+        &lt;a href="&#123;&#123; url_for(post.prev.path) &#125;&#125;" rel="prev" title="&#123;&#123; post.prev.title &#125;&#125;"&gt;</span></span><br><span class="line"><span class="deletion">-          &lt;i class="fa fa-chevron-left"&gt;&lt;/i&gt; &#123;&#123; post.next.title &#125;&#125;</span></span><br><span class="line"><span class="addition">+          &lt;i class="fa fa-chevron-left"&gt;&lt;/i&gt; &#123;&#123; post.prev.title &#125;&#125;</span></span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;span class="post-nav-divider"&gt;&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class="post-nav-prev post-nav-item"&gt;</span><br><span class="line"><span class="deletion">-      &#123;% if post.prev %&#125;</span></span><br><span class="line"><span class="addition">+      &#123;% if post.next %&#125;</span></span><br><span class="line"><span class="deletion">-        &lt;a href="&#123;&#123; url_for(post.prev.path) &#125;&#125;" rel="prev" title="&#123;&#123; post.prev.title &#125;&#125;"&gt;</span></span><br><span class="line"><span class="addition">+        &lt;a href="&#123;&#123; url_for(post.next.path) &#125;&#125;" rel="next" title="&#123;&#123; post.next.title &#125;&#125;"&gt;</span></span><br><span class="line"><span class="deletion">-          &#123;&#123; post.prev.title &#125;&#125; &lt;i class="fa fa-chevron-right"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="addition">+          &#123;&#123; post.next.title &#125;&#125; &lt;i class="fa fa-chevron-right"&gt;&lt;/i&gt;</span></span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><div class="note info">
            <p>不同版本的 Hexo 和 Next 主题之间配置项可能存在差异，本系列文章中的配置有效性以 Hexo v3.7.1和 Next v6.4.2 为准。</p>
          </div>

<p>至此你已经在本地搭建起了 Hexo 博客，更换到了 Next 主题，并对站点进行了一些基本的自定义配置，看起来已经是一个可以正常使用的站点了。但可能仅仅这样还无法满足你的高级需求，你可以关注本系列的后续几篇文章，将分别从不同的角度一步步的帮助你搭建一个功能更加强大，界面更加优雅的个人博客站点：</p>
<ul>
<li>想要了解和写作有关的语法技巧，请参考本系列中的 。</li>
<li>想要进一步美化主题，添加动效及交互，请参考本系列中的 。</li>
<li>想要深度定制个性化站点，请参考本系列中的 。</li>
<li>想要了解如何将站点部署到公网，请参考本系列中的 </li>
</ul>
<div class="reference-linking">参考链接</div>

<ul>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a></li>
<li><a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT使用文档</a> （部分章节与 v6.x 配置不兼容）</li>
<li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">reuixiy | 打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</a></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
