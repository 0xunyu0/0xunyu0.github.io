<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>Time - C</title>
  
  <subtitle>Time - Container</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://myblog.iolab.top/"/>
  <updated>2019-10-25T12:26:47.000Z</updated>
  <id>https://myblog.iolab.top/</id>
  
  <author>
    <name>staySample</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第 15 章 Java 网络编程</title>
    <link href="https://myblog.iolab.top/java-base-course-15-Java-network-programming/"/>
    <id>https://myblog.iolab.top/java-base-course-15-Java-network-programming/</id>
    <published>2019-10-25T12:26:47.000Z</published>
    <updated>2019-10-25T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 15 章 Java 网络编程&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 14 章 Java 多线程编程</title>
    <link href="https://myblog.iolab.top/java-base-course-14-Java-multithreading/"/>
    <id>https://myblog.iolab.top/java-base-course-14-Java-multithreading/</id>
    <published>2019-10-24T12:26:47.000Z</published>
    <updated>2019-10-24T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 14 章 Java 多线程编程&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 13 章 Java 输入/输出（I/O）流</title>
    <link href="https://myblog.iolab.top/java-base-course-13-Java-input-output-flow/"/>
    <id>https://myblog.iolab.top/java-base-course-13-Java-input-output-flow/</id>
    <published>2019-10-23T12:26:47.000Z</published>
    <updated>2019-10-23T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 13 章 Java 输入/输出（I/O）流&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 12 章 Java 反射机制</title>
    <link href="https://myblog.iolab.top/java-base-course-12-Java-reflection-mechanism/"/>
    <id>https://myblog.iolab.top/java-base-course-12-Java-reflection-mechanism/</id>
    <published>2019-10-22T12:26:47.000Z</published>
    <updated>2019-10-22T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 12 章 Java 反射机制&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 11 章 Java 集合、泛型和枚举</title>
    <link href="https://myblog.iolab.top/java-base-course-11-Java-collection-generics-and-enumerations/"/>
    <id>https://myblog.iolab.top/java-base-course-11-Java-collection-generics-and-enumerations/</id>
    <published>2019-10-21T12:26:47.000Z</published>
    <updated>2019-10-21T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 11 章 Java 集合、泛型和枚举&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 10 章 Java 异常处理</title>
    <link href="https://myblog.iolab.top/java-base-course-10-Java-exception-handling/"/>
    <id>https://myblog.iolab.top/java-base-course-10-Java-exception-handling/</id>
    <published>2019-10-20T12:26:47.000Z</published>
    <updated>2019-10-20T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 10 章 Java 异常处理&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 9 章 Java 继承和多态</title>
    <link href="https://myblog.iolab.top/java-base-course-9-Java-inheritance-and-polymorphism/"/>
    <id>https://myblog.iolab.top/java-base-course-9-Java-inheritance-and-polymorphism/</id>
    <published>2019-10-19T12:26:47.000Z</published>
    <updated>2019-10-19T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 9 章 Java 继承和多态&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 8 章 Java 类和对象</title>
    <link href="https://myblog.iolab.top/java-base-course-8-Java-classes-and-objects/"/>
    <id>https://myblog.iolab.top/java-base-course-8-Java-classes-and-objects/</id>
    <published>2019-10-18T12:26:47.000Z</published>
    <updated>2019-10-18T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 8 章 Java 类和对象&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 7 章 Java 数组处理</title>
    <link href="https://myblog.iolab.top/java-base-course-7-Java-array-processing/"/>
    <id>https://myblog.iolab.top/java-base-course-7-Java-array-processing/</id>
    <published>2019-10-17T12:26:47.000Z</published>
    <updated>2019-10-17T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;第 7 章 Java 数组处理&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 1 节 Java Object 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-1/"/>
    <id>https://myblog.iolab.top/java-base-course-6-1/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;Java Object 类详解： Object 类的常用方法（equals() 和 getClass()）&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 2 节 Java Integer 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-2/"/>
    <id>https://myblog.iolab.top/java-base-course-6-2/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Integer 类在对象中包装了一个基本类型 int 的值。Integer 类对象包含一个 int 类型的字段。此外，该类提供了多个方法，能在 int 类型和 String 类型之间互相转换，还提供了处理 int 类型时非常有用的其他一些常量和方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 3 节 Java Float 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-3/"/>
    <id>https://myblog.iolab.top/java-base-course-6-3/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Float 类在对象中包装了一个基本类型 float 的值。Float 类对象包含一个 float 类型的字段。此外，该类提供了多个方法，能在 float 类型与 String 类型之间互相转换，同时还提供了处理 float 类型时比较常用的常量和方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 4 节 Java Double 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-4/"/>
    <id>https://myblog.iolab.top/java-base-course-6-4/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Double 类在对象中包装了一个基本类型 double 的值。Double 类对象包含一个 double 类型的字段。此外，该类还提供了多个方法，可以将 double 类型与 String 类型相互转换，同时 还提供了处理 double 类型时比较常用的常量和方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 5 节 Java Number 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-5/"/>
    <id>https://myblog.iolab.top/java-base-course-6-5/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Number 是一个抽象类，也是一个超类（即父类）。Number 类属于 java.lang 包，所有的包装类（如 Double、Float、Byte、Short、Integer 以及 Long）都是抽象类 Number 的子类。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 6 节 Java Character 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-6/"/>
    <id>https://myblog.iolab.top/java-base-course-6-6/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Character 类是字符数据类型 char 的包装类。Character 类的对象包含类型为 char 的单个字段，这样能把基本数据类型当对象来处理，其常用方法如表 1 所示。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 7 节 Java Boolean 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-7/"/>
    <id>https://myblog.iolab.top/java-base-course-6-7/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Boolean 类将基本类型为 boolean 的值包装在一个对象中。一个 Boolean 类的对象只包含一个类型为 boolean 的字段。此外，此类还为 boolean 和 String 的相互转换提供了很多方法，并提供了处理 boolean 时非常有用的其他一些常用方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 8 节 Java Byte 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-8/"/>
    <id>https://myblog.iolab.top/java-base-course-6-8/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Byte 类将基本类型为 byte 的值包装在一个对象中。一个 Byte 类的对象只包含一个类型为 byte 的字段。此外，该类还为 byte 和 String 的相互转换提供了方法，并提供了一些处理 byte 时非常有用的常量和方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 9 节 Java System 类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-9/"/>
    <id>https://myblog.iolab.top/java-base-course-6-9/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;System 类位于 java.lang 包，代表当前 Java 程序的运行平台，系统级的很多属性和控制方法都放置在该类的内部。由于该类的构造方法是 private 的，所以无法创建该类的对象，也就是无法实例化该类。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 6 章 Java 内置的包装类</title>
    <link href="https://myblog.iolab.top/java-base-course-6-Java-built-in-wrapper-class/"/>
    <id>https://myblog.iolab.top/java-base-course-6-Java-built-in-wrapper-class/</id>
    <published>2019-10-16T12:26:47.000Z</published>
    <updated>2019-10-16T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Java 是一种面向对象的编程语言，Java 中的类把方法与数据类型连接在一起，构成了自包含式的处理单元。但在 Java 中不能定义基本类型对象，为了能将基本类型视为对象处理，并能连接相关方法，Java 为每个基本类型都提供了包装类，如 int 型数值的包装类 Integer，boolean 型数值的包装类 Boolean 等。这样便可以把这些基本类型转换为对象来处理了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第 1 节 Java Math 类的常用方法</title>
    <link href="https://myblog.iolab.top/java-base-course-5-1/"/>
    <id>https://myblog.iolab.top/java-base-course-5-1/</id>
    <published>2019-10-15T12:26:47.000Z</published>
    <updated>2019-10-15T12:26:47.000Z</updated>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;Java 中的 +、-、*、/ 和 % 等基本算术运算符不能进行更复杂的数学运算，例如，三角函数、对数运算、指数运算等。于是 Java 提供了 Math 工具类来完成这些复杂的运算。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/categories/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/categories/Java/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://myblog.iolab.top/tags/Java/"/>
    
      <category term="Java基础教程" scheme="https://myblog.iolab.top/tags/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
